# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-03 08:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy, no-wrap
msgid "OpenID Connect (OIDC) Bearer token authentication"
msgstr "OpenID Connect (OIDC) Autenticación con token de portador"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Secure HTTP access to Jakarta REST (formerly known as JAX-RS) endpoints in your application with Bearer token authentication by using the Quarkus OpenID Connect (OIDC) extension."
msgstr "Asegure el acceso HTTP a los puntos finales de Jakarta REST (antes conocido como JAX-RS) en su aplicación con autenticación mediante token de portador utilizando la extensión OpenID Connect (OIDC) de Quarkus."

#. type: Title ==
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy, no-wrap
msgid "Overview of the Bearer token authentication mechanism in Quarkus"
msgstr "Visión general del mecanismo de autenticación con token portador en Quarkus"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Quarkus supports the Bearer token authentication mechanism through the Quarkus OpenID Connect (OIDC) extension."
msgstr "Quarkus admite el mecanismo de autenticación de token de portador a través de la extensión OpenID Connect (OIDC) de Quarkus."

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The bearer tokens are issued by OIDC and OAuth 2.0 compliant authorization servers, such as link:https://www.keycloak.org[Keycloak]."
msgstr "Los tokens portadores son emitidos por servidores de autorización compatibles con OIDC y OAuth 2.0, como link:https://www.keycloak.org[Keycloak] ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Bearer token authentication is the process of authorizing HTTP requests based on the existence and validity of a bearer token.\n"
"The bearer token provides information about the subject of the call, which is used to determine whether or not an HTTP resource can be accessed."
msgstr "La autenticación con token de portador es el proceso de autorización de las solicitudes HTTP basado en la existencia y validez de un token de portador. El token de portador proporciona información sobre el sujeto de la llamada, que se utiliza para determinar si se puede acceder o no a un recurso HTTP."

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The following diagrams outline the Bearer token authentication mechanism in Quarkus:"
msgstr "Los siguientes diagramas esbozan el mecanismo de autenticación del token portador en Quarkus:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Bearer token authentication mechanism in Quarkus with single-page application"
msgstr "Mecanismo de autenticación mediante token portador en Quarkus con aplicación de una sola página"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"The Quarkus service retrieves verification keys from the OIDC provider.\n"
"The verification keys are used to verify the bearer access token signatures."
msgstr "El servicio Quarkus recupera las claves de verificación del proveedor OIDC. Las claves de verificación se utilizan para verificar las firmas del token de acceso al portador."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Quarkus user accesses the single-page application (SPA)."
msgstr "El usuario de Quarkus accede a la aplicación de página única (SPA)."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The single-page application uses Authorization Code Flow to authenticate the user and retrieve tokens from the OIDC provider."
msgstr "La aplicación de una sola página utiliza el flujo de código de autorización para autenticar al usuario y recuperar los tokens del proveedor OIDC."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The single-page application uses the access token to retrieve the service data from the Quarkus service."
msgstr "La aplicación de una sola página utiliza el token de acceso para recuperar los datos del servicio de Quarkus."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Quarkus service verifies the bearer access token signature by using the verification keys, checks the token expiry date and other claims, allows the request to proceed if the token is valid, and returns the service response to the single-page application."
msgstr "El servicio Quarkus verifica la firma del token de acceso del portador mediante las claves de verificación, comprueba la fecha de caducidad del token y otras afirmaciones, permite que la solicitud siga adelante si el token es válido y devuelve la respuesta del servicio a la aplicación de una sola página."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The single-page application returns the same data to the Quarkus user."
msgstr "La aplicación de una sola página devuelve los mismos datos al usuario de Quarkus."

#. type: Block title
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy, no-wrap
msgid "Bearer token authentication mechanism in Quarkus with Java or command line client"
msgstr "Mecanismo de autenticación mediante token portador en Quarkus con Java o cliente de línea de comandos"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The client uses `client_credentials` that requires client id and secret or password grant, which requires client id, secret, username, and password to retrieve the access token from the OIDC provider."
msgstr "El cliente utiliza `client_credentials` que requiere id de cliente y secreto o concesión de contraseña, que requiere id de cliente, secreto, nombre de usuario y contraseña para recuperar el token de acceso del proveedor de OIDC."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The client uses the access token to retrieve the service data from the Quarkus service."
msgstr "El cliente utiliza el token de acceso para recuperar los datos del servicio de Quarkus."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The Quarkus service verifies the bearer access token signature by using the verification keys, checks the token expiry date and other claims, allows the request to proceed if the token is valid, and returns the service response to the client."
msgstr "El servicio Quarkus verifica la firma del token de acceso al portador utilizando las claves de verificación, comprueba la fecha de caducidad del token y otras afirmaciones, permite que la solicitud proceda si el token es válido y devuelve la respuesta del servicio al cliente."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If you need to authenticate and authorize users by using OIDC authorization code flow, see the Quarkus xref:security-oidc-code-flow-authentication.adoc[OpenID Connect authorization code flow mechanism for protecting web applications] guide.\n"
"Also, if you use Keycloak and bearer tokens, see the Quarkus xref:security-keycloak-authorization.adoc[Using Keycloak to centralize authorization] guide."
msgstr "Si necesita autenticar y autorizar usuarios utilizando el xref:security-oidc-code-flow-authentication.adoc[flujo de código de] autorización de OIDC, consulte la guía de Quarkus xref:security-oidc-code-flow-authentication.adoc[Mecanismo de flujo de código de autorización de OpenID Connect para proteger aplicaciones web] . Además, si utiliza Keycloak y tokens portadores, consulte la guía Quarkus xref:security-keycloak-authorization.adoc[Uso de Keycloak para centralizar la autorización] ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"To learn about how you can protect service applications by using OIDC Bearer token authentication, see the following tutorial:\n"
"* xref:security-oidc-bearer-token-authentication-tutorial.adoc[Protect a web application by using OpenID Connect (OIDC) authorization code flow]."
msgstr "Para saber cómo puede proteger las aplicaciones de servicios utilizando la autenticación mediante token de portador OIDC, consulte el siguiente tutorial: * Proteja xref:security-oidc-bearer-token-authentication-tutorial.adoc[una aplicación web utilizando el flujo de código de autorización de OpenID Connect (OIDC] )."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For information about how to support multiple tenants, see the Quarkus xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy] guide."
msgstr "Para obtener información sobre cómo admitir varios inquilinos, consulte la guía Quarkus xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy] ."

#. type: Title ===
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy, no-wrap
msgid "Accessing JWT claims"
msgstr "Acceso a las reclamaciones JWT"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you need to access JWT token claims, you can inject `JsonWebToken`:"
msgstr "Si necesita acceder a reclamaciones de token JWT, puede inyectar `JsonWebToken` :"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Injection of `JsonWebToken` is supported in `@ApplicationScoped`, `@Singleton`, and `@RequestScoped` scopes.\n"
"However, the use of `@RequestScoped` is required if the individual claims are injected as simple types.\n"
"For more information, see the xref:security-jwt.adoc#supported-injection-scopes[Supported injection scopes] section of the Quarkus \"Using JWT RBAC\" guide."
msgstr "Se admite la inyección de `JsonWebToken` en los ámbitos `@ApplicationScoped` , `@Singleton` y `@RequestScoped` . Sin embargo, se requiere el uso de `@RequestScoped` si las demandas individuales se inyectan como tipos simples. Para más información, consulte la sección Ámbitos de inyección xref:security-jwt.adoc#supported-injection-scopes[admitidos] de la guía de Quarkus \"Uso de JWT RBAC\"."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`UserInfo`"
msgstr "`UserInfo`"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If you must request a UserInfo JSON object from the OIDC `UserInfo` endpoint, set `quarkus.oidc.authentication.user-info-required=true`.\n"
"A request is sent to the OIDC provider `UserInfo` endpoint, and an `io.quarkus.oidc.UserInfo` (a simple `javax.json.JsonObject` wrapper) object is created.\n"
"`io.quarkus.oidc.UserInfo` can be injected or accessed as a `SecurityIdentity` `userinfo` attribute."
msgstr "Si debe solicitar un objeto JSON UserInfo al punto final OIDC `UserInfo` , establezca `quarkus.oidc.authentication.user-info-required=true` . Se envía una solicitud al punto final del proveedor de OIDC `UserInfo` , y se crea un objeto `io.quarkus.oidc.UserInfo` (un simple envoltorio de `javax.json.JsonObject` ). `io.quarkus.oidc.UserInfo` puede inyectarse o accederse a él como un atributo `SecurityIdentity` `userinfo` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Configuration metadata"
msgstr "Metadatos de configuración"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The current tenant's discovered link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[OpenID Connect Configuration Metadata] is represented by `io.quarkus.oidc.OidcConfigurationMetadata` and can be injected or accessed as a `SecurityIdentity` `configuration-metadata` attribute."
msgstr "Los link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[metadatos de configuración de OpenID Connect] descubiertos del inquilino actual están representados por `io.quarkus.oidc.OidcConfigurationMetadata` y se puede inyectar o acceder a ellos como atributo `SecurityIdentity` `configuration-metadata` ."

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The default tenant's `OidcConfigurationMetadata` is injected if the endpoint is public."
msgstr "La dirección `OidcConfigurationMetadata` del inquilino por defecto se inyecta si el punto final es público."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Token claims and SecurityIdentity roles"
msgstr "Reclamaciones de token y roles SecurityIdentity"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You can map `SecurityIdentity` roles from the verified JWT access tokens as follows:"
msgstr "Puede asignar los roles de `SecurityIdentity` a partir de los tokens de acceso JWT verificados del siguiente modo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If the `quarkus.oidc.roles.role-claim-path` property is set, and matching array or string claims are found, then the roles are extracted from these claims.\n"
"For example, `customroles`, `customroles/array`, `scope`, `\"http://namespace-qualified-custom-claim\"/roles`, `\"http://namespace-qualified-roles\"`."
msgstr "Si se establece la propiedad `quarkus.oidc.roles.role-claim-path` y se encuentran declaraciones de matrices o cadenas coincidentes, los roles se extraen de estas declaraciones. Por ejemplo, `customroles` , `customroles/array` , `scope` , `\"http://namespace-qualified-custom-claim\"/roles` , `\"http://namespace-qualified-roles\"` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If a `groups` claim is available, then its value is used."
msgstr "Si se dispone de una reclamación en `groups` , se utiliza su valor."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If a `realm_access/roles` or `resource_access/client_id/roles` (where `client_id` is the value of the `quarkus.oidc.client-id` property) claim is available, then its value is used.\n"
"This check supports the tokens issued by Keycloak."
msgstr "Si se dispone de una declaración `realm_access/roles` o `resource_access/client_id/roles` (donde `client_id` es el valor de la propiedad `quarkus.oidc.client-id` ), se utiliza su valor. Esta comprobación es compatible con los tokens emitidos por Keycloak."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For example, the following JWT token has a complex `groups` claim that contains a `roles` array that includes roles:"
msgstr "Por ejemplo, el siguiente token JWT tiene una demanda compleja `groups` que contiene una matriz `roles` que incluye roles:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You must map the `microprofile_jwt_user` role to `SecurityIdentity` roles, and you can do so with this configuration: `quarkus.oidc.roles.role-claim-path=groups/roles`."
msgstr "Debe asignar el rol `microprofile_jwt_user` a los roles `SecurityIdentity` , y puede hacerlo con esta configuración: `quarkus.oidc.roles.role-claim-path=groups/roles` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If the token is opaque (binary), then a `scope` property from the remote token introspection response is used."
msgstr "Si el token es opaco (binario), se utiliza una propiedad `scope` de la respuesta de introspección del token remoto."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If `UserInfo` is the source of the roles, then set `quarkus.oidc.authentication.user-info-required=true` and `quarkus.oidc.roles.source=userinfo`, and if needed, set `quarkus.oidc.roles.role-claim-path`."
msgstr "Si `UserInfo` es la fuente de los roles, entonces establezca `quarkus.oidc.authentication.user-info-required=true` y `quarkus.oidc.roles.source=userinfo` , y si es necesario, establezca `quarkus.oidc.roles.role-claim-path` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Additionally, a custom `SecurityIdentityAugmentor` can also be used to add the roles.\n"
"For more information, see the xref:security-customization.adoc#security-identity-customization[Security identity customization] section of the Quarkus \"Security tips and tricks\" guide."
msgstr "Además, también se puede utilizar un `SecurityIdentityAugmentor` personalizado para añadir los roles. Para más información, consulte la sección xref:security-customization.adoc#security-identity-customization[Personalización de la identidad de seguridad] de la guía \"Consejos y trucos de seguridad\" de Quarkus."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You can also map `SecurityIdentity` roles created from token claims to deployment-specific roles by using the xref:security-authorize-web-endpoints-reference.adoc#map-security-identity-roles[HTTP Security policy]."
msgstr "También puede asignar roles de `SecurityIdentity` creados a partir de reclamaciones de token a roles específicos del despliegue utilizando la xref:security-authorize-web-endpoints-reference.adoc#map-security-identity-roles[política de seguridad HTTP] ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Token scopes and SecurityIdentity permissions"
msgstr "Ámbitos de token y permisos de SecurityIdentity"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
msgid "`SecurityIdentity` permissions are mapped in the form of `io.quarkus.security.StringPermission` from the scope parameter of the <<token-claims-and-security-identity-roles,source of the roles>> and using the same claim separator."
msgstr ""

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Only requests with OpenID Connect scope `email` will be granted access."
msgstr "Sólo se concederá acceso a las solicitudes con alcance OpenID Connect `email` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The read access is limited to the client requests with the `orders_read` scope."
msgstr "El acceso de lectura está limitado a las solicitudes de los clientes con el ámbito `orders_read` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For more information about the `io.quarkus.security.PermissionsAllowed` annotation, see the xref:security-authorize-web-endpoints-reference.adoc#permission-annotation[Permission annotation] section of the \"Authorization of web endpoints\" guide."
msgstr "Si desea más información sobre la anotación `io.quarkus.security.PermissionsAllowed` , consulte la sección xref:security-authorize-web-endpoints-reference.adoc#permission-annotation[Anotación de permiso] de la guía \"Autorización de puntos finales web\"."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Token verification and introspection"
msgstr "Verificación de tokens e introspección"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If the token is a JWT token, then, by default, it is verified with a `JsonWebKey` (JWK) key from a local `JsonWebKeySet`, retrieved from the OIDC provider's JWK endpoint.\n"
"The token's key identifier (`kid`) header value is used to find the matching JWK key.\n"
"If no matching `JWK` is available locally, then `JsonWebKeySet` is refreshed by fetching the current key set from the JWK endpoint.\n"
"The `JsonWebKeySet` refresh can be repeated only after the `quarkus.oidc.token.forced-jwk-refresh-interval` expires.\n"
"The default expiry time is 10 minutes.\n"
"If no matching `JWK` is available after the refresh, the JWT token is sent to the OIDC provider's token introspection endpoint."
msgstr "Si el token es un token JWT, entonces, por defecto, se verifica con una clave `JsonWebKey` (JWK) de un `JsonWebKeySet` local, recuperada del punto final JWK del proveedor de OIDC. El valor de la cabecera del identificador de clave del token ( `kid` ) se utiliza para encontrar la clave JWK coincidente. Si no hay ninguna `JWK` que coincida disponible localmente, entonces se actualiza `JsonWebKeySet` recuperando el conjunto de claves actual del punto final JWK. La actualización de `JsonWebKeySet` puede repetirse sólo después de que caduque `quarkus.oidc.token.forced-jwk-refresh-interval` . El tiempo de expiración por defecto es de 10 minutos. Si no hay ningún `JWK` coincidente disponible después de la actualización, el token JWT se envía al punto final de introspección de tokens del proveedor de OIDC."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If the token is opaque, which means it can be a binary token or an encrypted JWT token, then it is always sent to the OIDC provider's token introspection endpoint."
msgstr "Si el token es opaco, lo que significa que puede ser un token binario o un token JWT encriptado, entonces siempre se envía al punto final de introspección de tokens del proveedor de OIDC."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you work only with JWT tokens and expect a matching `JsonWebKey` to always be available, for example, after refreshing a key set, you must disable token introspection, as shown in the following example:"
msgstr "Si sólo trabaja con tokens JWT y espera que un `JsonWebKey` coincidente esté siempre disponible, por ejemplo, después de actualizar un conjunto de claves, debe desactivar la introspección de tokens, como se muestra en el siguiente ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"There might be cases where JWT tokens must be verified through introspection only, which can be forced by configuring an introspection endpoint address only.\n"
"The following properties configuration shows you an example of how you can achieve this with Keycloak:"
msgstr "Puede haber casos en los que los tokens JWT deban verificarse únicamente mediante introspección, lo que puede forzarse configurando únicamente una dirección de punto final de introspección. La siguiente configuración de propiedades le muestra un ejemplo de cómo puede lograr esto con Keycloak:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"There are advantages and disadvantages to indirectly enforcing the introspection of JWT tokens remotely.\n"
"An advantage is that you eliminate the need for two remote calls: a remote OIDC metadata discovery call followed by another remote call to fetch the verification keys that will not be used.\n"
"A disadvantage is that you need to know the introspection endpoint address and configure it manually."
msgstr "Aplicar indirectamente la introspección de tokens JWT de forma remota tiene ventajas y desventajas. Una ventaja es que elimina la necesidad de dos llamadas remotas: una llamada remota de descubrimiento de metadatos OIDC seguida de otra llamada remota para obtener las claves de verificación que no se utilizarán. Una desventaja es que necesita conocer la dirección del punto final de introspección y configurarlo manualmente."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The alternative approach is to allow the default option of OIDC metadata discovery but also require that only the remote JWT introspection is performed, as shown in the following example:"
msgstr "El enfoque alternativo consiste en permitir la opción por defecto de descubrimiento de metadatos OIDC, pero también exigir que sólo se realice la introspección JWT remota, como se muestra en el siguiente ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"An advantage of this approach is that the configuration is simpler and easier to understand.\n"
"A disadvantage is that a remote OIDC metadata discovery call is required to discover an introspection endpoint address, even though the verification keys will not be fetched."
msgstr "Una ventaja de este enfoque es que la configuración es más sencilla y fácil de entender. Una desventaja es que se requiere una llamada remota de descubrimiento de metadatos OIDC para descubrir una dirección de punto final de introspección, aunque no se obtendrán las claves de verificación."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"The `io.quarkus.oidc.TokenIntrospection`, a simple `jakarta.json.JsonObject` wrapper object, will be created.\n"
"It can be injected or accessed as a `SecurityIdentity` `introspection` attribute, providing either the JWT or opaque token has been successfully introspected."
msgstr "Se creará el `io.quarkus.oidc.TokenIntrospection` , un simple objeto envoltorio `jakarta.json.JsonObject` . Se puede inyectar o acceder a él como un atributo `SecurityIdentity` `introspection` , siempre que se haya introspeccionado correctamente el JWT o el token opaco."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Token introspection and `UserInfo` cache"
msgstr "Introspección de tokens y caché `UserInfo` "

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"All opaque access tokens must be remotely introspected.\n"
"Sometimes, JWT access tokens might also have to be introspected.\n"
"If `UserInfo` is also required, the same access token is used in a subsequent remote call to the OIDC provider.\n"
"So, if `UserInfo` is required, and the current access token is opaque, two remote calls are made for every such token; one remote call to introspect the token and another to get `UserInfo`.\n"
"If the token is JWT, only a single remote call to get `UserInfo` is needed, unless it also has to be introspected."
msgstr "Todos los tokens de acceso opacos deben ser introspeccionados remotamente. A veces, los tokens de acceso JWT también deben ser introspeccionados. Si también se requiere `UserInfo` , se utilizará el mismo token de acceso en una llamada remota posterior al proveedor de OIDC. Así, si se requiere `UserInfo` , y el token de acceso actual es opaco, se realizan dos llamadas remotas por cada token de este tipo; una llamada remota para introspeccionar el token y otra para obtener `UserInfo` . Si el token es JWT, sólo se necesita una única llamada remota para obtener `UserInfo` , a menos que también tenga que ser introspeccionado."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The cost of making up to two remote calls for every incoming bearer or code flow access token can sometimes be problematic."
msgstr "El coste de realizar hasta dos llamadas remotas por cada token de acceso al flujo de código o portador entrante puede resultar a veces problemático."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If this is the case in production, consider caching the token introspection and `UserInfo` data for a short period, for example, 3 or 5 minutes."
msgstr "Si este es el caso en producción, considere la posibilidad de almacenar en caché los datos de introspección de tokens y `UserInfo` durante un breve periodo, por ejemplo, 3 ó 5 minutos."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"`quarkus-oidc` provides `quarkus.oidc.TokenIntrospectionCache` and `quarkus.oidc.UserInfoCache` interfaces, usable for `@ApplicationScoped` cache implementation.\n"
"Use `@ApplicationScoped` cache implementation to store and retrieve `quarkus.oidc.TokenIntrospection` and/or `quarkus.oidc.UserInfo` objects, as outlined in the following example:"
msgstr "`quarkus-oidc` proporciona las interfaces `quarkus.oidc.TokenIntrospectionCache` y `quarkus.oidc.UserInfoCache` , utilizables para la implementación de la caché `@ApplicationScoped` . Utilice la implementación de la caché `@ApplicationScoped` para almacenar y recuperar objetos `quarkus.oidc.TokenIntrospection` y/o `quarkus.oidc.UserInfo` , como se indica en el siguiente ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Each OIDC tenant can either permit or deny the storing of its `quarkus.oidc.TokenIntrospection` data, `quarkus.oidc.UserInfo` data, or both with boolean `quarkus.oidc.\"tenant\".allow-token-introspection-cache` and `quarkus.oidc.\"tenant\".allow-user-info-cache` properties."
msgstr "Cada arrendatario OIDC puede permitir o denegar el almacenamiento de sus datos `quarkus.oidc.TokenIntrospection` , `quarkus.oidc.UserInfo` o ambos con las propiedades booleanas `quarkus.oidc.\"tenant\".allow-token-introspection-cache` y `quarkus.oidc.\"tenant\".allow-user-info-cache` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Additionally, `quarkus-oidc` provides a simple default memory-based token cache, which implements both `quarkus.oidc.TokenIntrospectionCache` and `quarkus.oidc.UserInfoCache` interfaces."
msgstr "Además, `quarkus-oidc` proporciona una sencilla caché de fichas basada en memoria por defecto, que implementa las interfaces `quarkus.oidc.TokenIntrospectionCache` y `quarkus.oidc.UserInfoCache` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You can configure and activate the default OIDC token cache as follows:"
msgstr "Puede configurar y activar la caché de fichas OIDC por defecto del siguiente modo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"The default cache uses a token as a key, and each entry can have `TokenIntrospection`, `UserInfo`, or both.\n"
"It will only keep up to a `max-size` number of entries.\n"
"If the cache is already full when a new entry is to be added, an attempt is made to find a space by removing a single expired entry.\n"
"Additionally, the cleanup timer, if activated, periodically checks for expired entries and removes them."
msgstr "La caché por defecto utiliza un token como clave, y cada entrada puede tener `TokenIntrospection` , `UserInfo` , o ambos. Sólo guardará hasta un número de entradas de `max-size` . Si la caché ya está llena cuando se va a añadir una nueva entrada, se intenta encontrar un hueco eliminando una única entrada caducada. Además, el temporizador de limpieza, si está activado, comprueba periódicamente si hay entradas caducadas y las elimina."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You can experiment with the default cache implementation or register a custom one."
msgstr "Puede experimentar con la implementación de caché predeterminada o registrar una personalizada."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "JSON Web Token claim verification"
msgstr "Verificación de reclamaciones con token web JSON"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "After the bearer JWT token's signature has been verified and its `expires at` (`exp`) claim has been checked, the `iss` (`issuer`) claim value is verified next."
msgstr "Una vez verificada la firma del token JWT portador y comprobada su reivindicación `expires at` ( `exp` ), se verifica a continuación el valor de la reivindicación `iss` ( `issuer` )."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"By default, the `iss` claim value is compared to the `issuer` property, which might have been discovered in the well-known provider configuration.\n"
"However, if the `quarkus.oidc.token.issuer` property is set, then the `iss` claim value is compared to it instead."
msgstr "Por defecto, el valor de reclamación `iss` se compara con la propiedad `issuer` , que puede haber sido descubierta en la configuración del proveedor conocido. Sin embargo, si la propiedad `quarkus.oidc.token.issuer` está configurada, entonces el valor de reclamación `iss` se compara con ella en su lugar."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"In some cases, this `iss` claim verification might not work.\n"
"For example, if the discovered `issuer` property contains an internal HTTP/IP address while the token `iss` claim value contains an external HTTP/IP address.\n"
"Or when a discovered `issuer` property contains the template tenant variable, but the token `iss` claim value has the complete tenant-specific issuer value."
msgstr "En algunos casos, esta verificación de la reivindicación `iss` podría no funcionar. Por ejemplo, si la propiedad `issuer` descubierta contiene una dirección HTTP/IP interna mientras que el valor de reclamación del testigo `iss` contiene una dirección HTTP/IP externa. O cuando una propiedad `issuer` descubierta contiene la variable del inquilino de la plantilla, pero el valor de reclamación del testigo `iss` tiene el valor completo del emisor específico del inquilino."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"In such cases, consider skipping the issuer verification by setting `quarkus.oidc.token.issuer=any`.\n"
"Only skip the issuer verification if no other options are available:"
msgstr "En tales casos, considere la posibilidad de omitir la verificación del emisor configurando `quarkus.oidc.token.issuer=any` . Sólo omita la verificación del emisor si no dispone de otras opciones:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you are using Keycloak and observe the issuer verification errors caused by the different host addresses, configure Keycloak with a `KEYCLOAK_FRONTEND_URL` property to ensure the same host address is used."
msgstr "Si utiliza Keycloak y observa los errores de verificación del emisor causados por las diferentes direcciones de host, configure Keycloak con una propiedad `KEYCLOAK_FRONTEND_URL` para asegurarse de que se utiliza la misma dirección de host."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If the `iss` property is tenant-specific in a multitenant deployment, use the `SecurityIdentity` `tenant-id` attribute to check that the issuer is correct in the endpoint or the custom Jakarta filter.\n"
"For example:"
msgstr "Si la propiedad `iss` es específica del inquilino en un despliegue multiinquilino, utilice el atributo `SecurityIdentity` `tenant-id` para comprobar que el emisor es correcto en el endpoint o en el filtro personalizado de Jakarta. Por ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Consider using the `quarkus.oidc.token.audience` property to verify the token `aud` (`audience`) claim value."
msgstr "Considere la posibilidad de utilizar la propiedad `quarkus.oidc.token.audience` para verificar el valor de la declaración token `aud` ( `audience` )."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Single-page applications"
msgstr "Aplicaciones de una sola página"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "A single-page application (SPA) typically uses `XMLHttpRequest`(XHR) and the JavaScript utility code provided by the OIDC provider to acquire a bearer token to access Quarkus `service` applications."
msgstr "Una aplicación de una sola página (SPA) suele utilizar `XMLHttpRequest` (XHR) y el código de utilidad JavaScript proporcionado por el proveedor de OIDC para adquirir un token de portador para acceder a las aplicaciones de Quarkus `service` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For example, if you work with Keycloak, you can use `keycloak.js` to authenticate users and refresh the expired tokens from the SPA:"
msgstr "Por ejemplo, si trabaja con Keycloak, puede utilizar `keycloak.js` para autenticar a los usuarios y actualizar los tokens caducados desde el SPA:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Cross-origin resource sharing"
msgstr "Compartir recursos entre orígenes"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"If you plan to use your OIDC `service` application from a single-page application running on a different domain, you must configure cross-origin resource sharing (CORS).\n"
"For more information, see the xref:security-cors.adoc#cors-filter[CORS filter] section of the \"Cross-origin resource sharing\" guide."
msgstr "Si tiene previsto utilizar su aplicación OIDC `service` desde una aplicación de una sola página que se ejecute en un dominio diferente, deberá configurar el uso compartido de recursos entre orígenes (CORS). Para más información, consulte la sección del xref:security-cors.adoc#cors-filter[filtro] CORS de la guía \"Uso compartido de recursos entre orígenes\"."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Provider endpoint configuration"
msgstr "Configuración del punto final del proveedor"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "An OIDC `service` application needs to know the OIDC provider's token, `JsonWebKey` (JWK) set, and possibly `UserInfo` and introspection endpoint addresses."
msgstr "Una aplicación OIDC `service` necesita conocer el token del proveedor OIDC, el conjunto `JsonWebKey` (JWK) y, posiblemente, las direcciones `UserInfo` y del punto final de introspección."

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "By default, they are discovered by adding a `/.well-known/openid-configuration` path to the configured `quarkus.oidc.auth-server-url`."
msgstr "Por defecto, se descubren añadiendo una ruta `/.well-known/openid-configuration` a la configurada `quarkus.oidc.auth-server-url` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Alternatively, if the discovery endpoint is not available, or if you want to save on the discovery endpoint round-trip, you can disable the discovery and configure them with relative path values.\n"
"For example:"
msgstr "Alternativamente, si el punto final de descubrimiento no está disponible, o si desea ahorrar en el viaje de ida y vuelta del punto final de descubrimiento, puede desactivar el descubrimiento y configurarlos con valores de ruta relativos. Por ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Token propagation"
msgstr "Propagación de fichas"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For information about bearer access token propagation to the downstream services, see the xref:security-openid-connect-client-reference.adoc#token-propagation[Token propagation] section of the Quarkus \"OpenID Connect (OIDC) and OAuth2 client and filters reference\" guide."
msgstr "Para obtener información sobre la propagación del token de acceso al portador a los servicios descendentes, consulte la sección xref:security-openid-connect-client-reference.adoc#token-propagation[Propagación del token] de la guía de Quarkus \"OpenID Connect (OIDC) and OAuth2 client and filters reference\"."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "OIDC provider client authentication"
msgstr "Autenticación del cliente proveedor de OIDC"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.runtime.OidcProviderClient` is used when a remote request to an OIDC provider is required.\n"
"If introspection of the Bearer token is necessary, then `OidcProviderClient` must authenticate to the OIDC provider.\n"
"For more information about supported authentication options, see the  xref:security-oidc-code-flow-authentication.adoc#oidc-provider-client-authentication[OIDC provider client authentication] section in the Quarkus \"OpenID Connect authorization code flow mechanism for protecting web applications\" guide."
msgstr "`quarkus.oidc.runtime.OidcProviderClient` se utiliza cuando se requiere una solicitud remota a un proveedor de OIDC. Si es necesaria la introspección del token de portador, entonces `OidcProviderClient` debe autenticarse ante el proveedor de OIDC. Para obtener más información sobre las opciones de autenticación admitidas, consulte la sección de xref:security-oidc-code-flow-authentication.adoc#oidc-provider-client-authentication[autenticación del cliente] del proveedor de OIDC en la guía de Quarkus \"Mecanismo de flujo de código de autorización de OpenID Connect para la protección de aplicaciones web\"."

#. type: Title ===
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, no-wrap
msgid "Testing"
msgstr "Probando"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you have to test Quarkus OIDC service endpoints that require xref:security-keycloak-authorization.adoc[Keycloak authorization], follow the xref:security-keycloak-authorization.adoc#testing[Test Keycloak authorization] section."
msgstr "Si tiene que probar puntos finales del servicio OIDC de Quarkus que requieren xref:security-keycloak-authorization.adoc[autorización Keycloak] , siga la sección xref:security-keycloak-authorization.adoc#testing[Probar autorización Keycloak] ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You can begin testing by adding the following dependencies to your test project:"
msgstr "Puede comenzar las pruebas añadiendo las siguientes dependencias a su proyecto de pruebas:"

#. type: Block title
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "WireMock"
msgstr "WireMock"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Add the following dependencies to your test project:"
msgstr "Añada las siguientes dependencias a su proyecto de prueba:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Prepare the REST test endpoint and set `application.properties`.\n"
"For example:"
msgstr "Prepare el punto final de prueba REST y configure `application.properties` . Por ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Finally, write the test code.\n"
"For example:"
msgstr "Por último, escriba el código de prueba. Por ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"The `quarkus-test-oidc-server` extension includes a signing RSA private key file in a `JSON Web Key` (`JWK`) format and points to it with a `smallrye.jwt.sign.key.location` configuration property.\n"
"It allows you to sign the token by using a no-argument `sign()` operation."
msgstr "La extensión `quarkus-test-oidc-server` incluye un archivo de clave privada RSA de firma en formato `JSON Web Key` ( `JWK` ) y apunta a él con una propiedad de configuración `smallrye.jwt.sign.key.location` . Le permite firmar el testigo mediante una operación sin argumentos `sign()` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Testing your `quarkus-oidc` `service` application with `OidcWiremockTestResource` provides the best coverage because even the communication channel is tested against the WireMock HTTP stubs.\n"
"If you need to run a test with WireMock stubs that are not yet supported by `OidcWiremockTestResource`, you can inject a `WireMockServer` instance into the test class, as shown in the following example:"
msgstr "Probar su aplicación `quarkus-oidc` `service` con `OidcWiremockTestResource` proporciona la mejor cobertura porque incluso el canal de comunicación se prueba con los stubs HTTP de WireMock. Si necesita realizar una prueba con stubs de WireMock que aún no son compatibles con `OidcWiremockTestResource` , puede inyectar una instancia de `WireMockServer` en la clase de prueba, como se muestra en el siguiente ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`OidcWiremockTestResource` does not work with `@QuarkusIntegrationTest` against Docker containers because the WireMock server runs in the JVM that runs the test, which is inaccessible from the Docker container that runs the Quarkus application."
msgstr "`OidcWiremockTestResource` no funciona con `@QuarkusIntegrationTest` contra contenedores Docker porque el servidor WireMock se ejecuta en la JVM que ejecuta la prueba, que es inaccesible desde el contenedor Docker que ejecuta la aplicación Quarkus."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`OidcTestClient`"
msgstr "`OidcTestClient`"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you use SaaS OIDC providers, such as `Auth0`, and want to run tests against the test (development) domain or to run tests against a remote Keycloak test realm, if you already have `quarkus.oidc.auth-server-url` configured, you can use `OidcTestClient`."
msgstr "Si utiliza proveedores de OIDC SaaS, como `Auth0` , y desea ejecutar pruebas contra el dominio de prueba (desarrollo) o ejecutar pruebas contra un dominio de prueba Keycloak remoto, si ya tiene configurado `quarkus.oidc.auth-server-url` , puede utilizar `OidcTestClient` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For example, you have the following configuration:"
msgstr "Por ejemplo, usted tiene la siguiente configuración:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
msgid "To start, add the same dependency, `quarkus-test-oidc-server`, as described in the <<integration-testing-wiremock>> section."
msgstr ""

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Next, write the test code as follows:"
msgstr "A continuación, escriba el código de prueba como sigue:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"This test code acquires a token by using a `password` grant from the test `Auth0` domain, which has registered an application with the client id `test-auth0-client`, and created the user `alice` with password `alice`.\n"
"For a test like this to work, the test `Auth0` application must have the `password` grant enabled.\n"
"This example code also shows how to pass additional parameters.\n"
"For `Auth0`, these are the `audience` and `scope` parameters."
msgstr "Este código de prueba adquiere un token utilizando una concesión `password` del dominio de prueba `Auth0` , que ha registrado una aplicación con el id de cliente `test-auth0-client` , y creado el usuario `alice` con la contraseña `alice` . Para que una prueba como ésta funcione, la aplicación `Auth0` de prueba debe tener activada la concesión `password` . Este código de ejemplo también muestra cómo pasar parámetros adicionales. En el caso de `Auth0` , se trata de los parámetros `audience` y `scope` ."

#. type: Title ====
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy, no-wrap
msgid "Dev Services for Keycloak"
msgstr "Servicios de desarrollo para Keycloak"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"The preferred approach for integration testing against Keycloak is xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak].\n"
"`Dev Services for Keycloak` will start and initialize a test container.\n"
"Then, it will create a `quarkus` realm and a `quarkus-app` client (`secret` secret) and add `alice` (`admin` and `user` roles) and `bob` (`user` role) users, where all of these properties can be customized."
msgstr "El enfoque preferido para las pruebas de integración contra Keycloak es xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] . `Dev Services for Keycloak` arrancará e inicializará un contenedor de pruebas. A continuación, creará un dominio `quarkus` y un cliente `quarkus-app` ( `secret` secreto) y añadirá usuarios `alice` ( `admin` y `user` roles) y `bob` ( `user` rol), donde todas estas propiedades pueden ser personalizadas."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "First, add the following dependency, which provides a utility class `io.quarkus.test.keycloak.client.KeycloakTestClient` that you can use in tests for acquiring the access tokens:"
msgstr "En primer lugar, añada la siguiente dependencia, que proporciona una clase de utilidad `io.quarkus.test.keycloak.client.KeycloakTestClient` que puede utilizar en las pruebas para adquirir los tokens de acceso:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Next, prepare your `application.properties` configuration file.\n"
"You can start with an empty `application.properties` file because `Dev Services for Keycloak` registers `quarkus.oidc.auth-server-url` and points it to the running test container, `quarkus.oidc.client-id=quarkus-app`, and `quarkus.oidc.credentials.secret=secret`."
msgstr "A continuación, prepare su archivo de configuración `application.properties` . Puede empezar con un archivo `application.properties` vacío porque `Dev Services for Keycloak` registra `quarkus.oidc.auth-server-url` y lo apunta al contenedor de prueba en ejecución, `quarkus.oidc.client-id=quarkus-app` , y `quarkus.oidc.credentials.secret=secret` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "However, if you have already configured the required `quarkus-oidc` properties, then you only need to associate `quarkus.oidc.auth-server-url` with the `prod` profile for `Dev Services for Keycloak`to start a container, as shown in the following example:"
msgstr "Sin embargo, si ya ha configurado las propiedades necesarias de `quarkus-oidc` , sólo tendrá que asociar `quarkus.oidc.auth-server-url` con el perfil `prod` para `Dev Services for Keycloak` para iniciar un contenedor, como se muestra en el siguiente ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If a custom realm file has to be imported into Keycloak before running the tests, configure `Dev Services for Keycloak` as follows:"
msgstr "Si es necesario importar un archivo de dominio personalizado en Keycloak antes de ejecutar las pruebas, configure `Dev Services for Keycloak` como se indica a continuación:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Finally, write your test, which will be executed in JVM mode, as shown in the following examples:"
msgstr "Por último, escriba su prueba, que se ejecutará en modo JVM, como se muestra en los siguientes ejemplos:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Example of a test executed in JVM mode:"
msgstr "Ejemplo de una prueba ejecutada en modo JVM:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Example of a test executed in native mode:"
msgstr "Ejemplo de una prueba ejecutada en modo nativo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For more information about initializing and configuring Dev Services for Keycloak, see the xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] guide."
msgstr "Para más información sobre la inicialización y configuración de los xref:security-openid-connect-dev-services.adoc[Servicios de desarrollo para Keycloak] , consulte la guía xref:security-openid-connect-dev-services.adoc[Servicios de desarrollo para Keycloak] ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`KeycloakTestResourceLifecycleManager`"
msgstr "`KeycloakTestResourceLifecycleManager`"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You can also use `KeycloakTestResourceLifecycleManager` for integration testing with Keycloak."
msgstr "También puede utilizar `KeycloakTestResourceLifecycleManager` para realizar pruebas de integración con Keycloak."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
msgid "Use <<integration-testing-keycloak-devservices,Dev Services for Keycloak>> instead of `KeycloakTestResourceLifecycleManager` for integration testing with Keycloak, unless you have specific requirements for using `KeycloakTestResourceLifecycleManager`."
msgstr ""

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "First, add the following dependency:"
msgstr "En primer lugar, añada la siguiente dependencia:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "It provides `io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager`, which is an implementation of `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` that starts a Keycloak container."
msgstr "Proporciona `io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager` , que es una implementación de `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` que inicia un contenedor Keycloak."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Configure the Maven Surefire plugin as follows, or similarly with `maven.failsafe.plugin` for native image testing:"
msgstr "Configure el plugin Surefire de Maven como se indica a continuación, o de forma similar con `maven.failsafe.plugin` para la comprobación de imágenes nativas:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Prepare the REST test endpoint and set `application.properties` as outlined in the following example:"
msgstr "Prepare el punto final de prueba REST y configure `application.properties` como se indica en el siguiente ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Summary"
msgstr "Resumen"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"In the provided example, `KeycloakTestResourceLifecycleManager` registers two users: `alice` and `admin`.\n"
"By default:\n"
"* The user `alice` has the `user` role, which you can customize by using a `keycloak.token.user-roles` system property.\n"
"* The user `admin` has both the `user` and `admin` roles, which you can customize by using the `keycloak.token.admin-roles` system property."
msgstr "En el ejemplo proporcionado, `KeycloakTestResourceLifecycleManager` registra dos usuarios: `alice` y `admin` . Por defecto: * El usuario `alice` tiene el rol `user` , que puede personalizar utilizando una propiedad del sistema `keycloak.token.user-roles` . * El usuario `admin` tiene los roles `user` y `admin` , que puede personalizar utilizando la propiedad del sistema `keycloak.token.admin-roles` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"By default, `KeycloakTestResourceLifecycleManager` uses HTTPS to initialize a Keycloak instance, and this can be disabled by using `keycloak.use.https=false`.\n"
"The default realm name is `quarkus`, and the client id is `quarkus-service-app`.\n"
"If you want to customize these values, set the `keycloak.realm` and `keycloak.service.client` system properties."
msgstr "Por defecto, `KeycloakTestResourceLifecycleManager` utiliza HTTPS para inicializar una instancia de Keycloak, y esto puede desactivarse mediante `keycloak.use.https=false` . El nombre de dominio por defecto es `quarkus` , y el id de cliente es `quarkus-service-app` . Si desea personalizar estos valores, configure las propiedades del sistema `keycloak.realm` y `keycloak.service.client` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Local public key"
msgstr "Clave pública local"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You can use a local inlined public key for testing your `quarkus-oidc` `service` applications, as shown in the following example:"
msgstr "Puede utilizar una clave pública inline local para probar sus aplicaciones `quarkus-oidc` `service` , como se muestra en el siguiente ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
msgid ""
"To generate JWT tokens, copy `privateKey.pem` from the `integration-tests/oidc-tenancy` in the `main` Quarkus repository and use a test code similar to the one in the preceding <<integration-testing-wiremock>> section.\n"
"You can use your own test keys, if preferred."
msgstr ""

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"This approach provides limited coverage compared to the WireMock approach.\n"
"For example, the remote communication code is not covered."
msgstr "Este enfoque proporciona una cobertura limitada en comparación con el enfoque WireMock. Por ejemplo, el código de comunicación remota no está cubierto."

#. type: Title ====
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy, no-wrap
msgid "TestSecurity annotation"
msgstr "Anotación TestSecurity"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "You can use `@TestSecurity` and `@OidcSecurity` annotations to test the `service` application endpoint code, which depends on either one, or all three, of the following injections:"
msgstr "Puede utilizar las anotaciones `@TestSecurity` y `@OidcSecurity` para probar el código del punto final de la aplicación `service` , que depende de una o de las tres inyecciones siguientes:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`JsonWebToken`"
msgstr "`JsonWebToken`"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`OidcConfigurationMetadata`"
msgstr "`OidcConfigurationMetadata`"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Write a test code as outlined in the following example:"
msgstr "Escriba un código de prueba como se indica en el siguiente ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The `ProtectedResource` class, which is used in this code example, might look like this:"
msgstr "La clase `ProtectedResource` , que se utiliza en este ejemplo de código, podría tener este aspecto:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"You must always use the `@TestSecurity` annotation.\n"
"Its `user` property is returned as `JsonWebToken.getName()` and its `roles` property is returned as `JsonWebToken.getGroups()`.\n"
"The `@OidcSecurity` annotation is optional and you can use it to set the additional token claims and the `UserInfo` and `OidcConfigurationMetadata` properties.\n"
"Additionally, if the `quarkus.oidc.token.issuer` property is configured, it is used as an `OidcConfigurationMetadata` `issuer` property value."
msgstr "Debe utilizar siempre la anotación `@TestSecurity` . Su propiedad `user` se devuelve como `JsonWebToken.getName()` y su propiedad `roles` se devuelve como `JsonWebToken.getGroups()` . La anotación `@OidcSecurity` es opcional y puede utilizarla para configurar las reclamaciones de token adicionales y las propiedades `UserInfo` y `OidcConfigurationMetadata` . Además, si se configura la propiedad `quarkus.oidc.token.issuer` , se utiliza como valor de la propiedad `OidcConfigurationMetadata` `issuer` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you work with opaque tokens, you can test them as shown in the following code example:"
msgstr "Si trabaja con tokens opacos, puede probarlos como se muestra en el siguiente ejemplo de código:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "The  `ProtectedResource` class, which is used in this code example, might look like this:"
msgstr "La clase `ProtectedResource` , que se utiliza en este ejemplo de código, podría tener este aspecto:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"The `@TestSecurity`, `user`, and `roles` attributes are available as `TokenIntrospection`, `username`, and `scope` properties.\n"
"Use `io.quarkus.test.security.oidc.TokenIntrospection` to add the additional introspection response properties, such as an `email`, and so on."
msgstr "Los atributos `@TestSecurity` , `user` , y `roles` están disponibles como propiedades `TokenIntrospection` , `username` , y `scope` . Utilice `io.quarkus.test.security.oidc.TokenIntrospection` para añadir las propiedades de respuesta de introspección adicionales, como una `email` , etc."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "`@TestSecurity` and `@OidcSecurity` can be combined in a meta-annotation, as outlined in the following example:"
msgstr "`@TestSecurity` y `@OidcSecurity` pueden combinarse en una meta anotación, como se indica en el siguiente ejemplo:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "This is particularly useful if multiple test methods must use the same set of security settings."
msgstr "Esto resulta especialmente útil si varios métodos de prueba deben utilizar el mismo conjunto de ajustes de seguridad."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Check errors in the logs"
msgstr "Compruebe los errores en los registros"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "To see more details about token verification errors, enable `io.quarkus.oidc.runtime.OidcProvider` and `TRACE` level logging:"
msgstr "Para ver más detalles sobre los errores de verificación de tokens, active los registros de nivel `io.quarkus.oidc.runtime.OidcProvider` y `TRACE` :"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "To see more details about `OidcProvider` client initialization errors, enable `io.quarkus.oidc.runtime.OidcRecorder` and `TRACE` level logging as follows:"
msgstr "Para ver más detalles sobre los errores de inicialización del cliente `OidcProvider` , active el registro de nivel `io.quarkus.oidc.runtime.OidcRecorder` y `TRACE` de la siguiente manera:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "External and internal access to OIDC providers"
msgstr "Acceso externo e interno a los proveedores de OIDC"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"The externally-accessible token of the OIDC provider and other endpoints might have different HTTP(S) URLs compared to the URLs that are auto-discovered or configured relative to the `quarkus.oidc.auth-server-url` internal URL.\n"
"For example, suppose your SPA acquires a token from an external token endpoint address and sends it to Quarkus as a bearer token.\n"
"In that case, the endpoint might report an issuer verification failure."
msgstr "El token de acceso externo del proveedor de OIDC y otros puntos finales podrían tener URL HTTP(S) diferentes en comparación con las URL autodescubiertas o configuradas en relación con la URL interna de `quarkus.oidc.auth-server-url` . Por ejemplo, suponga que su SPA adquiere un token de una dirección de punto final de token externo y lo envía a Quarkus como token portador. En ese caso, el punto final podría informar de un fallo de verificación del emisor."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"In such cases, if you work with Keycloak, start it with the `KEYCLOAK_FRONTEND_URL` system property set to the externally accessible base URL.\n"
"If you work with other OIDC providers, refer to your provider's documentation."
msgstr "En estos casos, si trabaja con Keycloak, inícielo con la propiedad del sistema `KEYCLOAK_FRONTEND_URL` establecida en la URL base accesible desde el exterior. Si trabaja con otros proveedores de OIDC, consulte la documentación de su proveedor."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Using the `client-id` property"
msgstr "Utilizando la propiedad `client-id` "

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"The `quarkus.oidc.client-id` property identifies the OIDC client that requested the current bearer token.\n"
"The OIDC client can be an SPA application running in a browser or a Quarkus `web-app` confidential client application propagating the access token to the Quarkus `service` application."
msgstr "La propiedad `quarkus.oidc.client-id` identifica al cliente OIDC que solicitó el token de portador actual. El cliente OIDC puede ser una aplicación SPA que se ejecute en un navegador o una aplicación cliente confidencial de Quarkus `web-app` que propague el token de acceso a la aplicación Quarkus `service` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"This property is required if the `service` application is expected to introspect the tokens remotely, which is always the case for the opaque tokens.\n"
"This property is optional for local JSON Web Token (JWT) verification only."
msgstr "Esta propiedad es necesaria si se espera que la aplicación `service` introspeccione los tokens de forma remota, que es siempre el caso de los tokens opacos. Esta propiedad es opcional sólo para la verificación local de tokens web JSON (JWT)."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Setting the `quarkus.oidc.client-id` property is encouraged even if the endpoint does not require access to the remote introspection endpoint.\n"
"This is because when `client-id` is set, it can be used to verify the token audience.\n"
"It will also be included in logs when the token verification fails, enabling better traceability of tokens issued to specific clients and analysis over a longer period."
msgstr "Se recomienda establecer la propiedad `quarkus.oidc.client-id` incluso si el punto final no requiere acceso al punto final de introspección remoto. Esto se debe a que cuando se establece `client-id` , puede utilizarse para verificar la audiencia del token. También se incluirá en los registros cuando falle la verificación del token, lo que permitirá una mejor trazabilidad de los tokens emitidos a clientes específicos y su análisis durante un periodo más largo."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For example, if your OIDC provider sets a token audience, consider the following configuration pattern:"
msgstr "Por ejemplo, si su proveedor de OIDC establece una audiencia de tokens, considere el siguiente patrón de configuración:"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.client-id`, but your endpoint does not require remote access to one of the OIDC provider endpoints (introspection, token acquisition, and so on), do not set a client secret with `quarkus.oidc.credentials` or similar properties because it will not be used."
msgstr "Si establece `quarkus.oidc.client-id` , pero su punto final no requiere acceso remoto a uno de los puntos finales del proveedor OIDC (introspección, adquisición de tokens, etc.), no establezca un secreto de cliente con `quarkus.oidc.credentials` o propiedades similares porque no se utilizará."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Quarkus `web-app` applications always require the `quarkus.oidc.client-id` property."
msgstr "Las aplicaciones de Quarkus `web-app` siempre requieren la propiedad `quarkus.oidc.client-id` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Authentication after an HTTP request has completed"
msgstr "Autenticación tras la finalización de una solicitud HTTP"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"Sometimes, `SecurityIdentity` for a given token must be created when there is no active HTTP request context.\n"
"The `quarkus-oidc` extension provides `io.quarkus.oidc.TenantIdentityProvider` to convert a token to a `SecurityIdentity` instance.\n"
"For example, one situation when you must verify the token after the HTTP request has completed is when you are processing messages with xref:vertx.adoc#event-bus[Vert.x event bus].\n"
"The example below uses the 'product-order' message within different CDI request contexts.\n"
"Therefore, an injected `SecurityIdentity` would not correctly represent the verified identity and be anonymous."
msgstr "A veces, `SecurityIdentity` para un token dado debe crearse cuando no hay un contexto de petición HTTP activo. La extensión `quarkus-oidc` proporciona `io.quarkus.oidc.TenantIdentityProvider` para convertir un token en una instancia `SecurityIdentity` . Por ejemplo, una situación en la que debe verificar el token después de que la solicitud HTTP haya finalizado es cuando procesa mensajes con el xref:vertx.adoc#event-bus[bus de eventos Vert.x] . En el ejemplo siguiente se utiliza el mensaje \"pedido-producto\" dentro de diferentes contextos de solicitud CDI. Por lo tanto, un `SecurityIdentity` inyectado no representaría correctamente la identidad verificada y sería anónimo."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "At this point, the token is not verified when proactive authentication is disabled."
msgstr "En este punto, el token no se verifica cuando la autenticación proactiva está desactivada."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "For the default tenant, the `TenantFeature` qualifier is optional."
msgstr "Para el arrendatario por defecto, el calificador `TenantFeature` es opcional."

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "Executes token verification and converts the token to a `SecurityIdentity`."
msgstr "Ejecuta la verificación del token y lo convierte en un `SecurityIdentity` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"When the provider is used during an HTTP request, the tenant configuration can be resolved as described in\n"
"the xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy] guide.\n"
"However, when there is no active HTTP request, you must select the tenant explicitly with the `io.quarkus.oidc.TenantFeature` qualifier."
msgstr "Cuando el proveedor se utiliza durante una solicitud HTTP, la configuración del inquilino puede resolverse como se describe en la guía xref:security-openid-connect-multitenancy.adoc[Utilización de OpenID Connect Multi-Tenancy] . Sin embargo, cuando no hay ninguna solicitud HTTP activa, debe seleccionar el inquilino explícitamente con el calificador `io.quarkus.oidc.TenantFeature` ."

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid ""
"xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[Dynamic tenant configuration resolution] is currently not supported.\n"
"Authentication that requires a dynamic tenant will fail."
msgstr "Actualmente no se admite la xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[resolución de la configuración] dinámica de inquilinos. La autenticación que requiera un inquilino dinámico fallará."

#. type: Title ==
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy, no-wrap
msgid "OIDC request filters"
msgstr "Filtros de solicitud OIDC"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
msgid ""
"You can filter OIDC requests made by Quarkus to the OIDC provider by registering one or more `OidcRequestFilter` implementations, which can update or add new request headers, and log requests.\n"
"For more information, see xref:security-oidc-code-flow-authentication#oidc-request-filters[OIDC request filters]."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-oidc-configuration-properties-reference.adoc[OIDC configuration properties]"
msgstr "xref:security-oidc-configuration-properties-reference.adoc[Propiedades de configuración de OIDC]"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication-tutorial.adoc[Protect a service application by using OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication-tutorial.adoc[Proteger una aplicación de servicio mediante la autenticación con token de portador OIDC]"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "link:https://www.keycloak.org/documentation.html[Keycloak documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Documentación de Keycloak]"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "link:https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[Token web JSON]"

#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 client and filters reference guide]"
msgstr "xref:security-openid-connect-client-reference.adoc[Guía de referencia de clientes y filtros OpenID Connect y OAuth2]"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr "link:security-openid-connect-dev-services.html[Servicios de desarrollo para Keycloak]"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "link:security-jwt-build.html[Firmar y cifrar tokens JWT con SmallRye JWT Build]"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
msgid "xref:security-authentication-mechanisms.adoc#oidc-jwt-oauth2-comparison[Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms]"
msgstr "xref:security-authentication-mechanisms.adoc#oidc-jwt-oauth2-comparison[Elegir entre los mecanismos de autenticación OpenID Connect, SmallRye JWT y OAuth2]"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combinación de mecanismos de autenticación]"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
"xref:security-overview.adoc\n"
"[Visión general de Quarkus Security]"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"

#. type: Plain text
#: _versions/main/guides/security-oidc-bearer-token-authentication.adoc
#, fuzzy
msgid "xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy]"
msgstr "xref:security-openid-connect-multitenancy.adoc[Uso de OpenID Connect Multi-Tenancy]"
