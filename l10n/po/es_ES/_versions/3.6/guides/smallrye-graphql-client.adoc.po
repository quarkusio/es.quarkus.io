msgid ""
msgstr ""
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "SmallRye GraphQL Client"
msgstr "Cliente GraphQL de SmallRye"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"This guide demonstrates how your Quarkus application can use the GraphQL client library.\n"
"The client is implemented by the https://github.com/smallrye/smallrye-graphql/[SmallRye GraphQL] project.\n"
"This guide is specifically geared towards the client side, so if you need an introduction to GraphQL in\n"
"general, first refer to the xref:smallrye-graphql.adoc[SmallRye GraphQL guide], which provides an introduction\n"
"to the GraphQL query language, general concepts and server-side development."
msgstr "Esta guía demuestra cómo su aplicación Quarkus puede utilizar la biblioteca cliente GraphQL. El cliente está implementado por el proyecto SmallRye link:https://github.com/smallrye/smallrye-graphql/[GraphQL] . Esta guía está orientada específicamente al lado del cliente, por lo que si necesita una introducción a GraphQL en general, consulte primero la xref:smallrye-graphql.adoc[guía SmallRye GraphQL] , que ofrece una introducción al lenguaje de consulta GraphQL, conceptos generales y desarrollo del lado del servidor."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"The guide will walk you through developing and running a simple application that uses both supported\n"
"types of GraphQL clients to retrieve data from a remote resource, that being a database related to Star Wars.\n"
"It's available at https://graphql.org/swapi-graphql[this webpage] if you want to experiment with it manually.\n"
"The web UI allows you to write and execute GraphQL queries against it."
msgstr "La guía le guiará a través del desarrollo y ejecución de una sencilla aplicación que utiliza los dos tipos de clientes GraphQL soportados para recuperar datos de un recurso remoto, que es una base de datos relacionada con Star Wars. Está disponible en link:https://graphql.org/swapi-graphql[esta página web] por si desea experimentar con ella manualmente. La interfaz de usuario web le permite escribir y ejecutar consultas GraphQL contra ella."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
msgid "Prerequisites"
msgstr "Requisitos previos"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "GraphQL client types introduction"
msgstr "Introducción a los tipos de cliente GraphQL"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "Two types of GraphQL clients are supported."
msgstr "Se admiten dos tipos de clientes GraphQL."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"The *typesafe* client works very much like the MicroProfile REST Client adjusted for calling GraphQL endpoints.\n"
"A client instance is basically a proxy that you can call like a regular Java object, but under the hood,\n"
"the call will be translated to a GraphQL operation. It works with domain classes directly.\n"
"Any input and output objects for the operation will be translated to/from their representations\n"
"in the GraphQL query language."
msgstr "El cliente *typesafe* funciona de forma muy parecida al cliente REST de MicroProfile ajustado para llamar a puntos finales GraphQL. Una instancia de cliente es básicamente un proxy que puede llamar como un objeto Java normal, pero bajo el capó, la llamada se traducirá a una operación GraphQL. Funciona con clases de dominio directamente. Cualquier objeto de entrada y salida de la operación será traducido a/desde sus representaciones en el lenguaje de consulta GraphQL."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"The *dynamic* client, on the other hand, works rather like an equivalent of the Jakarta REST client\n"
"from the `jakarta.ws.rs.client` package. It does not require the domain classes to work, it works with\n"
"abstract representations of GraphQL documents instead. Documents are built using a domain-specific language (DSL).\n"
"The exchanged objects are treated as an abstract `JsonObject`, but, when necessary,\n"
"it is possible to convert them to concrete model objects (if suitable model classes are available)."
msgstr "El cliente *dinámico* , por su parte, funciona más bien como un equivalente del cliente REST Jakarta del paquete `jakarta.ws.rs.client` . No requiere las clases de dominio para funcionar, en su lugar trabaja con representaciones abstractas de documentos GraphQL. Los documentos se construyen utilizando un lenguaje específico del dominio (DSL). Los objetos intercambiados se tratan como un `JsonObject` abstracto, pero, cuando es necesario, es posible convertirlos en objetos modelo concretos (si se dispone de clases modelo adecuadas)."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"The typesafe client can be viewed as a rather high-level and more declarative approach designed for ease of use,\n"
"whereas the dynamic client is lower-level, more imperative, somewhat more verbose to use, but allows finer grained\n"
"control over operations and responses."
msgstr "El cliente tipográfico puede considerarse un enfoque de alto nivel y más declarativo, diseñado para facilitar su uso, mientras que el cliente dinámico es de nivel más bajo, más imperativo, algo más verboso de usar, pero permite un control de grano más fino sobre las operaciones y las respuestas."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
msgid "Solution"
msgstr "Solución"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "The solution is located in the `microprofile-graphql-client-quickstart` link:{quickstarts-tree-url}/microprofile-graphql-client-quickstart[directory]."
msgstr "La solución se encuentra en el link:{quickstarts-tree-url}/microprofile-graphql-client-quickstart[directorio] `microprofile-graphql-client-quickstart` ."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
msgid "Creating the Maven Project"
msgstr "Creación del proyecto Maven"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"This command generates a project, importing the `smallrye-graphql-client` extension, and also the `resteasy-reactive`\n"
"extension, because we will use that too - a REST endpoint will be the entrypoint to allow you to manually trigger\n"
"the GraphQL client to do its work."
msgstr "Este comando genera un proyecto, importando la extensión `smallrye-graphql-client` , y también la extensión `resteasy-reactive` , porque la utilizaremos también - un punto final REST será el punto de entrada para permitirle activar manualmente el cliente GraphQL para que haga su trabajo."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-graphql-client` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "Si ya tiene configurado su proyecto Quarkus, puede añadir la extensión `smallrye-graphql-client` a su proyecto ejecutando el siguiente comando en el directorio base de su proyecto:"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
msgid "This will add the following to your build file:"
msgstr "Esto añadirá lo siguiente a su archivo de construcción:"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "The application"
msgstr "La solicitud"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"The application we will build makes use of both types of GraphQL clients. In both cases,\n"
"they will connect to the Star Wars service at https://graphql.org/swapi-graphql[SWAPI] and\n"
"query it for a list of Star Wars films, and, for each film, the names of the planets which\n"
"appear in that film."
msgstr "La aplicación que construiremos hace uso de ambos tipos de clientes GraphQL. En ambos casos, se conectarán al servicio de La Guerra de las Galaxias en link:https://graphql.org/swapi-graphql[SWAPI] y lo consultarán para obtener una lista de las películas de La Guerra de las Galaxias y, para cada película, los nombres de los planetas que aparecen en ella."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "The corresponding GraphQL query looks like this:"
msgstr "La consulta GraphQL correspondiente tiene el siguiente aspecto:"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "You may go to https://graphql.org/swapi-graphql[the webpage] to execute this query manually."
msgstr "Puede ir a  link:https://graphql.org/swapi-graphql[la página web] para ejecutar esta consulta manualmente."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "Using the Typesafe client"
msgstr "Uso del cliente Typesafe"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"To use the typesafe client, we need the corresponding model classes that are compatible with\n"
"the schema. There are two ways to obtain them. First is to  use the client generator offered by SmallRye GraphQL,\n"
"which generates classes from the schema document and a list of queries. This generator is considered highly\n"
"experimental for now, and is not covered in this example. If interested, refer to the\n"
"https://github.com/smallrye/smallrye-graphql/tree/main/client/generator[Client Generator] and its documentation."
msgstr "Para utilizar el cliente typesafe, necesitamos las clases modelo correspondientes que sean compatibles con el esquema. Hay dos formas de obtenerlas. La primera es utilizar el generador de clientes que ofrece SmallRye GraphQL, que genera las clases a partir del documento del esquema y de una lista de consultas. Este generador se considera muy experimental por ahora, y no se trata en este ejemplo. Si está interesado, consulte el generador de link:https://github.com/smallrye/smallrye-graphql/tree/main/client/generator[clientes] y su documentación."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"In this example, we will create a slimmed down version of the model classes manually, with only the fields\n"
"that we need, and ignore all the stuff that we don't need. We will need the classes for `Film` and `Planet`.\n"
"But, the service is also using specific wrappers named `FilmConnection` and `PlanetConnection`, which,\n"
"for our purpose, will serve just to contain the actual list of `Film` and `Planet` instances, respectively."
msgstr "En este ejemplo, crearemos manualmente una versión reducida de las clases del modelo, con sólo los campos que necesitamos, e ignoraremos todo lo que no necesitamos. Necesitaremos las clases para `Film` y `Planet` . Pero, el servicio también utiliza envoltorios específicos llamados `FilmConnection` y `PlanetConnection` , que, para nuestro propósito, servirán sólo para contener la lista real de instancias de `Film` y `Planet` , respectivamente."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "Let's create all the model classes and put them into the `org.acme.microprofile.graphql.client.model` package:"
msgstr "Vamos a crear todas las clases del modelo y ponerlas en el paquete `org.acme.microprofile.graphql.client.model`:"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"Now that we have the model classes, we can create the interface that represents the actual set\n"
"of operations we want to call on the remote GraphQL service."
msgstr "Ahora que tenemos las clases modelo, podemos crear la interfaz que representa el conjunto real de operaciones que queremos llamar en el servicio GraphQL remoto."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"@GraphQLClientApi(configKey = \"star-wars-typesafe\")\n"
"public interface StarWarsClientApi {\n"
"\n"
"    FilmConnection allFilms();\n"
"\n"
"}"
msgstr "@GraphQLClientApi(configKey = \"star-wars-typesafe\") public interface StarWarsClientApi {"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"For simplicity, we're only calling the query named `allFilms`. We named our corresponding method\n"
"`allFilms` too. If we named the method differently, we would need to annotate it with\n"
"`@Query(value=\"allFilms\")` to specify the name of the query that should be executed when this\n"
"method is called."
msgstr "Para simplificar, sólo llamaremos a la consulta denominada `allFilms` . También nombramos nuestro método correspondiente `allFilms` . Si nombráramos el método de otro modo, tendríamos que anotarlo con `@Query(value=\"allFilms\")` para especificar el nombre de la consulta que debe ejecutarse cuando se llama a este método."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"The client also needs some configuration, namely at least the URL of the remote service. We can either\n"
"specify that within the `@GraphQLClientApi` annotation (by setting the `endpoint` parameter),\n"
"or move this over to the configuration file, `application.properties`:"
msgstr "El cliente también necesita cierta configuración, concretamente al menos la URL del servicio remoto. Podemos especificarlo dentro de la anotación `@GraphQLClientApi` (estableciendo el parámetro `endpoint` ), o trasladarlo al archivo de configuración, `application.properties` :"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "quarkus.smallrye-graphql-client.star-wars-typesafe.url=https://swapi-graphql.netlify.app/.netlify/functions/index"
msgstr "quarkus.smallrye-graphql-client.star-wars-typesafe.url=https://swapi-graphql.netlify.app/.netlify/functions/index"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"During *tests only*, the URL is an optional property, and if it's not specified, Quarkus will assume\n"
"that the target of the client is the application that is being tested (typically, `http://localhost:8081/graphql`).\n"
"This is useful if your application contains a GraphQL server-side API as well as a GraphQL client that is used for\n"
"testing the API."
msgstr "*Sólo* durante las *pruebas* , la URL es una propiedad opcional, y si no se especifica, Quarkus asumirá que el objetivo del cliente es la aplicación que se está probando (típicamente, `http://localhost:8081/graphql` ). Esto es útil si su aplicación contiene una API GraphQL del lado del servidor, así como un cliente GraphQL que se utiliza para probar la API."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"`star-wars-typesafe` is the name of the configured client instance, and corresponds to the `configKey`\n"
"in the `@GraphQLClientApi` annotation. If you don't want to specify a custom name, you can leave\n"
"out the `configKey`, and then refer to it by using the fully qualified name of the interface."
msgstr "`star-wars-typesafe` es el nombre de la instancia de cliente configurada, y corresponde a `configKey` en la anotación `@GraphQLClientApi` . Si no desea especificar un nombre personalizado, puede omitir el `configKey` , y luego referirse a él utilizando el nombre completo de la interfaz."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"Now that we have the client instance properly configured, we need a way to have it\n"
"perform something when we start the application. For that, we will use a REST endpoint that,\n"
"when called by a user, obtains the client instance and lets it execute the query."
msgstr "Ahora que tenemos la instancia cliente correctamente configurada, necesitamos una forma de hacer que ejecute algo cuando iniciemos la aplicación. Para ello, utilizaremos un punto final REST que, al ser llamado por un usuario, obtenga la instancia cliente y le permita ejecutar la consulta."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"With this REST endpoint included in your application, you can simply send a GET request to `/typesafe`,\n"
"and the application will use an injected typesafe client instance to call the remote service, obtain\n"
"the films and planets, and return the JSON representation of the resulting list."
msgstr "Con este punto final REST incluido en su aplicación, puede simplemente enviar una solicitud GET a `/typesafe` , y la aplicación utilizará una instancia de cliente typesafe inyectada para llamar al servicio remoto, obtener las películas y los planetas, y devolver la representación JSON de la lista resultante."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "Using the Dynamic client"
msgstr "Uso del cliente dinámico"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"For the dynamic client, the model classes are optional, because we can work with abstract\n"
"representations of the GraphQL types and documents. The client API interface is not needed at all."
msgstr "Para el cliente dinámico, las clases modelo son opcionales, porque podemos trabajar con representaciones abstractas de los tipos y documentos GraphQL. La interfaz API del cliente no es necesaria en absoluto."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "We still need to configure the URL for the client, so let's put this into `application.properties`:"
msgstr "Todavía tenemos que configurar la URL para el cliente, así que vamos a poner esto en `application.properties`:"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "quarkus.smallrye-graphql-client.star-wars-dynamic.url=https://swapi-graphql.netlify.app/.netlify/functions/index"
msgstr "quarkus.smallrye-graphql-client.star-wars-dynamic.url=https://swapi-graphql.netlify.app/.netlify/functions/index"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"We decided to name the client `star-wars-dynamic`. We will use this name when injecting a dynamic client\n"
"to properly qualify the injection point."
msgstr "Decidimos llamar al cliente `star-wars-dynamic` . Utilizaremos este nombre cuando inyectemos un cliente dinámico para calificar adecuadamente el punto de inyección."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"If you need to add an authorization header, or any other custom HTTP header (in our case\n"
"it's not required), this can be done by:"
msgstr "Si necesita añadir un encabezado de autorización, o cualquier otro encabezado HTTP personalizado (en nuestro caso no es necesario), puede hacerlo:"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "quarkus.smallrye-graphql-client.star-wars-dynamic.header.HEADER-KEY=HEADER-VALUE\""
msgstr "quarkus.smallrye-graphql-client.star-wars-dynamic.header.HEADER-KEY=HEADER-VALUE\""

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "Add this to the `StarWarsResource` created earlier:"
msgstr "Añade esto a la página `StarWarsResource` creada anteriormente:"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "Qualifies the injection point so that we know which named client needs to be injected here."
msgstr "Califica el punto de inyección para que sepamos qué cliente con nombre debe ser inyectado aquí."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"Here we build a document representing the GraphQL query, using the provided DSL language.\n"
"We use static imports to make the code easier to read. The DSL is designed in a way that\n"
"it looks quite similar to writing a GraphQL query as a string."
msgstr "Aquí construimos un documento que representa la consulta GraphQL, utilizando el lenguaje DSL proporcionado. Utilizamos importaciones estáticas para facilitar la lectura del código. El DSL está diseñado de forma que se parece bastante a escribir una consulta GraphQL como una cadena."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"Execute the query and block while waiting for the response. There is also an asynchronous\n"
"variant that returns a `Uni<Response>`."
msgstr "Ejecuta la consulta y se bloquea mientras espera la respuesta. También existe una variante asíncrona que devuelve un `Uni<Response>` ."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"Here we did the optional step of converting the response to instances of our model classes,\n"
"because we have the classes available. If you don't have the classes available or don't want to\n"
"use them, simply calling `response.getData()` would get you a `JsonObject` representing\n"
"all the returned data."
msgstr "Aquí realizamos el paso opcional de convertir la respuesta en instancias de nuestras clases modelo, porque tenemos las clases disponibles. Si no tiene las clases disponibles o no quiere utilizarlas, simplemente llamando a `response.getData()` obtendría un `JsonObject` que representa todos los datos devueltos."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
msgid "Running the application"
msgstr "Ejecución de la aplicación"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "Launch the application in dev mode using:"
msgstr "Inicie la aplicación en modo dev con:"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "To execute the queries, you need to send GET requests to our REST endpoint:"
msgstr "Para ejecutar las consultas, es necesario enviar solicitudes GET a nuestro punto final REST:"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"Whether you use dynamic or typesafe, the result should be the same.\n"
"If the JSON document is hard to read, you might want to run it through a tool that\n"
"formats it for better readability by humans, for example by piping the output through `jq`."
msgstr "Tanto si utiliza el método dinámico como el typesafe, el resultado debería ser el mismo. Si el documento JSON es difícil de leer, es posible que desee ejecutarlo a través de una herramienta que lo formatee para una mejor legibilidad por los seres humanos, por ejemplo, canalizando la salida a través de `jq` ."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "Conclusion"
msgstr "Conclusión"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid ""
"This example showed how to use both the dynamic and typesafe GraphQL clients to call an external\n"
"GraphQL service and explained the difference between the client types."
msgstr "Este ejemplo mostraba cómo utilizar tanto los clientes GraphQL dinámicos como los de tipo seguro para llamar a un servicio GraphQL externo y explicaba la diferencia entre los tipos de cliente."

#: _versions/3.6/guides/smallrye-graphql-client.adoc
msgid "References"
msgstr "Referencias"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "xref:security-openid-connect-client-reference.adoc#oidc-client-graphql-client[Integrating OIDC clients into GraphQL clients]"
msgstr "xref:security-openid-connect-client-reference.adoc#oidc-client-graphql-client[Integración de clientes OIDC en clientes GraphQL]"

#: _versions/3.6/guides/smallrye-graphql-client.adoc
#, fuzzy
msgid "https://smallrye.io/smallrye-graphql/latest/[Upstream SmallRye GraphQL Client documentation]"
msgstr "link:https://smallrye.io/smallrye-graphql/latest/[Documentación del cliente Upstream SmallRye GraphQL]"
