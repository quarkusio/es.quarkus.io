msgid ""
msgstr ""
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Simplified Hibernate ORM with Panache"
msgstr "ORM de Hibernate simplificado con Panache"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Hibernate ORM is the de facto Jakarta Persistence (formerly known as JPA) implementation and offers you the full breadth of an Object Relational Mapper.\n"
"It makes complex mappings possible, but it does not make simple and common mappings trivial.\n"
"Hibernate ORM with Panache focuses on making your entities trivial and fun to write in Quarkus."
msgstr "Hibernate ORM es la implementación de facto de Jakarta Persistence (antes conocida como JPA) y le ofrece toda la amplitud de un mapeador objeto-relacional. Hace posibles los mapeos complejos, pero no trivializa los mapeos sencillos y comunes. Hibernate ORM con Panache se centra en hacer que sus entidades sean triviales y divertidas de escribir en Quarkus."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "First: an example"
msgstr "Primero: un ejemplo"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "What we're doing in Panache is to allow you to write your Hibernate ORM entities like this:"
msgstr "Lo que hacemos en Panache es permitirte escribir tus entidades ORM de Hibernate de esta manera:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"You have noticed how much more compact and readable the code is?\n"
"Does this look interesting? Read on!"
msgstr "¿Se ha dado cuenta de que el código es mucho más compacto y legible? ¿Le parece interesante? Siga leyendo."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "the `list()` method might be surprising at first. It takes fragments of HQL (JP-QL) queries and contextualizes the rest. That makes for very concise but yet readable code."
msgstr "el método `list()` puede resultar sorprendente al principio. Toma fragmentos de consultas HQL (JP-QL) y contextualiza el resto. Eso hace que el código sea muy conciso pero a la vez legible."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"what was described above is essentially the link:https://www.martinfowler.com/eaaCatalog/activeRecord.html[active record pattern], sometimes just called the entity pattern.\n"
"Hibernate with Panache also allows for the use of the more classical link:https://martinfowler.com/eaaCatalog/repository.html[repository pattern] via `PanacheRepository`."
msgstr "Lo descrito anteriormente es esencialmente el patrón de registro link:https://www.martinfowler.com/eaaCatalog/activeRecord.html[activo] , a veces denominado simplemente patrón de entidad. Hibernate con Panache también permite utilizar el patrón de link:https://martinfowler.com/eaaCatalog/repository.html[repositorio] más clásico a través de `PanacheRepository` ."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "Solution"
msgstr "Solución"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "The solution is located in the `hibernate-orm-panache-quickstart` link:{quickstarts-tree-url}/hibernate-orm-panache-quickstart[directory]."
msgstr "La solución se encuentra en el link:{quickstarts-tree-url}/hibernate-orm-panache-quickstart[directorio] `hibernate-orm-panache-quickstart` ."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "If your project is already configured to use other annotation processors, you will need to additionally add the Panache annotation processor:"
msgstr "Si su proyecto ya está configurado para utilizar otros procesadores de anotaciones, tendrá que añadir adicionalmente el procesador de anotaciones Panache:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Setting up and configuring Hibernate ORM with Panache"
msgstr "Instalación y configuración de Hibernate ORM con Panache"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "To get started:"
msgstr "Para empezar:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "add your settings in `{config-file}`"
msgstr "añada su configuración en `{config-file}`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "annotate your entities with `@Entity`"
msgstr "anotar sus entidades con `@Entity`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "make your entities extend `PanacheEntity` (optional if you are using the repository pattern)"
msgstr "haga que sus entidades extiendan `PanacheEntity` (opcional si está utilizando el patrón de repositorio)"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Follow the xref:hibernate-orm.adoc#setting-up-and-configuring-hibernate-orm[Hibernate set-up guide for all configuration]."
msgstr "Siga la  link:hibernate-orm.html#setting-up-and-configuring-hibernate-orm[guía de instalación de Hibernate para toda la configuración]."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "In your build file, add the following dependencies:"
msgstr "En su archivo de compilación, añada las siguientes dependencias:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "the Hibernate ORM with Panache extension"
msgstr "el ORM de Hibernate con la extensión Panache"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "your JDBC driver extension (`quarkus-jdbc-postgresql`, `quarkus-jdbc-h2`, `quarkus-jdbc-mariadb`, ...)"
msgstr "su extensión del controlador JDBC ( `quarkus-jdbc-postgresql`, `quarkus-jdbc-h2`, `quarkus-jdbc-mariadb`, ...)"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Then add the relevant configuration properties in `{config-file}`."
msgstr "A continuación, añada las propiedades de configuración pertinentes en `{config-file}`."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Solution 1: using the active record pattern"
msgstr "Solución 1: utilizar el patrón de registro activo"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "Defining your entity"
msgstr "Definir su entidad"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"To define a Panache entity, simply extend `PanacheEntity`, annotate it with `@Entity` and add your\n"
"columns as public fields:"
msgstr "Para definir una entidad Panache, simplemente extienda `PanacheEntity` , anótela con `@Entity` y añada sus columnas como campos públicos:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"You can put all your Jakarta Persistence column annotations on the public fields. If you need a field to not be persisted, use the\n"
"`@Transient` annotation on it. If you need to write accessors, you can:"
msgstr "Puede poner todas sus anotaciones de columna de Jakarta Persistence en los campos públicos. Si necesita que un campo no sea persistido, utilice la anotación `@Transient` en él. Si necesita escribir accessors, puede hacerlo:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"And thanks to our field access rewrite, when your users read `person.name` they will actually call your `getName()` accessor,\n"
"and similarly for field writes and the setter.\n"
"This allows for proper encapsulation at runtime as all fields calls will be replaced by the corresponding getter/setter calls."
msgstr "Y gracias a nuestra reescritura de accesos a campos, cuando sus usuarios lean `person.name` llamarán en realidad a su accesor `getName()` , y de forma similar para las escrituras de campos y el setter. Esto permite un encapsulamiento adecuado en tiempo de ejecución, ya que todas las llamadas a los campos serán sustituidas por las correspondientes llamadas al getter/setter."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "Most useful operations"
msgstr "Operaciones más útiles"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Once you have written your entity, here are the most common operations you will be able to perform:"
msgstr "Una vez que haya escrito su entidad, estas son las operaciones más comunes que podrá realizar:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "All `list` methods have equivalent `stream` versions."
msgstr "Todos los métodos de `list` tienen versiones equivalentes de `stream`."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"The `stream` methods require a transaction to work. +\n"
"As they perform I/O operations, they should be closed via the `close()` method or via a try-with-resource to close the underlying `ResultSet`.\n"
"If not, you will see warnings from Agroal that will close the underlying `ResultSet` for you."
msgstr ""
"Los métodos `stream` requieren una transacción para funcionar.\n"
"\n"
" Como realizan operaciones de E/S, deben cerrarse mediante el método `close()` o mediante un try-with-resource para cerrar el `ResultSet` subyacente. Si no, verá advertencias de Agroal que cerrará el `ResultSet` subyacente por usted."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Adding entity methods"
msgstr "Añadir métodos de entidad"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Add custom queries on your entities inside the entities themselves.\n"
"That way, you and your co-workers can find them easily, and queries are co-located with the object they operate on.\n"
"Adding them as static methods in your entity class is the Panache Active Record way."
msgstr "Añada consultas personalizadas sobre sus entidades dentro de las propias entidades. De ese modo, usted y sus colaboradores podrán encontrarlas fácilmente, y las consultas estarán ubicadas junto al objeto sobre el que operan. Añadirlas como métodos estáticos en su clase de entidad es la manera Panache Active Record."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Solution 2: using the repository pattern"
msgstr "Solución 2: utilizar el patrón de repositorio"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "When using the repository pattern, you can define your entities as regular Jakarta Persistence entities."
msgstr "Cuando utilice el patrón de repositorio, puede definir sus entidades como entidades normales de Jakarta Persistence."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"If you don't want to bother defining getters/setters for your entities, you can make them extend `PanacheEntityBase` and\n"
"Quarkus will generate them for you. You can even extend `PanacheEntity` and take advantage of the default ID it provides."
msgstr "Si no quiere molestarse en definir getters/setters para sus entidades, puede hacer que extiendan `PanacheEntityBase` y Quarkus los generará por usted. Incluso puede extender `PanacheEntity` y aprovechar el ID por defecto que proporciona."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "Defining your repository"
msgstr "Definir el repositorio"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"When using Repositories, you get the exact same convenient methods as with the active record pattern, injected in your Repository,\n"
"by making them implements `PanacheRepository`:"
msgstr "Cuando utilice Repositorios, obtendrá exactamente los mismos métodos convenientes que con el patrón de registro activo, inyectados en su Repositorio, haciendo que implementen `PanacheRepository` :"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"All the operations that are defined on `PanacheEntityBase` are available on your repository, so using it\n"
"is exactly the same as using the active record pattern, except you need to inject it:"
msgstr "Todas las operaciones que se definen en `PanacheEntityBase` están disponibles en su repositorio, por lo que utilizarlo es exactamente igual que utilizar el patrón de registro activo, salvo que necesita inyectarlo:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "Once you have written your repository, here are the most common operations you will be able to perform:"
msgstr "Una vez que haya escrito su repositorio, estas son las operaciones más comunes que podrá realizar:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "The `stream` methods require a transaction to work."
msgstr "Los métodos de `stream` requieren una transacción para funcionar."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"The rest of the documentation show usages based on the active record pattern only,\n"
"but keep in mind that they can be performed with the repository pattern as well.\n"
"The repository pattern examples have been omitted for brevity."
msgstr "El resto de la documentación muestra usos basados únicamente en el patrón de registro activo, pero tenga en cuenta que también pueden realizarse con el patrón de repositorio. Los ejemplos del patrón de repositorio se han omitido por brevedad."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Writing a Jakarta REST resource"
msgstr "Escribir un recurso REST de Jakarta"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "First, include one of the RESTEasy Reactive extensions to enable Jakarta REST endpoints, for example, add the `io.quarkus:quarkus-resteasy-reactive-jackson` dependency for Jakarta REST and JSON support."
msgstr "En primer lugar, incluya una de las extensiones RESTEasy Reactive para habilitar los puntos finales REST de Yakarta, por ejemplo, añada la dependencia `io.quarkus:quarkus-resteasy-reactive-jackson` para la compatibilidad con REST y JSON de Yakarta."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Then, you can create the following resource to create/read/update/delete your Person entity:"
msgstr "A continuación, puede crear el siguiente recurso para crear/leer/actualizar/borrar su entidad Persona:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Be careful to use the `@Transactional` annotation on the operations that modify the database,\n"
"you can add the annotation at the class level for simplicity purpose."
msgstr "Tenga cuidado de utilizar la anotación `@Transactional` en las operaciones que modifican la base de datos, puede añadir la anotación a nivel de clase para simplificar."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "To make it easier to showcase some capabilities of Hibernate ORM with Panache on Quarkus with Dev mode, some test data should be inserted into the database by adding the following content to a new file named src/main/resources/import.sql:"
msgstr "Para facilitar la demostración de algunas capacidades de Hibernate ORM con Panache en Quarkus con modo Dev, se deben insertar algunos datos de prueba en la base de datos añadiendo el siguiente contenido a un nuevo archivo llamado src/main/resources/import.sql:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "If you would like to initialize the DB when you start the Quarkus app in your production environment, add `quarkus.hibernate-orm.database.generation=drop-and-create` to the Quarkus startup options in addition to `import.sql`."
msgstr "Si desea inicializar la BD cuando inicie la aplicación Quarkus en su entorno de producción, añada `quarkus.hibernate-orm.database.generation=drop-and-create` a las opciones de inicio de Quarkus además de `import.sql` ."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "After that, you can see the people list and add new person as followings:"
msgstr "Después de eso, podrá ver la lista de personas y añadir nuevas personas como seguidos:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "If you see the Person object as Person<1>, then the object has not been converted. In this case, add the dependency `quarkus-resteasy-reactive-jackson` in `pom.xml`."
msgstr "Si ve el objeto Persona como Person<1>, entonces el objeto no ha sido convertido. En este caso, añada la dependencia `quarkus-resteasy-reactive-jackson` en `pom.xml` ."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Advanced Query"
msgstr "Consulta avanzada"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Paging"
msgstr "Paging"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"You should only use `list` and `stream` methods if your table contains small enough data sets. For larger data\n"
"sets you can use the `find` method equivalents, which return a `PanacheQuery` on which you can do paging:"
msgstr "Sólo debe utilizar los métodos `list` y `stream` si su tabla contiene conjuntos de datos lo suficientemente pequeños. Para conjuntos de datos más grandes puede utilizar los equivalentes del método `find` , que devuelven un `PanacheQuery` sobre el que puede realizar la paginación:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "The `PanacheQuery` type has many other methods to deal with paging and returning streams."
msgstr "El tipo `PanacheQuery` tiene muchos otros métodos para tratar la paginación y la devolución de flujos."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Using a range instead of pages"
msgstr "Utilizar un rango en lugar de páginas"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "`PanacheQuery` also allows range-based queries."
msgstr "`PanacheQuery` también permite realizar consultas basadas en rangos."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"You cannot mix ranges and pages: if you use a range, all methods that depend on having a current page will throw an `UnsupportedOperationException`;\n"
"you can switch back to paging using `page(Page)` or `page(int, int)`."
msgstr "No puede mezclar rangos y páginas: si utiliza un rango, todos los métodos que dependan de tener una página actual lanzarán un `UnsupportedOperationException` ; puede volver a la paginación utilizando `page(Page)` o `page(int, int)` ."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Sorting"
msgstr "Clasificación"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "All methods accepting a query string also accept the following simplified query form:"
msgstr "Todos los métodos que aceptan una cadena de consulta también aceptan la siguiente forma de consulta simplificada:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "But these methods also accept an optional `Sort` parameter, which allows you to abstract your sorting:"
msgstr "Pero estos métodos también aceptan un parámetro opcional `Sort` , que le permite abstraer su ordenación:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "The `Sort` class has plenty of methods for adding columns and specifying sort direction or the null precedence."
msgstr "La clase `Sort` dispone de numerosos métodos para añadir columnas y especificar la dirección de ordenación o la precedencia de los nulos."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Simplified queries"
msgstr "Consultas simplificadas"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Normally, HQL queries are of this form: `from EntityName [where ...] [order by ...]`, with optional elements\n"
"at the end."
msgstr "Normalmente, las consultas HQL tienen esta forma: `from EntityName [where …​] [order by …​]` , con elementos opcionales al final."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "If your select query does not start with `from`, we support the following additional forms:"
msgstr "Si su consulta de selección no comienza con `from`, admitimos las siguientes formas adicionales:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "`order by ...` which will expand to `from EntityName order by ...`"
msgstr "`order by …​` que se ampliará a `from EntityName order by …​`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "`<singleColumnName>` (and single parameter) which will expand to `from EntityName where <singleColumnName> = ?`"
msgstr "`&amp;lt;singleColumnName&amp;gt;` (y un solo parámetro) que se expandirá a `from EntityName where &amp;lt;singleColumnName&amp;gt; = ?`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "`<query>` will expand to `from EntityName where <query>`"
msgstr "`&amp;lt;query&amp;gt;` se ampliará a `from EntityName where &amp;lt;query&amp;gt;`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "If your update query does not start with `update`, we support the following additional forms:"
msgstr "Si su consulta de actualización no comienza con `update`, admitimos las siguientes formas adicionales:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "`from EntityName ...` which will expand to `update EntityName ...`"
msgstr "`from EntityName …​` que se ampliará a `update EntityName …​`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "`set? <singleColumnName>` (and single parameter) which will expand to `update EntityName set <singleColumnName> = ?`"
msgstr "`set? <singleColumnName>` (y parámetro único) que se expandirá a `update EntityName set <singleColumnName> = ?`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "`set? <update-query>` will expand to `update EntityName set <update-query>`"
msgstr "`set? <update-query>` se ampliará a `update EntityName set <update-query>`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "If your delete query does not start with `delete`, we support the following additional forms:"
msgstr "Si su consulta de eliminación no empieza por `delete`, admitimos las siguientes formas adicionales:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "`from EntityName ...` which will expand to `delete from EntityName ...`"
msgstr "`from EntityName …​` que se ampliará a `delete from EntityName …​`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "`<singleColumnName>` (and single parameter) which will expand to `delete from EntityName where <singleColumnName> = ?`"
msgstr "`&amp;lt;singleColumnName&amp;gt;` (y un solo parámetro) que se expandirá a `delete from EntityName where &amp;lt;singleColumnName&amp;gt; = ?`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "`<query>` will expand to `delete from EntityName where <query>`"
msgstr "`&amp;lt;query&amp;gt;` se ampliará a `delete from EntityName where &amp;lt;query&amp;gt;`"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"You can also write your queries in plain\n"
"link:{hibernate-orm-docs-url}#hql[HQL]:"
msgstr "También puede escribir sus consultas en link:{hibernate-orm-docs-url}#hql[HQL] simple:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Named queries"
msgstr "Consultas con nombre"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "You can reference a named query instead of a (simplified) HQL query by prefixing its name with the '#' character. You can also use named queries for count, update and delete queries."
msgstr "Puede hacer referencia a una consulta con nombre en lugar de una consulta HQL (simplificada) anteponiendo a su nombre el carácter \"#\". También puede utilizar consultas con nombre para las consultas de recuento, actualización y eliminación."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Named queries can only be defined inside your Jakarta Persistence entity classes (being the Panache entity class, or the repository parameterized type),\n"
"or on one of its super classes."
msgstr "Las consultas con nombre sólo pueden definirse dentro de sus clases de entidad de Jakarta Persistence (ya sea la clase de entidad Panache, o el tipo parametrizado del repositorio), o en una de sus superclases."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Query parameters"
msgstr "Parámetros de consulta"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "You can pass query parameters by index (1-based) as shown below:"
msgstr "Puede pasar los parámetros de consulta por índice (basado en 1) como se muestra a continuación:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Or by name using a `Map`:"
msgstr "O por el nombre utilizando un `Map`:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Or using the convenience class `Parameters` either as is or to build a `Map`:"
msgstr "O utilizando la clase de conveniencia `Parameters` ya sea tal cual o para construir un `Map`:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Every query operation accepts passing parameters by index (`Object...`), or by name (`Map<String,Object>` or `Parameters`)."
msgstr "Cada operación de consulta acepta el paso de parámetros por índice ( `Object…​`), o por nombre ( `Map&amp;lt;String,Object&amp;gt;` o `Parameters`)."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Query projection"
msgstr "Proyección de la consulta"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Query projection can be done with the `project(Class)` method on the `PanacheQuery` object that is returned by the `find()` methods."
msgstr "La proyección de la consulta puede realizarse con el método `project(Class)` sobre el objeto `PanacheQuery` que es devuelto por los métodos `find()`."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "You can use it to restrict which fields will be returned by the database."
msgstr "Puede utilizarlo para restringir los campos que devolverá la base de datos."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Hibernate will use **DTO projection** and generate a SELECT clause with the attributes from the projection class.\n"
"This is also called **dynamic instantiation** or **constructor expression**, more info can be found on the Hibernate guide:\n"
"link:{hibernate-orm-docs-url}#hql-select-clause[hql select clause]"
msgstr "Hibernate utilizará la *proyección DTO* y generará una cláusula SELECT con los atributos de la clase de proyección. Esto también se denomina *instanciación dinámica* o *expresión* del constructor, puede encontrar más información en la guía de Hibernate: link:{hibernate-orm-docs-url}#hql-select-clause[hql select] clause"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"The projection class needs to have a constructor that contains all its attributes, this constructor will be used to\n"
"instantiate the projection DTO instead of using the entity class. This class must have a matching constructor with all the class attributes as parameters."
msgstr "La clase de proyección debe tener un constructor que contenga todos sus atributos, este constructor se utilizará para instanciar el DTO de proyección en lugar de utilizar la clase de entidad. Esta clase debe tener un constructor coincidente con todos los atributos de la clase como parámetros."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "The `@RegisterForReflection` annotation instructs Quarkus to keep the class and its members during the native compilation. More details about the `@RegisterForReflection` annotation can be found on  the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr "La anotación `@RegisterForReflection` indica a Quarkus que mantenga la clase y sus miembros durante la compilación nativa. Se pueden encontrar más detalles sobre la anotación `@RegisterForReflection` en la página de  link:writing-native-applications-tips.html#registerForReflection[consejos para aplicaciones] nativas."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "We use public fields here, but you can use private fields and getters/setters if you prefer."
msgstr "Aquí utilizamos campos públicos, pero puedes utilizar campos privados y getters/setters si lo prefieres."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "This constructor will be used by Hibernate, it must be the only constructor in your class and have all the class attributes as parameters."
msgstr "Este constructor será utilizado por Hibernate, debe ser el único constructor en su clase y tener todos los atributos de la clase como parámetros."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"The implementation of the `project(Class)` method uses the constructor's parameter names to build the select clause of the query,\n"
"so the compiler must be configured to store parameter names inside the compiled class.\n"
"This is enabled by default if you are using the Quarkus Maven archetype. If you are not using it, add the property `<maven.compiler.parameters>true</maven.compiler.parameters>` to your `pom.xml`."
msgstr "La implementación del método `project(Class)` utiliza los nombres de los parámetros del constructor para construir la cláusula select de la consulta, por lo que el compilador debe estar configurado para almacenar los nombres de los parámetros dentro de la clase compilada. Esto está habilitado por defecto si está utilizando el arquetipo Quarkus Maven. Si no lo está utilizando, añada la propiedad `<maven.compiler.parameters>true</maven.compiler.parameters>` a su `pom.xml` ."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "If you run Java 17+, records are a good fit for projection classes."
msgstr "Si ejecuta Java 17+, los registros son una buena opción para las clases de proyección."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "If in the DTO projection object you have a field from a referenced entity, you can use the `@ProjectedFieldName` annotation to provide the path for the SELECT statement."
msgstr "Si en el objeto de proyección DTO tiene un campo de una entidad referenciada, puede utilizar la anotación `@ProjectedFieldName` para proporcionar la ruta para la sentencia SELECT."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "The `ownerName` DTO constructor's parameter will be loaded from the `owner.name` HQL property."
msgstr "El parámetro del constructor `ownerName` DTO se cargará desde la propiedad HQL `owner.name`."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"It is also possible to specify a HQL query with a select clause. In this case, the projection class must have a constructor\n"
"matching the values returned by the select clause:"
msgstr "También es posible especificar una consulta HQL con una cláusula select. En este caso, la clase de proyección debe tener un constructor que coincida con los valores devueltos por la cláusula select:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Hibernate ORM will use this constructor. When the query has a select clause, it is possible to have multiple constructors."
msgstr "Hibernate ORM utilizará este constructor. Cuando la consulta tiene una cláusula select, es posible tener varios constructores."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "It is not possible to have a HQL `select new` query and `.project(Class)` at the same time - you need to pick one approach."
msgstr "No es posible tener una consulta HQL `select new` y `.project(Class)` al mismo tiempo - tiene que elegir un enfoque."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "For example, this will fail:"
msgstr "Por ejemplo, esto fallará:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Multiple Persistence Units"
msgstr "Unidades de persistencia múltiple"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "The support for multiple persistence units is described in detail in xref:hibernate-orm.adoc#multiple-persistence-units[the Hibernate ORM guide]."
msgstr "El soporte para múltiples unidades de persistencia se describe en detalle en  link:hibernate-orm.html#multiple-persistence-units[la guía de Hibernate ORM]."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "When using Panache, things are simple:"
msgstr "Cuando se utiliza Panache, las cosas son sencillas:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "A given Panache entity can be attached to only a single persistence unit."
msgstr "Una determinada entidad de Panache sólo puede adjuntarse a una única unidad de persistencia."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Given that, Panache already provides the necessary plumbing to transparently find the appropriate `EntityManager` associated to a Panache entity."
msgstr "En este sentido, Panache ya proporciona la fontanería necesaria para encontrar de forma transparente el `EntityManager` adecuado asociado a una entidad Panache."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Transactions"
msgstr "Transacciones"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Make sure to wrap methods modifying your database (e.g. `entity.persist()`) within a transaction. Marking a\n"
"CDI bean method `@Transactional` will do that for you and make that method a transaction boundary. We recommend doing\n"
"so at your application entry point boundaries like your REST endpoint controllers."
msgstr "Asegúrese de envolver los métodos que modifican su base de datos (por ejemplo `entity.persist()` ) dentro de una transacción. Marcar un método CDI bean `@Transactional` lo hará por usted y convertirá ese método en un límite de transacción. Le recomendamos que lo haga en los límites de los puntos de entrada de su aplicación, como los controladores de sus puntos finales REST."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Hibernate ORM batches changes you make to your entities and sends changes (it is called flush) at the end of the transaction or before a query.\n"
"This is usually a good thing as it is more efficient.\n"
"But if you want to check optimistic locking failures, do object validation right away or generally want to get immediate feedback, you can force the flush operation by calling `entity.flush()` or even use `entity.persistAndFlush()` to make it a single method call. This will allow you to catch any `PersistenceException` that could occur when Hibernate ORM sends those changes to the database.\n"
"Remember, this is less efficient so don't abuse it.\n"
"And your transaction still has to be committed."
msgstr "El ORM de Hibernate procesa por lotes los cambios que realice en sus entidades y envía los cambios (se denomina flush) al final de la transacción o antes de una consulta. Esto suele ser bueno, ya que es más eficiente. Pero si desea comprobar fallos de bloqueo optimistas, hacer una validación de objetos de inmediato o, en general, desea obtener información inmediata, puede forzar la operación de vaciado llamando a `entity.flush()` o incluso utilizar `entity.persistAndFlush()` para convertirla en una única llamada a un método. Esto le permitirá capturar cualquier `PersistenceException` que pudiera producirse cuando el ORM de Hibernate envíe esos cambios a la base de datos. Recuerde, esto es menos eficiente así que no abuse de ello. Y su transacción todavía tiene que ser comprometida."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Here is an example of the usage of the flush method to allow making a specific action in case of `PersistenceException`:"
msgstr "He aquí un ejemplo del uso del método de descarga para permitir realizar una acción específica en caso de `PersistenceException`:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Lock management"
msgstr "Gestión de cerraduras"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Panache provides direct support for database locking with your entity/repository, using `findById(Object, LockModeType)` or `find().withLock(LockModeType)`."
msgstr "Panache proporciona soporte directo para el bloqueo de la base de datos con su entidad/repositorio, utilizando `findById(Object, LockModeType)` o `find().withLock(LockModeType)`."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "The following examples are for the active record pattern, but the same can be used with repositories."
msgstr "Los siguientes ejemplos son para el patrón de registro activo, pero se puede utilizar lo mismo con los repositorios."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "First: Locking using findById()."
msgstr "Primero: Bloqueo mediante findById()."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Second: Locking in a find()."
msgstr "Segundo: Bloqueo en un find()."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Be careful that locks are released when the transaction ends, so the method that invokes the lock query must be annotated with the `@Transactional` annotation."
msgstr "Hay que tener cuidado de que los bloqueos se liberen cuando la transacción termine, por lo que el método que invoca la consulta de bloqueo debe estar anotado con la anotación `@Transactional`."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Custom IDs"
msgstr "Identificaciones personalizadas"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"IDs are often a touchy subject, and not everyone's up for letting them handled by the framework, once again we\n"
"have you covered."
msgstr "Las identificaciones suelen ser un tema delicado, y no todo el mundo está dispuesto a dejar que las maneje el marco, una vez más le tenemos cubierto."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"You can specify your own ID strategy by extending `PanacheEntityBase` instead of `PanacheEntity`. Then\n"
"you just declare whatever ID you want as a public field:"
msgstr "Puede especificar su propia estrategia de ID ampliando `PanacheEntityBase` en lugar de `PanacheEntity` . A continuación, sólo tiene que declarar el ID que desee como campo público:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"If you're using repositories, then you will want to extend `PanacheRepositoryBase` instead of `PanacheRepository`\n"
"and specify your ID type as an extra type parameter:"
msgstr "Si utiliza repositorios, entonces querrá ampliar `PanacheRepositoryBase` en lugar de `PanacheRepository` y especificar su tipo de ID como un parámetro de tipo adicional:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Mocking"
msgstr "Burlándose de"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Using the active record pattern"
msgstr "Uso del patrón de registro activo"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"If you are using the active record pattern you cannot use Mockito directly as it does not support mocking static methods,\n"
"but you can use the `quarkus-panache-mock` module which allows you to use Mockito to mock all provided static\n"
"methods, including your own."
msgstr "Si está utilizando el patrón de registro activo, no puede utilizar Mockito directamente, ya que no admite la burla de métodos estáticos, pero puede utilizar el módulo `quarkus-panache-mock` , que le permite utilizar Mockito para burlarse de todos los métodos estáticos proporcionados, incluidos los suyos propios."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Add this dependency to your `pom.xml`:"
msgstr "Añada esta dependencia a su `pom.xml`:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Given this simple entity:"
msgstr "Dada esta simple entidad:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "You can write your mocking test like this:"
msgstr "Puedes escribir tu prueba de burla así:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Be sure to call your `verify` and `do*` methods on `PanacheMock` rather than `Mockito`, otherwise you won't know\n"
"what mock object to pass."
msgstr "Asegúrese de llamar a sus métodos `verify` y `do*` en `PanacheMock` en lugar de `Mockito` , de lo contrario no sabrá qué objeto simulado pasar."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Mocking `EntityManager`, `Session` and entity instance methods"
msgstr "Mocking `EntityManager`, `Session` y métodos de instancia de entidad"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "If you need to mock entity instance methods, such as `persist()` you can do it by mocking the Hibernate ORM `Session` object:"
msgstr "Si necesita burlarse de los métodos de instancia de la entidad, como `persist()`, puede hacerlo burlándose del objeto Hibernate ORM `Session`:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
msgid "Using the repository pattern"
msgstr "Uso del patrón de repositorio"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"If you are using the repository pattern you can use Mockito directly, using the `quarkus-junit5-mockito` module,\n"
"which makes mocking beans much easier:"
msgstr "Si está utilizando el patrón de repositorio puede utilizar Mockito directamente, utilizando el módulo `quarkus-junit5-mockito` , lo que hace que mocking beans sea mucho más fácil:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "And this repository:"
msgstr "Y este depósito:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "How and why we simplify Hibernate ORM mappings"
msgstr "Cómo y por qué simplificamos los mapeos ORM de Hibernate"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"When it comes to writing Hibernate ORM entities, there are a number of annoying things that users have grown used to\n"
"reluctantly deal with, such as:"
msgstr "Cuando se trata de escribir entidades ORM de Hibernate, hay una serie de cosas molestas con las que los usuarios se han acostumbrado a lidiar a regañadientes, tales como:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Duplicating ID logic: most entities need an ID, most people don't care how it is set, because it is not really\n"
"relevant to your model."
msgstr "Duplicar la lógica del ID: la mayoría de las entidades necesitan un ID, a la mayoría de la gente no le importa cómo se establece, porque no es realmente relevante para su modelo."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Traditional EE patterns advise to split entity definition (the model) from the operations you can do on them\n"
"(DAOs, Repositories), but really that requires a split between the state and its operations even though\n"
"we would never do something like that for regular objects in the Object-Oriented architecture, where state and methods\n"
"are in the same class. Moreover, this requires two classes per entity, and requires injection of the DAO or Repository\n"
"where you need to do entity operations, which breaks your edit flow and requires you to get out of the code you're\n"
"writing to set up an injection point before coming back to use it."
msgstr "Los patrones EE tradicionales aconsejan dividir la definición de la entidad (el modelo) de las operaciones que puede hacer sobre ellas (DAOs, Repositorios), pero en realidad eso requiere una división entre el estado y sus operaciones aunque nunca haríamos algo así para objetos normales en la arquitectura Orientada a Objetos, donde el estado y los métodos están en la misma clase. Además, esto requiere dos clases por entidad, y requiere la inyección de la DAO o Repositorio donde necesita hacer las operaciones de la entidad, lo que rompe su flujo de edición y requiere que salga del código que está escribiendo para establecer un punto de inyección antes de volver a utilizarlo."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Hibernate queries are super powerful, but overly verbose for common operations, requiring you to write queries even\n"
"when you don't need all the parts."
msgstr "Las consultas de Hibernate son superpotentes, pero excesivamente prolijas para las operaciones comunes, lo que le obliga a escribir consultas incluso cuando no necesita todas las partes."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Hibernate is very general-purpose, but does not make it trivial to do trivial operations that make up 90% of our\n"
"model usage."
msgstr "Hibernate es muy polivalente, pero no permite realizar las operaciones triviales que constituyen el 90% del uso de nuestro modelo."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "With Panache, we took an opinionated approach to tackle all these problems:"
msgstr "Con Panache, adoptamos un enfoque de opinión para abordar todos estos problemas:"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Make your entities extend `PanacheEntity`: it has an ID field that is auto-generated. If you require\n"
"a custom ID strategy, you can extend `PanacheEntityBase` instead and handle the ID yourself."
msgstr "Haga que sus entidades extiendan `PanacheEntity` : tiene un campo ID que se genera automáticamente. Si necesita una estrategia de ID personalizada, puede extender `PanacheEntityBase` en su lugar y gestionar el ID usted mismo."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Use public fields. Get rid of dumb getter and setters. Hibernate ORM w/o Panache also doesn't require you to use getters and setters,\n"
"but Panache will additionally generate all getters and setters that are missing, and rewrite every access to these fields to use the accessor methods. This way you can still\n"
"write _useful_ accessors when you need them, which will be used even though your entity users still use field accesses. This implies that from the Hibernate perspective you're using accessors via getters and setters even while it looks like field accessors."
msgstr "Utilice campos públicos. Deshágase de getters y setters tontos. Hibernate ORM sin Panache tampoco le exige que utilice getters y setters, pero Panache generará adicionalmente todos los getters y setters que falten, y reescribirá todos los accesos a estos campos para que utilicen los métodos accessor. De esta forma, podrá seguir escribiendo accesores _útiles_ cuando los necesite, que se utilizarán aunque los usuarios de su entidad sigan utilizando los accesos a los campos. Esto implica que, desde la perspectiva de Hibernate, está utilizando accesores a través de getters y setters aunque parezcan accesos de campo."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"With the active record pattern: put all your entity logic in static methods in your entity class and don't create DAOs.\n"
"Your entity superclass comes with lots of super useful static methods, and you can add your own in your entity class.\n"
"Users can just start using your entity `Person` by typing `Person.` and getting completion for all the operations in a single place."
msgstr "Con el patrón de registro activo: ponga toda su lógica de entidad en métodos estáticos en su clase de entidad y no cree DAOs. Su superclase de entidad viene con un montón de métodos estáticos superútiles, y usted puede añadir los suyos propios en su clase de entidad. Los usuarios pueden simplemente empezar a utilizar su entidad `Person` escribiendo `Person.` y obteniendo la finalización de todas las operaciones en un único lugar."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"Don't write parts of the query that you don't need: write `Person.find(\"order by name\")` or\n"
"`Person.find(\"name = ?1 and status = ?2\", \"stef\", Status.Alive)` or even better\n"
"`Person.find(\"name\", \"stef\")`."
msgstr "No escriba partes de la consulta que no necesite: escriba `Person.find(\"order by name\")` o `Person.find(\"name = ?1 and status = ?2\", \"stef\", Status.Alive)` o incluso mejor `Person.find(\"name\", \"stef\")` ."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "That's all there is to it: with Panache, Hibernate ORM has never looked so trim and neat."
msgstr "Eso es todo: con Panache, el ORM de Hibernate nunca ha tenido un aspecto tan cuidado."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Defining entities in external projects or jars"
msgstr "Definición de entidades en proyectos o tarros externos"

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid "Hibernate ORM with Panache relies on compile-time bytecode enhancements to your entities."
msgstr "Hibernate ORM con Panache se basa en las mejoras de código de bytes en tiempo de compilación de sus entidades."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"It attempts to identify archives with Panache entities (and consumers of Panache entities)\n"
"by the presence of the marker file `META-INF/panache-archive.marker`. Panache includes an\n"
"annotation processor that will automatically create this file in archives that depend on\n"
"Panache (even indirectly). If you have disabled annotation processors you may need to create\n"
"this file manually in some cases."
msgstr "Intenta identificar los archivos con entidades Panache (y los consumidores de entidades Panache) por la presencia del archivo marcador `META-INF/panache-archive.marker` . Panache incluye un procesador de anotaciones que creará automáticamente este archivo en los archivos que dependan de Panache (incluso indirectamente). Si ha desactivado los procesadores de anotación, es posible que tenga que crear este archivo manualmente en algunos casos."

#: _versions/3.6/guides/hibernate-orm-panache.adoc
#, fuzzy
msgid ""
"If you include the jpa-modelgen annotation processor this will exclude the Panache\n"
"annotation processor by default. If you do this you should either create the marker file\n"
"yourself, or add the `quarkus-panache-common` as well, as shown below:"
msgstr "Si incluye el procesador de anotaciones jpa-modelgen, éste excluirá por defecto el procesador de anotaciones Panache. Si lo hace, deberá crear usted mismo el archivo de marcadores o añadir también `quarkus-panache-common` , como se muestra a continuación:"
