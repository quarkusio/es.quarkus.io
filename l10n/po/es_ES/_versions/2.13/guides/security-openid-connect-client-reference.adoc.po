# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-26 08:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "OpenID Connect (OIDC) and OAuth2 Client and Filters Reference Guide"
msgstr "Guía de referencia del cliente y los filtros de OpenID Connect (OIDC) y OAuth2"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "This reference guide explains how to use:"
msgstr "Esta guía de referencia explica cómo utilizarlo:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`quarkus-oidc-client`, `quarkus-oidc-client-reactive-filter` and `quarkus-oidc-client-filter` extensions to acquire and refresh access tokens from OpenID Connect and OAuth 2.0 compliant Authorization Servers such as https://www.keycloak.org[Keycloak]"
msgstr "`quarkus-oidc-client` , `quarkus-oidc-client-reactive-filter` y `quarkus-oidc-client-filter` extensiones para adquirir y actualizar tokens de acceso desde OpenID Connect y servidores de autorización compatibles con OAuth 2.0 como link:https://www.keycloak.org[Keycloak] ."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`quarkus-oidc-token-propagation` and `quarkus-oidc-token-propagation-reactive` extensions to propagate the current `Bearer` or `Authorization Code Flow` access tokens"
msgstr "`quarkus-oidc-token-propagation` y `quarkus-oidc-token-propagation-reactive` extensiones para propagar los tokens de acceso actuales `Bearer` o `Authorization Code Flow` "

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "The access tokens managed by these extensions can be used as HTTP Authorization Bearer tokens to access the remote services."
msgstr "Los tokens de acceso gestionados por estas extensiones pueden utilizarse como tokens de portador de autorización HTTP para acceder a los servicios remotos."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Please also see xref:security-openid-connect-client.adoc[OpenID Connect Client and Token Propagation Quickstart]."
msgstr "Consulte también el xref:security-openid-connect-client.adoc[inicio rápido del cliente OpenID Connect y la propagación de tokens] ."

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "OidcClient"
msgstr "OidcClient"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Add the following dependency:"
msgstr "Añade la siguiente dependencia:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`quarkus-oidc-client` extension provides a reactive `io.quarkus.oidc.client.OidcClient` which can be used to acquire and refresh tokens using SmallRye Mutiny `Uni` and `Vert.x WebClient`."
msgstr "`quarkus-oidc-client` proporciona un `io.quarkus.oidc.client.OidcClient` reactivo que puede utilizarse para adquirir y refrescar fichas utilizando SmallRye Mutiny `Uni` y `Vert.x WebClient`."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`OidcClient` is initialized at the build time with the IDP token endpoint URL which can be auto-discovered or manually configured and uses this endpoint to acquire access tokens using the token grants such as `client_credentials` or `password` and refresh the tokens using a `refresh_token` grant."
msgstr "`OidcClient` se inicializa en el momento de la construcción con la URL del punto final del token IDP, que puede ser autodescubierto o configurado manualmente, y utiliza este punto final para adquirir tokens de acceso utilizando las concesiones de tokens como `client_credentials` o `password` y refrescar los tokens utilizando una concesión `refresh_token`."

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Token Endpoint Configuration"
msgstr "Configuración del punto final del token"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "By default, the token endpoint address is discovered by adding a `/.well-known/openid-configuration` path to the configured `quarkus.oidc-client.auth-server-url`."
msgstr "Por defecto, la dirección del punto final de token se descubre añadiendo una ruta `/.well-known/openid-configuration` a la configurada `quarkus.oidc-client.auth-server-url` ."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "For example, given this Keycloak URL:"
msgstr "Por ejemplo, dada esta URL de Keycloak:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`OidcClient` will discover that the token endpoint URL is `http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/tokens`."
msgstr "`OidcClient` descubrirá que la URL del punto final del token es `&lt;a href=\"http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/tokens\" class=\"bare\"&gt;http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/tokens&lt;/a&gt;`."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Alternatively, if the discovery endpoint is not available or you would like to save on the discovery endpoint round-trip, you can disable the discovery and configure the token endpoint address with a relative path value, for example:"
msgstr "Alternativamente, si el punto final de descubrimiento no está disponible o desea ahorrarse el viaje de ida y vuelta del punto final de descubrimiento, puede desactivar el descubrimiento y configurar la dirección del punto final de token con un valor de ruta relativo, por ejemplo:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "A more compact way to configure the token endpoint URL without the discovery is to set `quarkus.oidc-client.token-path` to an absolute URL:"
msgstr "Una forma más compacta de configurar la URL del punto final del token sin el descubrimiento es establecer `quarkus.oidc-client.token-path` a una URL absoluta:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Setting 'quarkus.oidc-client.auth-server-url' and 'quarkus.oidc-client.discovery-enabled' is not required in this case."
msgstr "La configuración de 'quarkus.oidc-client.auth-server-url' y 'quarkus.oidc-client.discovery-enabled' no es necesaria en este caso."

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Supported Token Grants"
msgstr "Subvenciones de fichas apoyadas"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "The main token grants which `OidcClient` can use to acquire the tokens are the `client_credentials` (default) and `password` grants."
msgstr "Las principales concesiones de fichas que `OidcClient` puede utilizar para adquirir las fichas son las concesiones `client_credentials` (por defecto) y `password`."

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Client Credentials Grant"
msgstr "Subvención de las credenciales de los clientes"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Here is how `OidcClient` can be configured to use the `client_credentials` grant:"
msgstr "Así es como se puede configurar `OidcClient` para utilizar la subvención `client_credentials`:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "The `client_credentials` grant allows to set extra parameters to the token request via `quarkus.oidc-client.grant-options.client.<param-name>=<value>`. Here is how to set the intended token recipient via the `audience` parameter:"
msgstr "La concesión `client_credentials` permite establecer parámetros adicionales a la solicitud de token a través de `quarkus.oidc-client.grant-options.client.&amp;lt;param-name&amp;gt;=&amp;lt;value&amp;gt;`. A continuación se explica cómo establecer el destinatario del token a través del parámetro `audience`:"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Password Grant"
msgstr "Concesión de la contraseña"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Here is how `OidcClient` can be configured to use the `password` grant:"
msgstr "Así es como se puede configurar `OidcClient` para utilizar la subvención `password`:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "It can be further customized using a `quarkus.oidc-client.grant-options.password` configuration prefix, similarly to how the client credentials grant can be customized."
msgstr "Se puede personalizar aún más utilizando un prefijo de configuración `quarkus.oidc-client.grant-options.password`, de forma similar a como se puede personalizar la concesión de credenciales de cliente."

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Other Grants"
msgstr "Otras subvenciones"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`OidcClient` can also help with acquiring the tokens using the grants which require some extra input parameters which can not be captured in the configuration. These grants are `refresh token` (with the external refresh token), `token exchange` and `authorization code`."
msgstr "`OidcClient` también puede ayudar a adquirir los tokens utilizando las subvenciones que requieren algunos parámetros de entrada adicionales que no se pueden capturar en la configuración. Estas subvenciones son `refresh token` (con el token de refresco externo), `token exchange` y `authorization code` ."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Using the `refresh_token` grant which uses an out-of-band refresh token to acquire a new set of tokens will be required if the existing refresh token has been posted to the current Quarkus endpoint for it to acquire the access token. In this case `OidcClient` needs to be configured as follows:"
msgstr "Será necesario utilizar la concesión `refresh_token` que utiliza un token de actualización fuera de banda para adquirir un nuevo conjunto de tokens si el token de actualización existente se ha enviado al punto final de Quarkus actual para que adquiera el token de acceso. En este caso, `OidcClient` debe configurarse como sigue:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "and then you can use `OidcClient.refreshTokens` method with a provided refresh token to get the access token."
msgstr "y luego puede utilizar el método `OidcClient.refreshTokens` con un token de actualización proporcionado para obtener el token de acceso."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Using the `token exchange` grant may be required if you are building a complex microservices application and would like to avoid the same `Bearer` token be propagated to and used by more than one service. Please see <<token-propagation,Token Propagation in MicroProfile RestClient client filter>> for more details."
msgstr "El uso de la concesión `token exchange` puede ser necesario si está construyendo una aplicación de microservicios compleja y desea evitar que el mismo token `Bearer` se propague y sea utilizado por más de un servicio. Consulte Propagación de tokens xref:token-propagation[en el filtro de cliente RestClient de MicroProfile] para obtener más detalles."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Using `OidcClient` to support the `authorization code` grant might be required if for some reasons you can not use the xref:security-openid-connect-web-authentication.adoc[Quarkus OpenID Connect extension] to support Authorization Code Flow. If there is a very good reason for you to implement Authorization Code Flow then you can configure `OidcClient` as follows:"
msgstr "Utilizar `OidcClient` para soportar la concesión `authorization code` puede ser necesario si por algunas razones no puede utilizar la xref:security-openid-connect-web-authentication.adoc[extensión OpenID Connect de Quarkus] para soportar el Flujo de Códigos de Autorización. Si existe una muy buena razón para que usted implemente el Flujo de Códigos de Autorización entonces puede configurar `OidcClient` de la siguiente manera:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "and then you can use `OidcClient.accessTokens` method accepting a Map of extra properties and pass the current `code` and `redirect_uri` parameters to exchange the authorization code for the tokens."
msgstr "y luego puedes usar el método `OidcClient.accessTokens` aceptando un Mapa de propiedades extra y pasar los parámetros actuales `code` y `redirect_uri` para intercambiar el código de autorización por los tokens."

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Grant scopes"
msgstr "Ámbito de aplicación de la subvención"

#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid ""
"You may need to request that a specific set of scopes is associated with an issued access token.\n"
"Use a dedicated `quarkus.oidc-client.scopes` list property, for example: `quarkus.oidc-client.scopes=email,phone`"
msgstr "Puede que necesite solicitar que un conjunto específico de ámbitos se asocie a un token de acceso emitido. Utilice una propiedad dedicada de la lista `quarkus.oidc-client.scopes` , por ejemplo: `quarkus.oidc-client.scopes=email,phone`"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Use OidcClient directly"
msgstr "Utilizar directamente OidcClient"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "One can use `OidcClient` directly as follows:"
msgstr "Se puede utilizar directamente `OidcClient` de la siguiente manera:"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Inject Tokens"
msgstr "Inyectar fichas"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "You can inject `Tokens` which uses `OidcClient` internally. `Tokens` can be used to acquire the access tokens and refresh them if necessary:"
msgstr "Se puede inyectar `Tokens` que utiliza `OidcClient` internamente. `Tokens` puede ser utilizado para adquirir los tokens de acceso y refrescarlos si es necesario:"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Use OidcClients"
msgstr "Utilizar OidcClients"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`io.quarkus.oidc.client.OidcClients` is a container of ``OidcClient``s - it includes a default `OidcClient` and named clients which can be configured like this:"
msgstr "`io.quarkus.oidc.client.OidcClients` es un contenedor de `OidcClient`s - incluye un `OidcClient` por defecto y clientes con nombre que pueden ser configurados así:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Note in this case the default client is disabled with a `client-enabled=false` property. The `jwt-secret` client can be accessed like this:"
msgstr "Tenga en cuenta que en este caso el cliente por defecto está desactivado con una propiedad `client-enabled=false`. Se puede acceder al cliente `jwt-secret` de la siguiente manera:"

#. type: delimited block =
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "If you also use xref:security-openid-connect-multitenancy.adoc[OIDC multitenancy] and each OIDC tenant has its own associated `OidcClient` then you can use a Vert.x `RoutingContext` `tenantId` attribute, for example:"
msgstr "Si también utiliza  link:security-openid-connect-multitenancy.html[el multitenant OIDC] y cada tenant OIDC tiene su propio `OidcClient` asociado, puede utilizar un atributo Vert.x `RoutingContext` `tenantId` , por ejemplo:"

#. type: delimited block =
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "If you need you can also create new `OidcClient` programmatically like this:"
msgstr "Si lo necesita, también puede crear un nuevo `OidcClient` mediante programación, de la siguiente manera:"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Inject named OidcClient and Tokens"
msgstr "Inyectar el llamado OidcClient y los tokens"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "In case of multiple configured ``OidcClient``s you can specify the `OidcClient` injection target by the extra qualifier `@NamedOidcClient` instead of working with `OidcClients`:"
msgstr "En el caso de múltiples `OidcClient`s configurados, puede especificar el objetivo de inyección `OidcClient` mediante el calificador extra `@NamedOidcClient` en lugar de trabajar con `OidcClients`:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "The same qualifier can be used to specify the `OidcClient` used for a `Tokens` injection:"
msgstr "El mismo calificador puede utilizarse para especificar el `OidcClient` utilizado para una inyección de `Tokens`:"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Use OidcClient in RestClient Reactive ClientFilter"
msgstr "Utilizar OidcClient en RestClient Reactive ClientFilter"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Add the following Maven Dependency:"
msgstr "Añade la siguiente dependencia de Maven:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Note it will also bring `io.quarkus:quarkus-oidc-client`."
msgstr "Tenga en cuenta que también traerá `io.quarkus:quarkus-oidc-client`."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`quarkus-oidc-client-reactive-filter` extension provides `io.quarkus.oidc.client.filter.OidcClientRequestReactiveFilter`."
msgstr "`quarkus-oidc-client-reactive-filter` La extensión proporciona `io.quarkus.oidc.client.filter.OidcClientRequestReactiveFilter`."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "It works similarly to the way `OidcClientRequestFilter` does (see <<oidc-client-filter, Use OidcClient in MicroProfile RestClient client filter>>) - it uses `OidcClient` to acquire the access token, refresh it if needed, and set it as an HTTP `Authorization` `Bearer` scheme value. The difference is that it works with xref:rest-client-reactive.adoc[Reactive RestClient] and implements a non-blocking client filter which does not block the current IO thread when acquiring or refreshing the tokens."
msgstr "Funciona de forma similar a como lo hace `OidcClientRequestFilter` (véase xref:oidc-client-filter[Utilizar OidcClient en el filtro de cliente RestClient de MicroProfile] ) - utiliza `OidcClient` para adquirir el token de acceso, refrescarlo si es necesario y establecerlo como un valor de esquema HTTP `Authorization` `Bearer` . La diferencia es que funciona con RestClient xref:rest-client-reactive.adoc[reactivo] e implementa un filtro de cliente no bloqueante que no bloquea el hilo IO actual al adquirir o refrescar los tokens."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`OidcClientRequestReactiveFilter` delays an initial token acquisition until it is executed to avoid blocking an IO thread."
msgstr "`OidcClientRequestReactiveFilter` retrasa la adquisición de un testigo inicial hasta su ejecución para evitar el bloqueo de un hilo IO."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "You can selectively register `OidcClientRequestReactiveFilter` by using either io.quarkus.oidc.client.reactive.filter.OidcClientFilter or org.eclipse.microprofile.rest.client.annotation.RegisterProvider annotations:"
msgstr "Puede registrar `OidcClientRequestReactiveFilter` de forma selectiva utilizando las anotaciones io.quarkus.oidc.client.reactive.filter.OidcClientFilter o org.eclipse.microprofile.rest.client.annotation.RegisterProvider:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "or"
msgstr "o"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`OidcClientRequestReactiveFilter` uses a default `OidcClient` by default. A named `OidcClient` can be selected with a `quarkus.oidc-client-reactive-filter.client-name` configuration property."
msgstr "`OidcClientRequestReactiveFilter` utiliza un `OidcClient` por defecto. Se puede seleccionar un `OidcClient` con nombre mediante una propiedad de configuración `quarkus.oidc-client-reactive-filter.client-name` ."

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Use OidcClient in RestClient ClientFilter"
msgstr "Utilizar OidcClient en RestClient ClientFilter"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`quarkus-oidc-client-filter` extension provides `io.quarkus.oidc.client.filter.OidcClientRequestFilter` JAX-RS ClientRequestFilter which uses `OidcClient` to acquire the access token, refresh it if needed, and set it as an HTTP `Authorization` `Bearer` scheme value."
msgstr "`quarkus-oidc-client-filter` La extensión proporciona `io.quarkus.oidc.client.filter.OidcClientRequestFilter` JAX-RS ClientRequestFilter que utiliza `OidcClient` para adquirir el token de acceso, actualizarlo si es necesario y establecerlo como un valor de esquema HTTP `Authorization` `Bearer` ."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "By default, this filter will get `OidcClient` to acquire the first pair of access and refresh tokens at its initialization time. If the access tokens are short-lived and refresh tokens are not available then the token acquisition should be delayed with `quarkus.oidc-client.early-tokens-acquisition=false`."
msgstr "Por defecto, este filtro obtendrá `OidcClient` para adquirir el primer par de tokens de acceso y refresco en su tiempo de inicialización. Si los tokens de acceso son de corta duración y los tokens de refresco no están disponibles, la adquisición de tokens debe retrasarse con `quarkus.oidc-client.early-tokens-acquisition=false`."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "You can selectively register `OidcClientRequestFilter` by using either `io.quarkus.oidc.client.filter.OidcClientFilter` or `org.eclipse.microprofile.rest.client.annotation.RegisterProvider` annotations:"
msgstr "Puede registrar selectivamente `OidcClientRequestFilter` utilizando las anotaciones `io.quarkus.oidc.client.filter.OidcClientFilter` o `org.eclipse.microprofile.rest.client.annotation.RegisterProvider`:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Alternatively, `OidcClientRequestFilter` can be registered automatically with all MP Rest or JAX-RS clients if `quarkus.oidc-client-filter.register-filter=true` property is set."
msgstr "Alternativamente, `OidcClientRequestFilter` puede registrarse automáticamente con todos los clientes MP Rest o JAX-RS si se establece la propiedad `quarkus.oidc-client-filter.register-filter=true` ."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`OidcClientRequestFilter` uses a default `OidcClient` by default. A named `OidcClient` can be selected with a `quarkus.oidc-client-filter.client-name` configuration property."
msgstr "`OidcClientRequestFilter` utiliza un `OidcClient` por defecto. Se puede seleccionar un `OidcClient` con nombre mediante una propiedad de configuración `quarkus.oidc-client-filter.client-name` ."

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Use Custom RestClient ClientFilter"
msgstr "Utilizar el ClientFilter personalizado de RestClient"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "If you prefer you can use your own custom filter and inject `Tokens`:"
msgstr "Si lo prefiere, puede utilizar su propio filtro personalizado e inyectar `Tokens`:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "The `Tokens` producer will acquire and refresh the tokens, and the custom filter will decide how and when to use the token."
msgstr "El productor de `Tokens` adquirirá y actualizará los tokens, y el filtro personalizado decidirá cómo y cuándo utilizar el token."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "You can also inject named `Tokens`, see <<named-oidc-clients,Inject named OidcClient and Tokens>>"
msgstr "También puede inyectar named `Tokens` , consulte xref:named-oidc-clients[Inyectar named OidcClient y Tokens]"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Refreshing Access Tokens"
msgstr "Refrescar los tokens de acceso"

#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid ""
"`OidcClientRequestReactiveFilter`, `OidcClientRequestFilter` and `Tokens` producers will refresh the current expired access token if the refresh token is available.\n"
"Additionally, `quarkus.oidc-client.refresh-token-time-skew` property can be used for a preemptive access token refreshment to avoid sending nearly expired access tokens which may cause HTTP 401 errors. For example if this property is set to `3S` and the access token will expire in less than 3 seconds then this token will be auto-refreshed."
msgstr "`OidcClientRequestReactiveFilter` , `OidcClientRequestFilter` y `Tokens` refrescarán el token de acceso caducado actual si el token de refresco está disponible. Además, la propiedad `quarkus.oidc-client.refresh-token-time-skew` puede utilizarse para un refresco preventivo del token de acceso para evitar el envío de tokens de acceso casi caducados que pueden causar errores HTTP 401. Por ejemplo, si esta propiedad se establece en `3S` y el token de acceso caducará en menos de 3 segundos, este token se refrescará automáticamente."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "If the access token needs to be refreshed but no refresh token is available then an attempt will be made to acquire a new token using the configured grant such as `client_credentials`."
msgstr "Si el token de acceso necesita ser refrescado pero no hay ningún token de refresco disponible, entonces se intentará adquirir un nuevo token utilizando la concesión configurada como `client_credentials`."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Please note that some OpenID Connect Providers will not return a refresh token in a `client_credentials` grant response. For example, starting from Keycloak 12 a refresh token will not be returned by default for `client_credentials`. The providers may also restrict a number of times a refresh token can be used."
msgstr "Tenga en cuenta que algunos proveedores de OpenID Connect no devolverán un token de actualización en una respuesta de concesión de `client_credentials` . Por ejemplo, a partir de Keycloak 12 no se devolverá un token de actualización por defecto para `client_credentials` . Los proveedores también pueden restringir el número de veces que se puede utilizar un token de actualización."

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Revoking Access Tokens"
msgstr "Revocación de tokens de acceso"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "If your OpenId Connect provider such as Keycloak supports a token revocation endpoint then `OidcClient#revokeAccessToken` can be used to revoke the current access token. The revocation endpoint URL will be discovered alongside the token request URI or can be configured with `quarkus.oidc-client.revoke-path`."
msgstr "Si su proveedor de OpenId Connect, como Keycloak, admite un punto final de revocación de tokens, podrá utilizar `OidcClient#revokeAccessToken` para revocar el token de acceso actual. La URL del punto final de revocación se descubrirá junto a la URI de solicitud de token o puede configurarse con `quarkus.oidc-client.revoke-path` ."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "You may want to have the access token revoked if using this token with a REST client fails with HTTP `401` or the access token has already been used for a long time and you'd like to refresh it."
msgstr "Es posible que desee revocar el token de acceso si al utilizarlo con un cliente REST se produce un error con HTTP `401` o si el token de acceso ya se ha utilizado durante mucho tiempo y desea renovarlo."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "This can be achieved by requesting a token refresh using a refresh token. However, if the refresh token is not available then you can refresh it by revoking it first and then request a new access token."
msgstr "Esto puede lograrse solicitando una actualización del token mediante un token de actualización. Sin embargo, si el token de refresco no está disponible, puede refrescarlo revocándolo primero y solicitando después un nuevo token de acceso."

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "OidcClient Authentication"
msgstr "Autenticación OidcClient"

#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid ""
"`OidcClient` has to authenticate to the OpenID Connect Provider for the `client_credentials` and other grant requests to succeed.\n"
"All the https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[OIDC Client Authentication] options are supported, for example:"
msgstr "`OidcClient` tiene que autenticarse en el proveedor de OpenID Connect para que la `client_credentials` y otras solicitudes de concesión tengan éxito. Se admiten todas las opciones de link:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[autenticación de cliente OIDC] , por ejemplo:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`client_secret_basic`:"
msgstr "`client_secret_basic`:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "or with the secret retrieved from a xref:credentials-provider.adoc[CredentialsProvider]:"
msgstr "o con el secreto recuperado de un  link:credentials-provider.html[CredentialsProvider]:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`client_secret_post`:"
msgstr "`client_secret_post`:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`client_secret_jwt`, signature algorithm is `HS256`:"
msgstr "`client_secret_jwt`El algoritmo de firma es `HS256`:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "or with the secret retrieved from a xref:credentials-provider.adoc[CredentialsProvider], signature algorithm is `HS256`:"
msgstr "o con el secreto recuperado de un  link:credentials-provider.html[CredentialsProvider], el algoritmo de firma es `HS256`:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`private_key_jwt` with the PEM key file, signature algorithm is `RS256`:"
msgstr "`private_key_jwt` con el archivo de claves PEM, el algoritmo de firma es `RS256`:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`private_key_jwt` with the key store file, signature algorithm is `RS256`:"
msgstr "`private_key_jwt` con el archivo de almacenamiento de claves, el algoritmo de firma es `RS256` :"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Using `client_secret_jwt` or `private_key_jwt` authentication methods ensures that no client secret goes over the wire."
msgstr "El uso de los métodos de autenticación `client_secret_jwt` o `private_key_jwt` garantiza que ningún secreto del cliente pase por el cable."

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Additional JWT Authentication options"
msgstr "Opciones adicionales de autenticación JWT"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "If either `client_secret_jwt` or `private_key_jwt` authentication methods are used then the JWT signature algorithm, key identifier, audience, subject and issuer can be customized, for example:"
msgstr "Si se utilizan los métodos de autenticación `client_secret_jwt` o `private_key_jwt`, se pueden personalizar, por ejemplo, el algoritmo de la firma JWT, el identificador de la clave, el público, el sujeto y el emisor:"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Apple POST JWT"
msgstr "Apple POST JWT"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Apple OpenID Connect Provider uses a `client_secret_post` method where a secret is a JWT produced with a `private_key_jwt` authentication method but with Apple account specific issuer and subject properties."
msgstr "El proveedor de Apple OpenID Connect utiliza un método `client_secret_post` en el que un secreto es un JWT producido con un método de autenticación `private_key_jwt` pero con propiedades de emisor y sujeto específicas de la cuenta de Apple."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`quarkus-oidc-client` supports a non-standard `client_secret_post_jwt` authentication method which can be configured as follows:"
msgstr "`quarkus-oidc-client` admite un método de autenticación no estándar `client_secret_post_jwt` que puede configurarse como sigue:"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Mutual TLS"
msgstr "TLS mutuo"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Some OpenID Connect Providers may require that a client is authenticated as part of the `Mutual TLS` (`mTLS`) authentication process."
msgstr "Algunos proveedores de OpenID Connect pueden requerir que el cliente se autentique como parte del proceso de autenticación de `Mutual TLS` ( `mTLS`)."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`quarkus-oidc-client` can be configured as follows to support `mTLS`:"
msgstr "`quarkus-oidc-client` puede configurarse de la siguiente manera para admitir `mTLS` :"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, no-wrap
msgid "Testing"
msgstr "Probando"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Start by adding the following dependencies to your test project:"
msgstr "Comience por añadir las siguientes dependencias a su proyecto de prueba:"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Wiremock"
msgstr "Wiremock"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Add the following dependencies to your test project:"
msgstr "Añada las siguientes dependencias a su proyecto de prueba:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Write Wiremock based `QuarkusTestResourceLifecycleManager`, for example:"
msgstr "Escriba `QuarkusTestResourceLifecycleManager` basado en Wiremock, por ejemplo:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Prepare the REST test endpoints, you can have the test frontend endpoint which uses the injected MP REST client with a registered OidcClient filter to invoke on the downstream endpoint which echoes the token back, for example, see the `integration-tests/oidc-client-wiremock` in the `main` Quarkus repository."
msgstr "Prepare los puntos finales de prueba REST, puede tener el punto final frontend de prueba que utiliza el cliente MP REST inyectado con un filtro OidcClient registrado para invocar en el punto final descendente que se hace eco del token de vuelta, por ejemplo, consulte el `integration-tests/oidc-client-wiremock` en el repositorio `main` Quarkus."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Set `application.properties`, for example:"
msgstr "Establece `application.properties`, por ejemplo:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "and finally write the test code. Given the Wiremock-based resource above, the first test invocation should return `access_token_1` access token which will expire in 4 seconds. Use `awaitility` to wait for about 5 seconds, and now the next test invocation should return `access_token_2` access token which confirms the expired `access_token_1` access token has been refreshed."
msgstr "y finalmente escribir el código de prueba. Dado el recurso basado en Wiremock anterior, la primera invocación de prueba debería devolver `access_token_1` token de acceso que expirará en 4 segundos. Utiliza `awaitility` para esperar unos 5 segundos, y ahora la siguiente invocación de prueba debería devolver `access_token_2` token de acceso que confirma que el token de acceso `access_token_1` caducado ha sido refrescado."

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, no-wrap
msgid "Keycloak"
msgstr "Keycloak"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "If you work with Keycloak then you can use the same approach as described in the xref:security-openid-connect.adoc#integration-testing-keycloak[OpenID Connect Bearer Token Integration testing] Keycloak section."
msgstr "Si trabaja con Keycloak, puede utilizar el mismo enfoque que el descrito en la sección xref:security-openid-connect.adoc#integration-testing-keycloak[Integración del token portador de OpenID Connect probando] Keycloak."

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "How to check the errors in the logs"
msgstr "Cómo comprobar los errores en los registros"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Please enable `io.quarkus.oidc.client.runtime.OidcClientImpl` `TRACE` level logging to see more details about the token acquisition and refresh errors:"
msgstr "Por favor, active el registro de nivel `io.quarkus.oidc.client.runtime.OidcClientImpl` `TRACE` para ver más detalles sobre los errores de adquisición y actualización de tokens:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Please enable `io.quarkus.oidc.client.runtime.OidcClientRecorder` `TRACE` level logging to see more details about the OidcClient initialization errors:"
msgstr "Por favor, active el registro de nivel `io.quarkus.oidc.client.runtime.OidcClientRecorder` `TRACE` para ver más detalles sobre los errores de inicialización de OidcClient:"

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Token Propagation"
msgstr "Propagación de fichas"

#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid ""
"The `quarkus-oidc-token-propagation` extension provides two JAX-RS `javax.ws.rs.client.ClientRequestFilter` class implementations that simplify the propagation of authentication information.\n"
"`io.quarkus.oidc.token.propagation.AccessTokenRequestFilter` propagates the xref:security-openid-connect.adoc[Bearer] token present in the current active request or the token acquired from the xref:security-openid-connect-web-authentication.adoc[Authorization Code Flow], as the HTTP `Authorization` header's `Bearer` scheme value.\n"
"The `io.quarkus.oidc.token.propagation.JsonWebTokenRequestFilter` provides the same functionality, but in addition provides support for JWT tokens."
msgstr "La extensión `quarkus-oidc-token-propagation` proporciona dos implementaciones de la clase JAX-RS `javax.ws.rs.client.ClientRequestFilter` que simplifican la propagación de la información de autenticación. `io.quarkus.oidc.token.propagation.AccessTokenRequestFilter` propaga el token de xref:security-openid-connect.adoc[portador] presente en la solicitud activa actual o el token adquirido del xref:security-openid-connect-web-authentication.adoc[flujo de código de] autorización, como valor del esquema `Bearer` del encabezado HTTP `Authorization` . `io.quarkus.oidc.token.propagation.JsonWebTokenRequestFilter` ofrece la misma funcionalidad, pero además proporciona soporte para tokens JWT."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "When you need to propagate the current Authorization Code Flow access token then the immediate token propagation will work well - as the code flow access tokens (as opposed to ID tokens) are meant to be propagated for the current Quarkus endpoint to access the remote services on behalf of the currently authenticated user."
msgstr "Cuando necesite propagar el token de acceso al flujo de código de autorización actual, la propagación inmediata del token funcionará bien, ya que los tokens de acceso al flujo de código (a diferencia de los tokens de identificación) están destinados a ser propagados para que el punto final de Quarkus actual acceda a los servicios remotos en nombre del usuario autenticado actualmente."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "However, the direct end to end Bearer token propagation should be avoided if possible. For example, `Client -> Service A -> Service B` where `Service B` receives a token sent by `Client` to `Service A`. In such cases `Service B` will not be able to distinguish if the token came from `Service A` or from `Client` directly. For `Service B` to verify the token came from `Service A` it should be able to assert a new issuer and audience claims."
msgstr "Sin embargo, la propagación directa de extremo a extremo del token del portador debe evitarse si es posible. Por ejemplo, `Client → Service A → Service B` donde `Service B` recibe un token enviado por `Client` a `Service A`. En estos casos `Service B` no podrá distinguir si el token procede de `Service A` o de `Client` directamente. Para que `Service B` pueda verificar que el token procede de `Service A`, debe ser capaz de hacer valer un nuevo emisor y unas declaraciones de audiencia."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Additionally, a complex application may need to exchange or update the tokens before propagating them. For example, the access context might be different when `Service A` is accessing `Service B`. In this case, `Service A` might be granted a narrow or a completely different set of scopes to access `Service B`."
msgstr "Además, una aplicación compleja puede necesitar intercambiar o actualizar los tokens antes de propagarlos. Por ejemplo, el contexto de acceso podría ser diferente cuando `Service A` accede a `Service B` . En este caso, podría concederse a `Service A` un ámbito reducido o completamente diferente para acceder a `Service B` ."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "The following sections show how `AccessTokenRequestFilter` and `JsonWebTokenRequestFilter` can help."
msgstr "Las siguientes secciones muestran cómo `AccessTokenRequestFilter` y `JsonWebTokenRequestFilter` pueden ayudar."

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "RestClient AccessTokenRequestFilter"
msgstr "RestClient AccessTokenRequestFilter"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`AccessTokenRequestFilter` treats all tokens as Strings and as such it can work with both JWT and opaque tokens."
msgstr "`AccessTokenRequestFilter` trata todos los tokens como Strings y como tal puede trabajar tanto con JWT como con tokens opacos."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "You can selectively register `AccessTokenRequestFilter` by using either `io.quarkus.oidc.token.propagation.AccessToken` or `org.eclipse.microprofile.rest.client.annotation.RegisterProvider`, for example:"
msgstr "Puede registrar selectivamente `AccessTokenRequestFilter` utilizando `io.quarkus.oidc.token.propagation.AccessToken` o `org.eclipse.microprofile.rest.client.annotation.RegisterProvider`, por ejemplo:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Alternatively, `AccessTokenRequestFilter` can be registered automatically with all MP Rest or JAX-RS clients if `quarkus.oidc-token-propagation.register-filter` property is set to `true` and `quarkus.oidc-token-propagation.json-web-token` property is set to `false` (which is a default value)."
msgstr "Alternativamente, `AccessTokenRequestFilter` puede registrarse automáticamente con todos los clientes MP Rest o JAX-RS si la propiedad `quarkus.oidc-token-propagation.register-filter` se establece en `true` y la propiedad `quarkus.oidc-token-propagation.json-web-token` en `false` (que es un valor por defecto)."

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Exchange Token Before Propagation"
msgstr "Intercambio de fichas antes de la propagación"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "If the current access token needs to be exchanged before propagation and you work with link:https://www.keycloak.org/docs/latest/securing_apps/#_token-exchange[Keycloak] or other OpenID Connect Provider which supports a link:https://tools.ietf.org/html/rfc8693[Token Exchange] token grant then you can configure `AccessTokenRequestFilter` like this:"
msgstr "Si el token de acceso actual necesita ser intercambiado antes de la propagación y trabajas con  link:https://www.keycloak.org/docs/latest/securing_apps/#_token-exchange[Keycloak] u otro proveedor de OpenID Connect que soporte una concesión de token de  link:https://tools.ietf.org/html/rfc8693[intercambio], entonces puedes configurar `AccessTokenRequestFilter` así:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Note `AccessTokenRequestFilter` will use `OidcClient` to exchange the current token, and you can use `quarkus.oidc-client.grant-options.exchange` to set the additional exchange properties expected by your OpenID Connect Provider."
msgstr "Nota `AccessTokenRequestFilter` utilizará `OidcClient` para intercambiar el token actual, y usted puede utilizar `quarkus.oidc-client.grant-options.exchange` para establecer las propiedades de intercambio adicionales que espera su proveedor de OpenID Connect."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`AccessTokenRequestFilter` uses a default `OidcClient` by default. A named `OidcClient` can be selected with a `quarkus.oidc-token-propagation.client-name` configuration property."
msgstr "`AccessTokenRequestFilter` utiliza un `OidcClient` por defecto. Se puede seleccionar un nombre `OidcClient` con una propiedad de configuración `quarkus.oidc-token-propagation.client-name`."

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "RestClient JsonWebTokenRequestFilter"
msgstr "RestClient JsonWebTokenRequestFilter"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Using `JsonWebTokenRequestFilter` is recommended if you work with Bearer JWT tokens where these tokens can have their claims such as `issuer` and `audience` modified and the updated tokens secured (for example, re-signed) again. It expects an injected `org.eclipse.microprofile.jwt.JsonWebToken` and therefore will not work with the opaque tokens. Also, if your OpenID Connect Provider supports a Token Exchange protocol then it is recommended to use `AccessTokenRequestFilter` instead - as both JWT and opaque bearer tokens can be securely exchanged with `AccessTokenRequestFilter`."
msgstr "El uso de `JsonWebTokenRequestFilter` se recomienda si se trabaja con tokens JWT portadores en los que estos tokens pueden tener sus reclamos como `issuer` y `audience` modificados y los tokens actualizados asegurados (por ejemplo, re-firmados) de nuevo. Espera un `org.eclipse.microprofile.jwt.JsonWebToken` inyectado y por lo tanto no funcionará con los tokens opacos. Además, si tu proveedor de OpenID Connect admite un protocolo de intercambio de tokens, se recomienda utilizar `AccessTokenRequestFilter` en su lugar, ya que tanto los tokens JWT como los opacos se pueden intercambiar de forma segura con `AccessTokenRequestFilter`."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "`JsonWebTokenRequestFilter` makes it easy for `Service A` implementations to update the injected `org.eclipse.microprofile.jwt.JsonWebToken` with the new `issuer` and `audience` claim values and secure the updated token again with a new signature. The only difficult step is to ensure `Service A` has a signing key - it should be provisioned from a secure file system or from the remote secure storage such as Vault."
msgstr "`JsonWebTokenRequestFilter` facilita que las implementaciones de `Service A` actualicen el `org.eclipse.microprofile.jwt.JsonWebToken` inyectado con los nuevos valores de reclamación `issuer` y `audience` y aseguren el token actualizado de nuevo con una nueva firma. El único paso difícil es asegurarse de que `Service A` tenga una clave de firma, que debe obtenerse de un sistema de archivos seguro o de un almacenamiento remoto seguro, como Vault."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "You can selectively register `JsonWebTokenRequestFilter` by using either `io.quarkus.oidc.token.propagation.JsonWebToken` or `org.eclipse.microprofile.rest.client.annotation.RegisterProvider`, for example:"
msgstr "Puede registrar selectivamente `JsonWebTokenRequestFilter` utilizando `io.quarkus.oidc.token.propagation.JsonWebToken` o `org.eclipse.microprofile.rest.client.annotation.RegisterProvider`, por ejemplo:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "Alternatively, `JsonWebTokenRequestFilter` can be registered automatically with all MP Rest or JAX-RS clients if both `quarkus.oidc-token-propagation.register-filter` and `quarkus.oidc-token-propagation.json-web-token` properties are set to `true`."
msgstr "Alternativamente, `JsonWebTokenRequestFilter` puede registrarse automáticamente con todos los clientes MP Rest o JAX-RS si ambas propiedades `quarkus.oidc-token-propagation.register-filter` y `quarkus.oidc-token-propagation.json-web-token` se establecen en `true` ."

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Update Token Before Propagation"
msgstr "Actualizar el token antes de la propagación"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "If the injected token needs to have its `iss` (issuer) and/or `aud` (audience) claims updated and secured again with a new signature then you can configure `JsonWebTokenRequestFilter` like this:"
msgstr "Si el token inyectado necesita que se actualicen sus reivindicaciones `iss` (emisor) y/o `aud` (público) y se asegure de nuevo con una nueva firma, puede configurar `JsonWebTokenRequestFilter` así:"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "As already noted above, please use `AccessTokenRequestFilter` if you work with Keycloak or OpenID Connect Provider which supports a Token Exchange protocol."
msgstr "Como ya se ha indicado anteriormente, utilice `AccessTokenRequestFilter` si trabaja con un proveedor Keycloak u OpenID Connect que admita un protocolo de intercambio de tokens."

#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid ""
"You can generate the tokens as described in xref:security-openid-connect.adoc#integration-testing[OpenID Connect Bearer Token Integration testing] section.\n"
"Prepare the REST test endpoints, you can have the test frontend endpoint which uses the injected MP REST client with a registered token propagation filter to invoke on the downstream endpoint, for example, see the `integration-tests/oidc-token-propagation` in the `main` Quarkus repository."
msgstr "Puede generar los tokens como se describe en la sección de xref:security-openid-connect.adoc#integration-testing[pruebas de integración de tokens de portador de OpenID] Connect. Prepare los puntos finales de prueba REST, puede tener el punto final frontend de prueba que utiliza el cliente MP REST inyectado con un filtro de propagación de token registrado para invocar en el punto final descendente, por ejemplo, consulte el `integration-tests/oidc-token-propagation` en el repositorio `main` Quarkus."

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy, no-wrap
msgid "Token Propagation Reactive"
msgstr "Propagación de tokens reactiva"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "The `quarkus-oidc-token-propagation-reactive` extension provides `io.quarkus.oidc.token.propagation.reactive.AccessTokenRequestReactiveFilter` which can be used to propagate the current `Bearer` or `Authorization Code Flow` access tokens."
msgstr "La extensión `quarkus-oidc-token-propagation-reactive` proporciona `io.quarkus.oidc.token.propagation.reactive.AccessTokenRequestReactiveFilter` que puede utilizarse para propagar los tokens de acceso actuales `Bearer` o `Authorization Code Flow`."

#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid ""
"The `quarkus-oidc-token-propagation-reactive` extension (as opposed to the non-reactive `quarkus-oidc-token-propagation` extension) does not currently support the exchanging or resigning the tokens before the propagation.\n"
"However, these features may be added in the future."
msgstr "La extensión `quarkus-oidc-token-propagation-reactive` (a diferencia de la extensión no reactiva `quarkus-oidc-token-propagation` ) no admite actualmente el intercambio o la renuncia de las fichas antes de la propagación. Sin embargo, es posible que estas características se añadan en el futuro."

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "xref:security-openid-connect-client.adoc[OpenID Connect Client and Token Propagation Quickstart]"
msgstr "xref:security-openid-connect-client.adoc[Introducción rápida al cliente OpenID Connect y a la propagación de tokens]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "xref:security-openid-connect.adoc[Quarkus - Using OpenID Connect to Protect Service Applications using Bearer Token Authorization]"
msgstr "xref:security-openid-connect.adoc[Quarkus - Uso de OpenID Connect para proteger las aplicaciones de servicios mediante la autorización de tokens de portador]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "xref:security-openid-connect-web-authentication.adoc[Quarkus - Using OpenID Connect to Protect Web Applications using Authorization Code Flow]"
msgstr "xref:security-openid-connect-web-authentication.adoc[Quarkus - Uso de OpenID Connect para proteger las aplicaciones web mediante el flujo de código de autorización]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-client-reference.adoc
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "link:security.html[Seguridad Quarkus]"
