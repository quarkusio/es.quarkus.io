# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-03 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing Your Application"
msgstr "Probar su aplicación"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Learn how to test your Quarkus Application.\n"
"This guide covers:"
msgstr "Aprenda a probar su aplicación Quarkus. Esta guía cubre:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Testing in JVM mode"
msgstr "Pruebas en modo JVM"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Testing in native mode"
msgstr "Pruebas en modo nativo"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Injection of resources into tests"
msgstr "Inyección de recursos en las pruebas"

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
msgid "The completed greeter application from the xref:getting-started.adoc[Getting Started Guide]"
msgstr "La aplicación de bienvenida completada de la xref:getting-started.html[Guía de Inicio]"

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"In this guide, we expand on the initial test that was created as part of the Getting Started Guide.\n"
"We cover injection into tests and also how to test native executables."
msgstr "En esta guía, ampliamos la prueba inicial que se creó como parte de la Guía de introducción. Cubrimos la inyección en las pruebas y también cómo probar ejecutables nativos."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Quarkus supports Continuous testing, but this is covered by the xref:continuous-testing.adoc[Continuous Testing Guide]."
msgstr "Quarkus soporta las pruebas continuas, pero esto está cubierto por la  link:continuous-testing.html[Guía de Pruebas Continuas]."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, no-wrap
msgid "Solution"
msgstr "Solución"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The solution is located in the `getting-started-testing` link:{quickstarts-tree-url}/getting-started-testing[directory]."
msgstr "La solución se encuentra en el link:{quickstarts-tree-url}/getting-started-testing[directorio] `getting-started-testing` ."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "This guide assumes you already have the completed application from the `getting-started` directory."
msgstr "Esta guía supone que ya tiene la aplicación completa del directorio `getting-started`."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Recap of HTTP based Testing in JVM mode"
msgstr "Recapitulación de las pruebas basadas en HTTP en modo JVM"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"If you have started from the Getting Started example you should already have a completed test, including the correct\n"
"tooling setup."
msgstr "Si ha empezado por el ejemplo de Introducción, ya debería tener una prueba terminada, incluida la configuración correcta de las herramientas."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "In your build file you should see 2 test dependencies:"
msgstr "En su archivo de compilación debería ver 2 dependencias de prueba:"

#. type: Block title
#: _versions/3.2/guides/getting-started-testing.adoc
#, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: Block title
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Gradle"
msgstr "Gradle"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"`quarkus-junit5` is required for testing, as it provides the `@QuarkusTest` annotation that controls the testing framework.\n"
"`rest-assured` is not required but is a convenient way to test HTTP endpoints, we also provide integration that automatically\n"
"sets the correct URL so no configuration is required."
msgstr "`quarkus-junit5` es necesario para las pruebas, ya que proporciona la anotación `@QuarkusTest` que controla el marco de pruebas. `rest-assured` no es necesario pero es una forma conveniente de probar los puntos finales HTTP, también proporcionamos integración que establece automáticamente la URL correcta por lo que no se requiere configuración."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Because we are using JUnit 5, the version of the https://maven.apache.org/surefire/maven-surefire-plugin/[Surefire Maven Plugin]\n"
"must be set, as the default version does not support Junit 5:"
msgstr "Dado que estamos utilizando JUnit 5, es necesario establecer la versión del link:https://maven.apache.org/surefire/maven-surefire-plugin/[plugin Surefire Maven] , ya que la versión por defecto no es compatible con Junit 5:"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"We also set the `java.util.logging.manager` system property to make sure tests will use the correct logmanager and `maven.home` to ensure that custom configuration\n"
"from `${maven.home}/conf/settings.xml` is applied (if any)."
msgstr "También establecemos la propiedad del sistema `java.util.logging.manager` para asegurarnos de que las pruebas utilizarán el logmanager correcto y `maven.home` para garantizar que se aplica la configuración personalizada de `${maven.home}/conf/settings.xml` (si existe)."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The project should also contain a simple test:"
msgstr "El proyecto también debe contener una prueba sencilla:"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"This test uses HTTP to directly test our REST endpoint. When the test is run the application will be started before\n"
"the test is run."
msgstr "Esta prueba utiliza HTTP para probar directamente nuestro punto final REST. Cuando se ejecute la prueba, la aplicación se iniciará antes de que se ejecute la prueba."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Controlling the test port"
msgstr "Control del puerto de pruebas"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"While Quarkus will listen on port `8080` by default, when running tests it defaults to `8081`. This allows you to run\n"
"tests while having the application running in parallel."
msgstr "Aunque Quarkus escuchará en el puerto `8080` por defecto, cuando ejecute pruebas lo hará en `8081` . Esto le permite ejecutar pruebas mientras tiene la aplicación ejecutándose en paralelo."

#. type: Block title
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Changing the test port"
msgstr "Cambiar el puerto de prueba"

#. type: delimited block =
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "You can configure the ports used by tests by configuring `quarkus.http.test-port` for HTTP and `quarkus.http.test-ssl-port` for HTTPS in your `application.properties`:"
msgstr "Puede configurar los puertos utilizados por las pruebas configurando `quarkus.http.test-port` para HTTP y `quarkus.http.test-ssl-port` para HTTPS en su `application.properties`:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`0` will result in the use of a random port (assigned by the operating system)."
msgstr "`0` dará lugar a la utilización de un puerto aleatorio (asignado por el sistema operativo)."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Quarkus also provides RestAssured integration that updates the default port used by RestAssured before the tests are run,\n"
"so no additional configuration should be required."
msgstr "Quarkus también proporciona integración con RestAssured que actualiza el puerto predeterminado utilizado por RestAssured antes de que se ejecuten las pruebas, por lo que no debería ser necesaria ninguna configuración adicional."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Controlling HTTP interaction timeout"
msgstr "Controlar el tiempo de espera de la interacción HTTP"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"When using REST Assured in your test, the connection and response timeouts are set to 30 seconds.\n"
"You can override this setting with the `quarkus.http.test-timeout` property:"
msgstr "Al utilizar REST Assured en su prueba, los tiempos de espera de conexión y respuesta se establecen en 30 segundos. Puede anular este ajuste con la propiedad `quarkus.http.test-timeout` :"

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Injecting a URI"
msgstr "Inyección de un URI"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"It is also possible to directly inject the URL into the test which can make is easy to use a different client. This is\n"
"done via the `@TestHTTPResource` annotation."
msgstr "También es posible inyectar directamente la URL en la prueba, lo que puede facilitar el uso de un cliente diferente. Esto se hace mediante la anotación `@TestHTTPResource` ."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Let's write a simple test that shows this off to load some static resources. First create a simple HTML file in\n"
"`src/main/resources/META-INF/resources/index.html` :"
msgstr "Escribamos una prueba sencilla que lo demuestre para cargar algunos recursos estáticos. Primero cree un archivo HTML simple en `src/main/resources/META-INF/resources/index.html` :"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "We will create a simple test to ensure that this is being served correctly:"
msgstr "Vamos a crear una prueba sencilla para asegurarnos de que se sirve correctamente:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "This annotation allows you to directly inject the URL of the Quarkus instance, the value of the annotation will be the path component of the URL"
msgstr "Esta anotación permite inyectar directamente la URL de la instancia de Quarkus, el valor de la anotación será el componente de la ruta de la URL"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "For now `@TestHTTPResource` allows you to inject `URI`, `URL` and `String` representations of the URL."
msgstr "Por ahora `@TestHTTPResource` permite inyectar las representaciones de la URL `URI`, `URL` y `String`."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing a specific endpoint"
msgstr "Probar un punto final específico"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Both RESTassured and `@TestHTTPResource` allow you to specify the endpoint class you are testing rather than hard coding\n"
"a path. This currently supports both Jakarta REST endpoints, Servlets and Reactive Routes. This makes it a lot easier to see exactly which endpoints\n"
"a given test is testing."
msgstr "Tanto RESTassured como `@TestHTTPResource` le permiten especificar la clase de punto final que está probando en lugar de codificar una ruta. Esto soporta actualmente tanto los puntos finales REST de Jakarta, como los Servlets y las Rutas Reactivas. Esto hace que sea mucho más fácil ver exactamente qué puntos finales está probando una prueba determinada."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "For the purposes of these examples I am going to assume we have an endpoint that looks like the following:"
msgstr "Para los propósitos de estos ejemplos voy a asumir que tenemos un punto final que se parece a lo siguiente:"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"This currently does not support the `@ApplicationPath()` annotation to set the Jakarta REST context path. Use the\n"
"`quarkus.resteasy.path` config value instead if you want a custom context path."
msgstr "Actualmente no es compatible con la anotación `@ApplicationPath()` para establecer la ruta del contexto REST de Yakarta. Utilice en su lugar el valor de configuración `quarkus.resteasy.path` si desea una ruta de contexto personalizada."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "TestHTTPResource"
msgstr "TestHTTPResource"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"You can the use the `io.quarkus.test.common.http.TestHTTPEndpoint` annotation to specify the endpoint path, and the path\n"
"will be extracted from the provided endpoint. If you also specify a value for the `TestHTTPResource` endpoint it will\n"
"be appended to the end of the endpoint path."
msgstr "Puede utilizar la anotación `io.quarkus.test.common.http.TestHTTPEndpoint` para especificar la ruta del punto final, y la ruta se extraerá del punto final proporcionado. Si también especifica un valor para el punto final `TestHTTPResource` , se añadirá al final de la ruta del punto final."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Because `GreetingResource` is annotated with `@Path(\"/hello\")` the injected URL\n"
"will end with `/hello`."
msgstr "Como `GreetingResource` está anotado con `@Path(\"/hello\")` la URL inyectada terminará con `/hello` ."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "RESTassured"
msgstr "RESTassured"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"To control the RESTassured base path (i.e. the default path that serves as the root for every\n"
"request) you can use the `io.quarkus.test.common.http.TestHTTPEndpoint` annotation. This can\n"
"be applied at the class or method level. To test out greeting resource we would do:"
msgstr "Para controlar la ruta base RESTassured (es decir, la ruta por defecto que sirve de raíz para cada solicitud) puede utilizar la anotación `io.quarkus.test.common.http.TestHTTPEndpoint` . Puede aplicarse a nivel de clase o de método. Para probar el recurso de saludo haríamos"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "This tells RESTAssured to prefix all requests with `/hello`."
msgstr "Esto indica a RESTAssured que anteponga a todas las solicitudes `/hello`."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Note we don't need to specify a path here, as `/hello` is the default for this test"
msgstr "Tenga en cuenta que no es necesario especificar una ruta aquí, ya que `/hello` es el valor predeterminado para esta prueba"

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Injection into tests"
msgstr "Inyección en las pruebas"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"So far we have only covered integration style tests that test the app via HTTP endpoints, but what if we want to do unit\n"
"testing and test our beans directly?"
msgstr "Hasta ahora sólo hemos cubierto las pruebas de estilo de integración que prueban la aplicación a través de endpoints HTTP, pero ¿qué pasa si queremos hacer pruebas unitarias y probar nuestros beans directamente?"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Quarkus supports this by allowing you to inject CDI beans into your tests via the `@Inject` annotation (in fact, tests in\n"
"Quarkus are full CDI beans, so you can use all CDI functionality). Let's create a simple test that tests the greeting\n"
"service directly without using HTTP:"
msgstr "Quarkus admite esto permitiéndole inyectar beans CDI en sus pruebas mediante la anotación `@Inject` (de hecho, las pruebas en Quarkus son beans CDI completos, por lo que puede utilizar toda la funcionalidad CDI). Vamos a crear una prueba sencilla que pruebe el servicio de saludo directamente sin utilizar HTTP:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The `GreetingService` bean will be injected into the test"
msgstr "La judía `GreetingService` se inyectará en la prueba"

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Applying Interceptors to Tests"
msgstr "Aplicación de interceptores a las pruebas"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"As mentioned above Quarkus tests are actually full CDI beans, and as such you can apply CDI interceptors as you would\n"
"normally. As an example, if you want a test method to run within the context of a transaction you can simply apply the\n"
"`@Transactional` annotation to the method and the transaction interceptor will handle it."
msgstr "Como ya se ha mencionado, las pruebas de Quarkus son en realidad beans CDI completos y, como tales, puede aplicar interceptores CDI como lo haría normalmente. Por ejemplo, si desea que un método de prueba se ejecute en el contexto de una transacción, basta con aplicar la anotación `@Transactional` al método y el interceptor de transacciones se encargará de ello."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"In addition to this you can also create your own test stereotypes. For example, we could create a `@TransactionalQuarkusTest`\n"
"as follows:"
msgstr "Además, también puede crear sus propios estereotipos de prueba. Por ejemplo, podríamos crear un `@TransactionalQuarkusTest` como el siguiente:"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"If we then apply this annotation to a test class it will act as if we had applied both the `@QuarkusTest` and\n"
"`@Transactional` annotations, e.g.:"
msgstr "Si a continuación aplicamos esta anotación a una clase de prueba, actuará como si hubiéramos aplicado las anotaciones `@QuarkusTest` y `@Transactional` , por ejemplo:"

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Tests and Transactions"
msgstr "Pruebas y transacciones"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"You can use the standard Quarkus `@Transactional` annotation on tests, but this means that the changes your\n"
"test makes to the database will be persistent. If you want any changes made to be rolled back at the end of\n"
"the test you can use the `io.quarkus.test.TestTransaction` annotation. This will run the test method in a\n"
"transaction, but roll it back once the test method is complete to revert any database changes."
msgstr "Puede utilizar la anotación estándar de Quarkus `@Transactional` en las pruebas, pero esto significa que los cambios que su prueba realice en la base de datos serán persistentes. Si desea que los cambios realizados se reviertan al final de la prueba, puede utilizar la anotación `io.quarkus.test.TestTransaction` . Esto ejecutará el método de prueba en una transacción, pero lo revertirá una vez que el método de prueba haya finalizado para revertir cualquier cambio en la base de datos."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Enrichment via QuarkusTest*Callback"
msgstr "Enriquecimiento mediante QuarkusTest*Callback"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Alternatively or additionally to an interceptor, you can enrich *all* your `@QuarkusTest` classes by implementing the following callback interfaces:"
msgstr "Alternativa o adicionalmente a un interceptor, puedes enriquecer *todas* tus clases de `@QuarkusTest` implementando las siguientes interfaces de devolución de llamada:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestBeforeClassCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestBeforeClassCallback`"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestAfterConstructCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestAfterConstructCallback`"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback`"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestBeforeTestExecutionCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestBeforeTestExecutionCallback`"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestAfterTestExecutionCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestAfterTestExecutionCallback`"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestAfterEachCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestAfterEachCallback`"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Optionally, you can enable these callbacks also for the `@QuarkusIntegrationTest` tests if the property `quarkus.test.enable-callbacks-for-integration-tests` is `true`."
msgstr "Opcionalmente, puede activar estas llamadas de retorno también para las pruebas de `@QuarkusIntegrationTest` si la propiedad `quarkus.test.enable-callbacks-for-integration-tests` es `true` ."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Such a callback implementation has to be registered as a \"service provider\" as defined by `java.util.ServiceLoader`."
msgstr "Dicha implementación de la devolución de llamada tiene que estar registrada como \"proveedor de servicios\", tal y como se define en `java.util.ServiceLoader`."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "E.g. the following sample callback:"
msgstr "Por ejemplo, el siguiente ejemplo de devolución de llamada:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "has to be registered via `src/main/resources/META-INF/services/io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback` as follows:"
msgstr "tiene que ser registrado a través de `src/main/resources/META-INF/services/io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback` como sigue:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "It is possible to read annotations from the test class or method to control what the callback shall be doing."
msgstr "Es posible leer las anotaciones de la clase o método de prueba para controlar lo que debe hacer el callback."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"While it is possible to use JUnit Jupiter callback interfaces like `BeforeEachCallback`, you might run into classloading issues because Quarkus has\n"
"         to run tests in a custom classloader which JUnit is not aware of."
msgstr "Aunque es posible utilizar interfaces de devolución de llamada de JUnit Jupiter como `BeforeEachCallback` , podría encontrarse con problemas de carga de clases porque Quarkus tiene que ejecutar las pruebas en un cargador de clases personalizado del que JUnit no es consciente."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing Different Profiles"
msgstr "Probar diferentes perfiles"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"So far in all our examples we only start Quarkus once for all tests. Before the first test is run Quarkus will boot,\n"
"then all tests will run, then Quarkus will shut down at the end. This makes for a very fast testing experience however\n"
"it is a bit limited as you can't test different configurations."
msgstr "Hasta ahora en todos nuestros ejemplos sólo arrancamos Quarkus una vez para todas las pruebas. Antes de que se ejecute la primera prueba Quarkus arrancará, después se ejecutarán todas las pruebas y al final Quarkus se apagará. Esto hace que la experiencia de prueba sea muy rápida, sin embargo es un poco limitada ya que no se pueden probar diferentes configuraciones."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"To get around this Quarkus supports the idea of a test profile. If a test has a different profile to the previously\n"
"run test then Quarkus will be shut down and started with the new profile before running the tests. This is obviously\n"
"a bit slower, as it adds a shutdown/startup cycle to the test time, but gives a great deal of flexibility."
msgstr "Para evitar esto, Quarkus admite la idea de un perfil de prueba. Si una prueba tiene un perfil diferente al de la prueba ejecutada anteriormente, entonces Quarkus se apagará y se iniciará con el nuevo perfil antes de ejecutar las pruebas. Esto es obviamente un poco más lento, ya que añade un ciclo de apagado/arranque al tiempo de la prueba, pero proporciona una gran flexibilidad."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"To reduce the amount of times Quarkus needs to restart, `io.quarkus.test.junit.util.QuarkusTestProfileAwareClassOrderer`\n"
"is registered as a global `ClassOrderer` as described in the\n"
"link:https://junit.org/junit5/docs/current/user-guide/#writing-tests-test-execution-order-classes[JUnit 5 User Guide].\n"
"The behavior of this `ClassOrderer` is configurable via `junit-platform.properties` (see the source code or javadoc for more details).\n"
"It can also be disabled entirely by setting another `ClassOrderer` that is provided by JUnit 5 or even your own custom one. +\n"
"Please note that as of JUnit 5.8.2 link:https://github.com/junit-team/junit5/issues/2794[only a single `junit-platform.properties` is picked up and a warning is logged if more than one is found].\n"
"If you encounter such warnings, you can get rid of them by removing the Quarkus-supplied `junit-platform.properties` from the classpath via an exclusion:"
msgstr ""
"Para reducir la cantidad de veces que Quarkus necesita reiniciarse, `io.quarkus.test.junit.util.QuarkusTestProfileAwareClassOrderer` se registra como un `ClassOrderer` global tal y como se describe en la link:https://junit.org/junit5/docs/current/user-guide/#writing-tests-test-execution-order-classes[Guía del Usuario de JUnit 5] . El comportamiento de este `ClassOrderer` es configurable a través de `junit-platform.properties` (consulte el código fuente o javadoc para más detalles). También puede desactivarse por completo configurando otro `ClassOrderer` proporcionado por JUnit 5 o incluso uno propio personalizado.\n"
"\n"
" Tenga en cuenta que a partir de JUnit 5.8.2 link:https://github.com/junit-team/junit5/issues/2794[sólo se recoge un único junit-platform.properties y se registra una advertencia si se encuentra más de uno] . Si encuentra este tipo de advertencias, puede deshacerse de ellas eliminando el `junit-platform.properties` proporcionado por Quarkus del classpath mediante una exclusión:"

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Writing a Profile"
msgstr "Escribir un perfil"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "To implement a test profile we need to implement `io.quarkus.test.junit.QuarkusTestProfile`:"
msgstr "Para implementar un perfil de prueba necesitamos implementar `io.quarkus.test.junit.QuarkusTestProfile`:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "All these methods have default implementations so just override the ones you need to override."
msgstr "Todos estos métodos tienen implementaciones por defecto, por lo que sólo tienes que anular los que necesites anular."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Now we have defined our profile we need to include it on our test class.\n"
"We do this by annotating the test class with `@TestProfile(MockGreetingProfile.class)`."
msgstr "Ahora que hemos definido nuestro perfil necesitamos incluirlo en nuestra clase de prueba. Lo hacemos anotando la clase de prueba con `@TestProfile(MockGreetingProfile.class)` ."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"All the test profile configuration is stored in a single class, which makes it easy to tell if the previous test ran with the\n"
"same configuration."
msgstr "Toda la configuración del perfil de prueba se almacena en una única clase, lo que facilita saber si la prueba anterior se ejecutó con la misma configuración."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Running specific tests"
msgstr "Ejecución de pruebas específicas"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Quarkus provides the ability to limit test execution to tests with specific  `@TestProfile` annotations.\n"
"This works by leveraging the `tags` method of `QuarkusTestProfile` in conjunction with the `quarkus.test.profile.tags` system property."
msgstr "Quarkus ofrece la posibilidad de limitar la ejecución de pruebas a pruebas con anotaciones específicas de `@TestProfile` . Esto funciona aprovechando el método `tags` de `QuarkusTestProfile` junto con la propiedad del sistema `quarkus.test.profile.tags` ."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Essentially, any `QuarkusTestProfile` with at least one matching tag matching the value of `quarkus.test.profile.tags` will be considered active\n"
"and all the tests annotated with `@TestProfile` of active profiles, will be run while the rest will be skipped.\n"
"This is best shown in the following example."
msgstr "Esencialmente, cualquier `QuarkusTestProfile` con al menos una etiqueta que coincida con el valor de `quarkus.test.profile.tags` se considerará activa y todas las pruebas anotadas con `@TestProfile` de perfiles activos, se ejecutarán mientras que el resto se omitirán. Esto se muestra mejor en el siguiente ejemplo."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "First let's define a few `QuarkusTestProfile` implementations like so:"
msgstr "En primer lugar, vamos a definir algunas implementaciones de `QuarkusTestProfile` de la siguiente manera:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Now let's assume that we have the following tests:"
msgstr "Ahora supongamos que tenemos las siguientes pruebas:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Let's consider the following scenarios:"
msgstr "Consideremos los siguientes escenarios:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`quarkus.test.profile.tags` is not set: All tests will be executed."
msgstr "`quarkus.test.profile.tags` no está configurado: Se ejecutarán todas las pruebas."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"`quarkus.test.profile.tags=foo`: In this case none of tests will be executed because none of the tags defined on the `QuarkusTestProfile` implementations match the value of `quarkus.test.profile.tags`.\n"
"Note that `NoQuarkusProfileTest` is not executed either because it is not annotated with `@TestProfile`."
msgstr "`quarkus.test.profile.tags=foo` : En este caso no se ejecutará ninguna de las pruebas porque ninguna de las etiquetas definidas en las implementaciones de `QuarkusTestProfile` coincide con el valor de `quarkus.test.profile.tags` . Observe que `NoQuarkusProfileTest` tampoco se ejecuta porque no está anotada con `@TestProfile` ."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"`quarkus.test.profile.tags=test1`: In this case `SingleTagTest` and `MultipleTagsTest` will be run because the tags on their respective `QuarkusTestProfile` implementations\n"
"match the value of `quarkus.test.profile.tags`."
msgstr "`quarkus.test.profile.tags=test1` : En este caso `SingleTagTest` y `MultipleTagsTest` se ejecutarán porque las etiquetas de sus respectivas implementaciones `QuarkusTestProfile` coinciden con el valor de `quarkus.test.profile.tags` ."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`quarkus.test.profile.tags=test1,test3`: This case results in the same tests being executed as the previous case."
msgstr "`quarkus.test.profile.tags=test1,test3`: En este caso se ejecutan las mismas pruebas que en el caso anterior."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"`quarkus.test.profile.tags=test2,test3`: In this case only `MultipleTagsTest` will be run because `MultipleTagsTest` is the only `QuarkusTestProfile` implementation whose `tags` method\n"
"matches the value of `quarkus.test.profile.tags`."
msgstr "`quarkus.test.profile.tags=test2,test3` : En este caso sólo se ejecutará `MultipleTagsTest` porque `MultipleTagsTest` es la única implementación de `QuarkusTestProfile` cuyo método `tags` coincide con el valor de `quarkus.test.profile.tags` ."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Mock Support"
msgstr "Apoyo a la simulación"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Quarkus supports the use of mock objects using two different approaches. You can either use CDI alternatives to\n"
"mock out a bean for all test classes, or use `QuarkusMock` to mock out beans on a per test basis."
msgstr "Quarkus admite el uso de objetos simulados utilizando dos enfoques diferentes. Puede utilizar alternativas CDI para simular un frijol para todas las clases de prueba, o utilizar `QuarkusMock` para simular frijoles en función de cada prueba."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "CDI `@Alternative` mechanism."
msgstr "CDI `@Alternative` mecanismo."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"To use this simply override the bean you wish to mock with a class in the `src/test/java` directory, and put the `@Alternative` and `@Priority(1)` annotations on the bean.\n"
"Alternatively, a convenient `io.quarkus.test.Mock` stereotype annotation could be used.\n"
"This built-in stereotype declares `@Alternative`, `@Priority(1)` and `@Dependent`.\n"
"For example if I have the following service:"
msgstr "Para utilizarlo, sólo tiene que sobrescribir el bean que desea simular con una clase del directorio `src/test/java` , y poner las anotaciones `@Alternative` y `@Priority(1)` en el bean. Como alternativa, podría utilizarse la anotación de estereotipo `io.quarkus.test.Mock` . Este estereotipo incorporado declara `@Alternative` , `@Priority(1)` y `@Dependent` . Por ejemplo, si tengo el siguiente servicio"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "I could mock it with the following class in `src/test/java`:"
msgstr "Podría simularlo con la siguiente clase en `src/test/java`:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Overrides the `@Dependent` scope declared on the `@Mock` stereotype."
msgstr "Anula el ámbito `@Dependent` declarado en el estereotipo `@Mock`."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"It is important that the alternative be present in the `src/test/java` directory rather than `src/main/java`, as otherwise\n"
"it will take effect all the time, not just when testing."
msgstr "Es importante que la alternativa esté presente en el directorio `src/test/java` y no en `src/main/java` , ya que de lo contrario tendrá efecto todo el tiempo, no sólo cuando se esté probando."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Note that at present this approach does not work with native image testing, as this would require the test alternatives\n"
"to be baked into the native image."
msgstr "Tenga en cuenta que, en la actualidad, este enfoque no funciona con pruebas de imagen nativa, ya que para ello sería necesario que las alternativas de prueba se incorporaran a la imagen nativa."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Mocking using QuarkusMock"
msgstr "Mocking usando QuarkusMock"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"The `io.quarkus.test.junit.QuarkusMock` class can be used to temporarily mock out any normal scoped\n"
"bean. If you use this method in a `@BeforeAll` method the mock will take effect for all tests on the current class,\n"
"while if you use this in a test method the mock will only take effect for the duration of the current test."
msgstr "La clase `io.quarkus.test.junit.QuarkusMock` puede utilizarse para burlarse temporalmente de cualquier frijol de ámbito normal. Si utiliza este método en un método de `@BeforeAll` , el simulacro tendrá efecto para todas las pruebas de la clase actual, mientras que si lo utiliza en un método de prueba, el simulacro sólo tendrá efecto mientras dure la prueba actual."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"This method can be used for any normal scoped CDI bean (e.g. `@ApplicationScoped`, `@RequestScoped` etc, basically\n"
"every scope except `@Singleton` and `@Dependent`)."
msgstr "Este método puede utilizarse para cualquier frijol CDI de ámbito normal (por ejemplo, `@ApplicationScoped` , `@RequestScoped` etc, básicamente todos los ámbitos excepto `@Singleton` y `@Dependent` )."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "An example usage could look like:"
msgstr "Un ejemplo de uso podría ser así:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "As the injected instance is not available here we use `installMockForType`, this mock is used for both test methods"
msgstr "Como la instancia inyectada no está disponible aquí utilizamos `installMockForType`, este mock se utiliza para ambos métodos de prueba"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "We use `installMockForInstance` to replace the injected bean, this takes effect for the duration of the test method."
msgstr "Usamos `installMockForInstance` para reemplazar la judía inyectada, esto tiene efecto durante la duración del método de prueba."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Note that there is no dependency on Mockito, you can use any mocking library you like, or even manually override the\n"
"objects to provide the behaviour you require."
msgstr "Tenga en cuenta que no hay dependencia de Mockito, puede utilizar cualquier biblioteca de mocking que desee, o incluso anular manualmente los objetos para proporcionar el comportamiento que necesite."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Using `@Inject` will get you a CDI proxy to the mock instance you install, which is not suitable for passing to methods such as `Mockito.verify`\n"
"which want the mock instance itself.\n"
"So if you need to call methods such as `verify` you should hang on to the mock instance in your test, or use `@io.quarkus.test.InjectMock`."
msgstr "Si utiliza `@Inject` obtendrá un proxy CDI a la instancia simulada que instale, lo que no es adecuado para pasarlo a métodos como `Mockito.verify` que quieren la propia instancia simulada. Por lo tanto, si necesita llamar a métodos como `verify` deberá aferrarse a la instancia simulada en su prueba, o utilizar `@io.quarkus.test.InjectMock` ."

#. type: Title ====
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Further simplification with `@InjectMock`"
msgstr "Una mayor simplificación con `@InjectMock`"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Building on the features provided by `QuarkusMock`, Quarkus also allows users to effortlessly take advantage of link:https://site.mockito.org/[Mockito] for mocking the beans supported by `QuarkusMock`.\n"
"This functionality is available with the `@io.quarkus.test.InjectMock` annotation if the `quarkus-junit5-mockito` dependency is present."
msgstr "Basándose en las características proporcionadas por `QuarkusMock` , Quarkus también permite a los usuarios aprovechar sin esfuerzo link:https://site.mockito.org/[Mockito] para burlarse de los beans soportados por `QuarkusMock` . Esta funcionalidad está disponible con la anotación `@io.quarkus.test.InjectMock` si la dependencia `quarkus-junit5-mockito` está presente."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Using `@InjectMock`, the previous example could be written as follows:"
msgstr "Utilizando `@InjectMock`, el ejemplo anterior podría escribirse como sigue:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`@InjectMock` results in a Mockito mock being created, which is then available in test methods of the test class (other test classes are *not* affected by this)"
msgstr "`@InjectMock` tiene como resultado la creación de un simulacro de Mockito, que estará disponible en los métodos de prueba de la clase de prueba (otras clases de prueba *no* se verán afectadas por esto)"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The `mockableBean1` is configured here for every test method of the class"
msgstr "El `mockableBean1` se configura aquí para cada método de prueba de la clase"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Since the `mockableBean2` mock has not been configured, it will return the default Mockito response."
msgstr "Como el mock `mockableBean2` no ha sido configurado, devolverá la respuesta por defecto de Mockito."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "In this test the `mockableBean2` is configured, so it returns the configured response."
msgstr "En esta prueba el `mockableBean2` está configurado, por lo que devuelve la respuesta configurada."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Although the test above is good for showing the capabilities of `@InjectMock`, it is not a good representation of a real test. In a real test\n"
"we would most likely configure a mock, but then test a bean that uses the mocked bean.\n"
"Here is an example:"
msgstr "Aunque la prueba anterior es buena para mostrar las capacidades de `@InjectMock` , no es una buena representación de una prueba real. En una prueba real lo más probable es que configuremos un mock, pero luego probemos un bean que utilice el bean mocked. He aquí un ejemplo:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Since we configured `greetingService` as a mock, the `GreetingResource` which uses the `GreetingService` bean, we get the mocked response instead of the response of the regular `GreetingService` bean"
msgstr "Como hemos configurado `greetingService` como un simulacro, el `GreetingResource` que utiliza el bean `GreetingService`, obtenemos la respuesta del simulacro en lugar de la respuesta del bean normal `GreetingService`"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"By default, the `@InjectMock` annotation can be used for any normal CDI scoped bean (e.g. `@ApplicationScoped`, `@RequestScoped`).\n"
"Mocking `@Singleton` beans can be performed by adding the `@MockitoConfig(convertScopes = true)` annotation.\n"
"This will convert the `@Singleton` bean to an `@ApplicationScoped` bean for the test."
msgstr "Por defecto, la anotación `@InjectMock` puede utilizarse para cualquier frijol de ámbito CDI normal (por ejemplo, `@ApplicationScoped` , `@RequestScoped` ). La simulación de los beans `@Singleton` puede realizarse añadiendo la anotación `@MockitoConfig(convertScopes = true)` . Esto convertirá el frijol `@Singleton` en un frijol `@ApplicationScoped` para la prueba."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "This is considered an advanced option and should only be performed if you fully understand the consequences of changing the scope of the bean."
msgstr "Esto se considera una opción avanzada y sólo debe realizarse si se comprenden plenamente las consecuencias de cambiar el alcance del frijol."

#. type: Title ====
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Using Spies instead of Mocks with `@InjectSpy`"
msgstr "Utilizar espías en lugar de burlas con `@InjectSpy`"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Building on the features provided by `InjectMock`, Quarkus also allows users to effortlessly take advantage of link:https://site.mockito.org/[Mockito] for spying on the beans supported by `QuarkusMock`.\n"
"This functionality is available via the `@io.quarkus.test.junit.mockito.InjectSpy` annotation which is available in the `quarkus-junit5-mockito` dependency."
msgstr "Basándose en las funcionalidades proporcionadas por `InjectMock` , Quarkus también permite a los usuarios aprovechar sin esfuerzo link:https://site.mockito.org/[Mockito] para espiar los beans soportados por `QuarkusMock` . Esta funcionalidad está disponible a través de la anotación `@io.quarkus.test.junit.mockito.InjectSpy` que está disponible en la dependencia `quarkus-junit5-mockito` ."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Sometimes when testing you only need to verify that a certain logical path was taken, or you only need to stub out a single method's response while still executing the rest of the methods on the Spied clone. Please see link:https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#13[Mockito documentation - Spying on real objects] for more details on Spy partial mocks.\n"
"In either of those situations a Spy of the object is preferable.\n"
"Using `@InjectSpy`, the previous example could be written as follows:"
msgstr "A veces, al realizar pruebas, sólo necesita verificar que se ha seguido un determinado camino lógico, o sólo necesita stub out de la respuesta de un único método mientras sigue ejecutando el resto de los métodos en el clon espiado. Consulte la link:https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#13[documentación de Mockito - Espiando objetos] reales para obtener más detalles sobre los mocks parciales Spy. En cualquiera de esas situaciones es preferible un Spy del objeto. Utilizando `@InjectSpy` , el ejemplo anterior podría escribirse como sigue:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Instead of overriding the value, we just want to ensure that the greet method on our `GreetingService` was called by this test."
msgstr "En lugar de sobreescribir el valor, sólo queremos asegurarnos de que el método greet en nuestro `GreetingService` fue llamado por esta prueba."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Here we are telling the Spy to return \"hi\" instead of \"hello\". When the `GreetingResource` requests the greeting from `GreetingService` we get the mocked response instead of the response of the regular `GreetingService` bean. Sometimes it's impossible or impractical to use `when(Object)` for stubbing spies. Therefore when using spies please consider `doReturn|Answer|Throw()` family of methods for stubbing."
msgstr "Aquí le estamos diciendo al espía que devuelva \"hola\" en lugar de \"hola\". Cuando `GreetingResource` solicita el saludo a `GreetingService` obtenemos la respuesta burlada en lugar de la respuesta del frijol normal `GreetingService` . A veces es imposible o poco práctico utilizar `when(Object)` para stubbing spies. Por lo tanto, cuando utilice espías tenga en cuenta la familia de métodos `doReturn|Answer|Throw()` para el stubbing."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "We are verifying that we get the mocked response from the Spy."
msgstr "Estamos verificando que recibimos la respuesta burlada del Espía."

#. type: Title ====
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Using `@InjectMock` with `@RestClient`"
msgstr "Utilizando `@InjectMock` con `@RestClient`"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The `@RegisterRestClient` registers the implementation of the rest-client at runtime, and because the bean needs to be a regular scope, you have to annotate your interface with `@ApplicationScoped`."
msgstr "El `@RegisterRestClient` registra la implementación del rest-client en tiempo de ejecución, y como el bean tiene que ser un ámbito regular, hay que anotar su interfaz con `@ApplicationScoped`."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "For the test class here is an example:"
msgstr "Para la clase de prueba aquí hay un ejemplo:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Indicate that this injection point is meant to use an instance of `RestClient`."
msgstr "Indica que este punto de inyección está destinado a utilizar una instancia de `RestClient`."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Mocking with Panache"
msgstr "Burlarse con garbo"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "If you are using the `quarkus-hibernate-orm-panache` or `quarkus-mongodb-panache` extensions, check out the xref:hibernate-orm-panache.adoc#mocking[Hibernate ORM with Panache Mocking] and xref:mongodb-panache.adoc#mocking[MongoDB with Panache Mocking] documentation for the easiest way to mock your data access."
msgstr "Si utiliza las extensiones `quarkus-hibernate-orm-panache` o `quarkus-mongodb-panache`, consulte la documentación de  link:hibernate-orm-panache.html#mocking[Hibernate ORM con Panache Mocking] y  link:mongodb-panache.html#mocking[MongoDB con Panache Mocking] para conocer la forma más sencilla de simular el acceso a los datos."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing Security"
msgstr "Pruebas de seguridad"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "If you are using Quarkus Security, check out the xref:security-testing.adoc[Testing Security] section for information on how to easily test security features of the application."
msgstr "Si está usando Quarkus Security, revise la sección  link:security-testing.html[Probando la Seguridad] para obtener información sobre cómo probar fácilmente las características de seguridad de la aplicación."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Starting services before the Quarkus application starts"
msgstr "Iniciar los servicios antes de que se inicie la aplicación Quarkus"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "A very common need is to start some services on which your Quarkus application depends, before the Quarkus application starts for testing. To address this need, Quarkus provides `@io.quarkus.test.common.QuarkusTestResource` and `io.quarkus.test.common.QuarkusTestResourceLifecycleManager`."
msgstr "Una necesidad muy común es iniciar algunos servicios de los que depende su aplicación Quarkus, antes de que la aplicación Quarkus se inicie para las pruebas. Para atender esta necesidad, Quarkus proporciona `@io.quarkus.test.common.QuarkusTestResource` y `io.quarkus.test.common.QuarkusTestResourceLifecycleManager`."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"By simply annotating any test in the test suite with `@QuarkusTestResource`, Quarkus will run the corresponding `QuarkusTestResourceLifecycleManager` before any tests are run.\n"
"A test suite is also free to utilize multiple `@QuarkusTestResource` annotations, in which case all the corresponding `QuarkusTestResourceLifecycleManager` objects will be run before the tests. When using multiple test resources they can be started concurrently. For that you need to set `@QuarkusTestResource(parallel = true)`."
msgstr "Simplemente anotando cualquier prueba del conjunto de pruebas con `@QuarkusTestResource` , Quarkus ejecutará el correspondiente `QuarkusTestResourceLifecycleManager` antes de que se ejecute cualquier prueba. Un conjunto de pruebas también es libre de utilizar múltiples anotaciones `@QuarkusTestResource` , en cuyo caso todos los objetos `QuarkusTestResourceLifecycleManager` correspondientes se ejecutarán antes que las pruebas. Cuando se utilizan varios recursos de prueba, éstos pueden iniciarse de forma concurrente. Para ello es necesario configurar `@QuarkusTestResource(parallel = true)` ."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Test resources are global, even if they are defined on a test class or custom profile, which means they will all be activated for all tests, even though we do\n"
"remove duplicates. If you want to only enable a test resource on a single test class or test profile, you can use `@QuarkusTestResource(restrictToAnnotatedClass = true)`."
msgstr "Los recursos de prueba son globales, aunque se definan en una clase de prueba o perfil personalizado, lo que significa que se activarán todos para todas las pruebas, aunque eliminemos los duplicados. Si sólo desea activar un recurso de prueba en una única clase o perfil de prueba, puede utilizar `@QuarkusTestResource(restrictToAnnotatedClass = true)` ."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Quarkus provides a few implementations of `QuarkusTestResourceLifecycleManager` out of the box (see `io.quarkus.test.h2.H2DatabaseTestResource` which starts an H2 database, or `io.quarkus.test.kubernetes.client.KubernetesServerTestResource` which starts a mock Kubernetes API server),\n"
"but it is common to create custom implementations to address specific application needs.\n"
"Common cases include starting docker containers using https://www.testcontainers.org/[Testcontainers] (an example of which can be found https://github.com/quarkusio/quarkus/blob/main/test-framework/keycloak-server/src/main/java/io/quarkus/test/keycloak/server/KeycloakTestResourceLifecycleManager.java[here]),\n"
"or starting a mock HTTP server using https://wiremock.org/[Wiremock] (an example of which can be found https://github.com/geoand/quarkus-test-demo/blob/main/src/test/java/org/acme/getting/started/country/WiremockCountries.java[here])."
msgstr "Quarkus proporciona unas cuantas implementaciones de `QuarkusTestResourceLifecycleManager` fuera de la caja (véase `io.quarkus.test.h2.H2DatabaseTestResource` que inicia una base de datos H2, o `io.quarkus.test.kubernetes.client.KubernetesServerTestResource` que inicia un servidor API Kubernetes falso), pero es común crear implementaciones personalizadas para hacer frente a las necesidades específicas de la aplicación. Los casos más comunes incluyen el arranque de contenedores Docker utilizando link:https://www.testcontainers.org/[Testcontainers] (puede encontrar un ejemplo link:https://github.com/geoand/quarkus-test-demo/blob/main/src/test/java/org/acme/getting/started/country/WiremockCountries.java[aquí] ), o el arranque de un servidor HTTP simulado utilizando link:https://wiremock.org/[Wiremock] (puede encontrar un ejemplo link:https://github.com/geoand/quarkus-test-demo/blob/main/src/test/java/org/acme/getting/started/country/WiremockCountries.java[aquí] )."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Altering the test class"
msgstr "Alteración de la clase de prueba"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"When creating a custom `QuarkusTestResourceLifecycleManager` that needs to inject the something into the test class, the `inject` methods can be used.\n"
"If for example you have a test like the following:"
msgstr "Cuando se crea un `QuarkusTestResourceLifecycleManager` personalizado que necesita inyectar algo en la clase de prueba, se pueden utilizar los métodos `inject` . Si por ejemplo tiene una prueba como la siguiente:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Making `MyWireMockResource` inject the `wireMockServer` field can be done as shown in the `inject` method of the following code snippet:"
msgstr "Hacer que `MyWireMockResource` inyecte el campo `wireMockServer` puede hacerse como se muestra en el método `inject` del siguiente fragmento de código:"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"It is worth mentioning that this injection into the test class is not under the control of CDI and happens after CDI has performed\n"
"any necessary injections into the test class."
msgstr "Cabe mencionar que esta inyección en la clase de prueba no está bajo el control de CDI y ocurre después de que CDI haya realizado las inyecciones necesarias en la clase de prueba."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Annotation-based test resources"
msgstr "Recursos de prueba basados en anotaciones"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"It is possible to write test resources that are enabled and configured using annotations. This is enabled by placing the `@QuarkusTestResource`\n"
"on an annotation which will be used to enable and configure the test resource."
msgstr "Es posible escribir recursos de prueba que se habiliten y configuren mediante anotaciones. Esto se habilita colocando el `@QuarkusTestResource` en una anotación que se utilizará para habilitar y configurar el recurso de prueba."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"For example, this defines the `@WithKubernetesTestServer` annotation, which you can use on your tests to activate the `KubernetesServerTestResource`,\n"
"but only for the annotated test class. You can also place them on your `QuarkusTestProfile` test profiles."
msgstr "Por ejemplo, esto define la anotación `@WithKubernetesTestServer` , que puede utilizar en sus pruebas para activar el `KubernetesServerTestResource` , pero sólo para la clase de prueba anotada. También puede colocarlas en sus perfiles de prueba `QuarkusTestProfile` ."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"The `KubernetesServerTestResource` class has to implement the\n"
"`QuarkusTestResourceConfigurableLifecycleManager` interface in order to be configured using the previous annotation:"
msgstr "La clase `KubernetesServerTestResource` debe implementar la interfaz `QuarkusTestResourceConfigurableLifecycleManager` para poder configurarse mediante la anotación anterior:"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"If you want to make the annotation repeatable, the containing annotation type must be annotated with `@QuarkusTestResourceRepeatable`.\n"
"For example, this would define a repeatable `@WithRepeatableTestResource` annotation."
msgstr "Si desea que la anotación sea repetible, el tipo de anotación que la contiene debe estar anotado con `@QuarkusTestResourceRepeatable` . Por ejemplo, esto definiría una anotación repetible `@WithRepeatableTestResource` ."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Hang Detection"
msgstr "Detección de cuelgues"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"`@QuarkusTest` has support for hang detection to help diagnose any unexpected hangs. If no progress is made for a specified\n"
"time (i.e. no JUnit callbacks are invoked) then Quarkus will print a stack trace to the console to help diagnose the hang.\n"
"The default value for this timeout is 10 minutes."
msgstr "`@QuarkusTest` tiene soporte para la detección de cuelgues para ayudar a diagnosticar cualquier cuelgue inesperado. Si no se produce ningún progreso durante un tiempo especificado (es decir, si no se invoca ninguna llamada de retorno de JUnit), Quarkus imprimirá un seguimiento de la pila en la consola para ayudar a diagnosticar el cuelgue. El valor por defecto para este tiempo de espera es de 10 minutos."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"No further action will be taken, and the tests will continue as normal (generally until CI times out), however the printed\n"
"stack traces should help diagnose why the build has failed. You can control this timeout with the\n"
"`quarkus.test.hang-detection-timeout` system property (you can also set this in application.properties, but this won't\n"
"be read until Quarkus has started, so the timeout for Quarkus start will be the default of 10 minutes)."
msgstr "No se tomará ninguna otra acción, y las pruebas continuarán normalmente (generalmente hasta que CI agote el tiempo de espera), sin embargo las trazas de pila impresas deberían ayudar a diagnosticar por qué ha fallado la compilación. Puede controlar este tiempo de espera con la propiedad del sistema `quarkus.test.hang-detection-timeout` (también puede establecerlo en application.properties, pero esto no se leerá hasta que Quarkus se haya iniciado, por lo que el tiempo de espera para el inicio de Quarkus será el predeterminado de 10 minutos)."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Native Executable Testing"
msgstr "Prueba de ejecutables nativos"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"It is also possible to test native executables using `@QuarkusIntegrationTest`. This supports all the features mentioned in this\n"
"guide except injecting into tests (and the native executable runs in a separate non-JVM process this is not really possible)."
msgstr "También es posible probar ejecutables nativos utilizando `@QuarkusIntegrationTest` . Esto soporta todas las características mencionadas en esta guía excepto la inyección en las pruebas (y el ejecutable nativo se ejecuta en un proceso separado no JVM esto no es realmente posible)."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "This is covered in the xref:building-native-image.adoc[Native Executable Guide]."
msgstr "Esto se trata en la  link:building-native-image.html[Guía de ejecutables nativos]."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Using `@QuarkusIntegrationTest`"
msgstr "Utilizando `@QuarkusIntegrationTest`"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"`@QuarkusIntegrationTest` should be used to launch and test the artifact produced by the Quarkus build, and supports testing a jar (of whichever type), a native image or container image.\n"
"Put simply, this means that if the result of a Quarkus build (`mvn package` or `gradle build`) is a jar, that jar will be launched as `java -jar ...` and tests run against it.\n"
"If instead a native image was built, then the application is launched as `./application ...` and again the tests run against the running application.\n"
"Finally, if a container image was created during the build (by including the `quarkus-container-image-jib` or `quarkus-container-image-docker` extensions and having the\n"
"`quarkus.container-image.build=true` property configured), then a container is created and run (this requires the `docker` executable being present)."
msgstr "`@QuarkusIntegrationTest` debe utilizarse para lanzar y probar el artefacto producido por la compilación de Quarkus, y admite la prueba de un jar (del tipo que sea), una imagen nativa o una imagen de contenedor. En pocas palabras, esto significa que si el resultado de una compilación de Quarkus ( `mvn package` o `gradle build` ) es un jar, ese jar se lanzará como `java -jar …​` y las pruebas se ejecutarán contra él. Si en su lugar se construyó una imagen nativa, entonces la aplicación se lanzará como `./application …​` y de nuevo se ejecutarán las pruebas contra la aplicación en ejecución. Por último, si se creó una imagen de contenedor durante la compilación (incluyendo las extensiones `quarkus-container-image-jib` o `quarkus-container-image-docker` y teniendo configurada la propiedad `quarkus.container-image.build=true` ), entonces se crea y ejecuta un contenedor (esto requiere que el ejecutable `docker` esté presente)."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "This is a black box test that supports the same set features and has the same limitations."
msgstr "Se trata de una prueba de caja negra que admite el mismo conjunto de características y tiene las mismas limitaciones."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"As a test annotated with `@QuarkusIntegrationTest` tests the result of the build, it should be run as part of the integration test suite - i.e. by setting `-DskipITs=false` if using Maven or the `quarkusIntTest` task if using Gradle.\n"
"These tests will **not** work if run in the same phase as `@QuarkusTest` as Quarkus has not yet created the final artifact."
msgstr "Como una prueba anotada con `@QuarkusIntegrationTest` comprueba el resultado de la compilación, debe ejecutarse como parte del conjunto de pruebas de integración, es decir, configurando `-DskipITs=false` si se utiliza Maven o la tarea `quarkusIntTest` si se utiliza Gradle. Estas pruebas *no* funcionarán si se ejecutan en la misma fase que `@QuarkusTest` ya que Quarkus aún no ha creado el artefacto final."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The `pom.xml` file contains:"
msgstr "El archivo `pom.xml` contiene:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "This instructs the failsafe-maven-plugin to run integration-test."
msgstr "Esto indica al plugin failsafe-maven que ejecute la prueba de integración."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Then, open the `src/test/java/org/acme/quickstart/GreetingResourceIT.java`. It contains:"
msgstr "A continuación, abra la página `src/test/java/org/acme/quickstart/GreetingResourceIT.java` . Contiene:"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Use another test runner that starts the application from the native file before the tests.\n"
"The executable is retrieved by the _Failsafe Maven Plugin_."
msgstr "Utilice otro ejecutor de pruebas que inicie la aplicación desde el archivo nativo antes de las pruebas. El ejecutable es recuperado por el _plugin de Maven a prueba de fallos_ ."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "We extend our previous tests as a convenience, but you can also implement your tests."
msgstr "Ampliamos nuestras pruebas anteriores por comodidad, pero usted también puede implementar sus pruebas."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "More information can be found in the link:building-native-image#testing-the-native-executable[Testing the native executable Guide]."
msgstr "Encontrará más información en la link:building-native-image#testing-the-native-executable[Guía para probar el ejecutable nativo] ."

#. type: delimited block =
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "When the application is tested using `@QuarkusIntegrationTest` it is launched using the `prod` configuration profile, but this can be changed using the `quarkus.test.integration-test-profile` property."
msgstr "Cuando la aplicación se prueba con `@QuarkusIntegrationTest` , se lanza con el perfil de configuración `prod` , pero éste puede modificarse mediante la propiedad `quarkus.test.integration-test-profile` ."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Launching containers"
msgstr "Lanzamiento de contenedores"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"When `@QuarkusIntegrationTest` results in launching a container (because the application was built with `quarkus.container-image.build` set to `true`), the container is launched on a predictable container network. This facilitates writing integration tests that need to launch services to support the application.\n"
"This means that `@QuarkusIntegrationTest` works out of the box with containers launched via xref:dev-services.adoc[Dev Services], but it also means that it enables using xref:quarkus-test-resource[QuarkusTestLifecycleManager] resources that launch additional containers.\n"
"This can be achieved by having your `QuarkusTestLifecycleManager` implement `io.quarkus.test.common.DevServicesContext.ContextAware`. A simple example could be the following:"
msgstr "Cuando `@QuarkusIntegrationTest` da como resultado el lanzamiento de un contenedor (porque la aplicación se construyó con `quarkus.container-image.build` ajustado a `true` ), el contenedor se lanza en una red de contenedores predecible. Esto facilita la escritura de pruebas de integración que necesitan lanzar servicios para soportar la aplicación. Esto significa que `@QuarkusIntegrationTest` funciona \"out of the box\" con contenedores lanzados a través de xref:dev-services.adoc[Dev Services] , pero también significa que permite utilizar recursos xref:quarkus-test-resource[QuarkusTestLifecycleManager] que lanzan contenedores adicionales. Esto puede lograrse haciendo que su `QuarkusTestLifecycleManager` implemente `io.quarkus.test.common.DevServicesContext.ContextAware` . Un ejemplo sencillo podría ser el siguiente:"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"The container running the resource to test against, for example PostgreSQL via Testcontainers, is assigned an IP address from the container's network.\n"
"Use the container's \"public\" IP from its network and the \"unmapped\" port number to connect to the service.\n"
"The Testcontainers library usually return connection strings without respecting the container network, so additional code is needed to provide Quarkus the \"correct\" connection string using the container's IP on the container network and the _unmapped_ port number."
msgstr "Al contenedor que ejecuta el recurso contra el que se va a realizar la prueba, por ejemplo PostgreSQL a través de Testcontainers, se le asigna una dirección IP de la red del contenedor. Utilice la IP \"pública\" del contenedor de su red y el número de puerto \"no mapeado\" para conectarse al servicio. La biblioteca Testcontainers suele devolver cadenas de conexión sin respetar la red del contenedor, por lo que se necesita código adicional para proporcionar a Quarkus la cadena de conexión \"correcta\" utilizando la IP del contenedor en la red del contenedor y el número de puerto no _mapeado_ ."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The following example illustrates the use with PostgreSQL, but the approach is applicable to all containers."
msgstr "El siguiente ejemplo ilustra el uso con PostgreSQL, pero el enfoque es aplicable a todos los contenedores."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`CustomResource` would be activated on a `@QuarkusIntegrationTest` using `@QuarkusTestResource` as is described in the corresponding section of this doc."
msgstr "`CustomResource` se activaría en un `@QuarkusIntegrationTest` utilizando `@QuarkusTestResource` como se describe en la sección correspondiente de este documento."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Executing against a running application"
msgstr "Ejecutar contra una aplicación en ejecución"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"`@QuarkusIntegrationTest` supports executing tests against an already running instance of the application. This can be achieved by setting the\n"
"`quarkus.http.test-host` system property when running the tests."
msgstr "`@QuarkusIntegrationTest` admite la ejecución de pruebas contra una instancia ya en ejecución de la aplicación. Esto puede lograrse estableciendo la propiedad del sistema `quarkus.http.test-host` al ejecutar las pruebas."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "An example use of this could be the following Maven command, that forces `@QuarkusIntegrationTest` to execute against that is accessible at `http://1.2.3.4:4321`:"
msgstr "Un ejemplo de uso de esto podría ser el siguiente comando de Maven, que obliga a `@QuarkusIntegrationTest` a ejecutarse contra lo que es accesible en `&lt;a href=\"http://1.2.3.4:4321\" class=\"bare\"&gt;http://1.2.3.4:4321&lt;/a&gt;`:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "To test against a running instance that only accepts SSL/TLS connection (example: `https://1.2.3.4:4321`) set the system property `quarkus.http.test-ssl-enabled` to `true`."
msgstr "Para realizar la prueba contra una instancia en ejecución que sólo acepte la conexión SSL/TLS (ejemplo: `https://1.2.3.4:4321` ) establezca la propiedad del sistema `quarkus.http.test-ssl-enabled` en `true` ."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Mixing `@QuarkusTest` with other type of tests"
msgstr "Mezcla de `@QuarkusTest` con otro tipo de pruebas"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Mixing tests annotated with `@QuarkusTest` with tests annotated with either `@QuarkusDevModeTest`, `@QuarkusProdModeTest` or `@QuarkusUnitTest`\n"
"is not allowed in a single execution run (in a single Maven Surefire Plugin execution, for instance),\n"
"while the latter three can coexist."
msgstr "La mezcla de pruebas anotadas con `@QuarkusTest` con pruebas anotadas con `@QuarkusDevModeTest` , `@QuarkusProdModeTest` o `@QuarkusUnitTest` no está permitida en una misma ejecución (en una única ejecución de Maven Surefire Plugin, por ejemplo), mientras que las tres últimas pueden coexistir."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"The reason of this restriction is that `@QuarkusTest` starts a Quarkus server for the whole lifetime of the tests execution run,\n"
"thus preventing the other tests to start their own Quarkus server."
msgstr "La razón de esta restricción es que `@QuarkusTest` inicia un servidor Quarkus durante toda la ejecución de las pruebas, impidiendo así que las demás pruebas inicien su propio servidor Quarkus."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"To alleviate this restriction, the `@QuarkusTest` annotation defines a JUnit 5 `@Tag`: `io.quarkus.test.junit.QuarkusTest`.\n"
"You can use this tag to isolate the `@QuarkusTest` test in a specific execution run, for example with the Maven Surefire Plugin:"
msgstr "Para aliviar esta restricción, la anotación `@QuarkusTest` define una etiqueta JUnit 5 `@Tag` : `io.quarkus.test.junit.QuarkusTest` . Puede utilizar esta etiqueta para aislar la prueba `@QuarkusTest` en una ejecución específica, por ejemplo con el complemento Surefire de Maven:"

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Running `@QuarkusTest` from an IDE"
msgstr "Ejecutar `@QuarkusTest` desde un IDE"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Most IDEs offer the possibility to run a selected class as a JUnit test directly. For this you should set a few properties in the settings of your chosen IDE:"
msgstr "La mayoría de los IDEs ofrecen la posibilidad de ejecutar una clase seleccionada como una prueba JUnit directamente. Para ello, debe establecer algunas propiedades en la configuración del IDE elegido:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`java.util.logging.manager` (see xref:logging.adoc[Logging Guide])"
msgstr "`java.util.logging.manager` (véase  link:logging.html[la guía de registro])"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`maven.home` (only if there are any custom settings in `${maven.home}/conf/settings.xml`, see xref:maven-tooling.adoc[Maven Guide])"
msgstr "`maven.home` (sólo si hay alguna configuración personalizada en `${maven.home}/conf/settings.xml`, véase  link:maven-tooling.html[la Guía de Maven])"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`maven.settings` (in case a custom version of `settings.xml` file should be used for the tests)"
msgstr "`maven.settings` (en caso de que se utilice una versión personalizada del archivo `settings.xml` para las pruebas)"

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Eclipse separate JRE definition"
msgstr "Definición de JRE independiente de Eclipse"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Copy your current \"Installed JRE\" definition into a new one, where you will add the properties as a new VM arguments:"
msgstr "Copie su definición actual de \"JRE instalado\" en una nueva, donde añadirá las propiedades como nuevos argumentos de la VM:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`-Djava.util.logging.manager=org.jboss.logmanager.LogManager`"
msgstr "`-Djava.util.logging.manager=org.jboss.logmanager.LogManager`"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`-Dmaven.home=<path-to-your-maven-installation>`"
msgstr "`-Dmaven.home=&amp;lt;path-to-your-maven-installation&amp;gt;`"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Use this JRE definition as your Quarkus project targeted runtime and the workaround will be applied to any \"Run as JUnit\" configuration."
msgstr "Utiliza esta definición de JRE como tiempo de ejecución objetivo de tu proyecto Quarkus y la solución se aplicará a cualquier configuración \"Run as JUnit\"."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "VSCode \"run with\" configuration"
msgstr "Configuración de VSCode \"run with\" (ejecutar con)"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The `settings.json` placed in the root of your project directory or in the workspace will need the following workaround in your test configuration:"
msgstr "El `settings.json` colocado en la raíz de su directorio de proyecto o en el espacio de trabajo necesitará la siguiente solución en su configuración de prueba:"

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "IntelliJ IDEA JUnit template"
msgstr "Plantilla JUnit de IntelliJ IDEA"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Nothing needed in IntelliJ IDEA because the IDE will pick the `systemPropertyVariables` from the surefire plugin configuration in `pom.xml`."
msgstr "No se necesita nada en IntelliJ IDEA porque el IDE recogerá el `systemPropertyVariables` de la configuración del plugin de surefire en `pom.xml` ."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing Dev Services"
msgstr "Servicios de desarrollo de pruebas"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"By default, tests should just work with xref:dev-services.adoc[Dev Services], however from some use cases you may need access to\n"
"the automatically configured properties in your tests."
msgstr "Por defecto, las pruebas sólo deberían funcionar con xref:dev-services.adoc[los Servicios Dev] , sin embargo, a partir de algunos casos de uso, es posible que necesite acceder a las propiedades configuradas automáticamente en sus pruebas."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"You can do this with `io.quarkus.test.common.DevServicesContext`, which can be injected directly into any `@QuarkusTest`\n"
"or `@QuarkusIntegrationTest`. All you need to do is define a field of type `DevServicesContext` and it will be automatically\n"
"injected. Using this you can retrieve any properties that have been set. Generally this is used to directly connect to a\n"
"resource from the test itself, e.g. to connect to kafka to send messages to the application under test."
msgstr "Puede hacerlo con `io.quarkus.test.common.DevServicesContext` , que puede inyectarse directamente en cualquier `@QuarkusTest` o `@QuarkusIntegrationTest` . Todo lo que necesita hacer es definir un campo de tipo `DevServicesContext` y se inyectará automáticamente. Utilizándolo podrá recuperar cualquier propiedad que se haya establecido. Generalmente esto se utiliza para conectarse directamente a un recurso desde la propia prueba, por ejemplo, para conectarse a kafka para enviar mensajes a la aplicación bajo prueba."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Injection is also supported into objects that implement `io.quarkus.test.common.DevServicesContext.ContextAware`. If you\n"
"have a field that implements `io.quarkus.test.common.DevServicesContext.ContextAware` Quarkus will call the\n"
"`setIntegrationTestContext` method to pass the context into this object. This allows client logic to be encapsulated in\n"
"a utility class."
msgstr "También se admite la inyección en objetos que implementen `io.quarkus.test.common.DevServicesContext.ContextAware` . Si tiene un campo que implemente `io.quarkus.test.common.DevServicesContext.ContextAware` Quarkus llamará al método `setIntegrationTestContext` para pasar el contexto a este objeto. Esto permite encapsular la lógica del cliente en una clase de utilidad."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"`QuarkusTestResourceLifecycleManager` implementations can also implement `ContextAware` to get access to these properties,\n"
"which allows you to set up the resource before Quarkus starts (e.g. configure a KeyCloak instance, add data to a database etc)."
msgstr "`QuarkusTestResourceLifecycleManager` también pueden implementar `ContextAware` para acceder a estas propiedades, lo que permite configurar el recurso antes de que Quarkus se inicie (por ejemplo, configurar una instancia de KeyCloak, añadir datos a una base de datos, etc.)."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"For `@QuarkusIntegrationTest` tests that result in launcher the application as a container, `io.quarkus.test.common.DevServicesContext` also provides access to the id of the container network on which the application container was launched (via the `containerNetworkId` method).\n"
"This can be used by `QuarkusTestResourceLifecycleManager` that need to launch additional containers that the application will communicate with."
msgstr "Para las pruebas `@QuarkusIntegrationTest` que dan como resultado el lanzamiento de la aplicación como un contenedor, `io.quarkus.test.common.DevServicesContext` también proporciona acceso al id de la red de contenedores en la que se lanzó el contenedor de la aplicación (a través del método `containerNetworkId` ). Esto puede ser utilizado por `QuarkusTestResourceLifecycleManager` que necesite lanzar contenedores adicionales con los que se comunicará la aplicación."

#. type: Title ==
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Testing Components"
msgstr "Componentes de prueba"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "This feature is experimental and the API may change in the future."
msgstr "Esta función es experimental y la API puede cambiar en el futuro."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"In Quarkus, the component model is built on top CDI.\n"
"Therefore, Quarkus provides the `QuarkusComponentTestExtension`, a JUnit extension to ease the testing of components and mocking of their dependencies.\n"
"This extension is available in the `quarkus-junit5-component` dependency."
msgstr "En Quarkus, el modelo de componentes se construye sobre CDI. Por lo tanto, Quarkus proporciona la `QuarkusComponentTestExtension` , una extensión de JUnit para facilitar la prueba de componentes y el mocking de sus dependencias. Esta extensión está disponible en la dependencia `quarkus-junit5-component` ."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Let's have a component `Foo`:"
msgstr "Tengamos un componente `Foo` :"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`Foo` is an `@ApplicationScoped` CDI bean."
msgstr "`Foo` es un frijol CDI de `@ApplicationScoped` ."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`Foo` depends on `Charlie` which declares a method `ping()`."
msgstr "`Foo` depende de `Charlie` que declara un método `ping()`."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "`Foo` depends on the config property `bar`."
msgstr "`Foo` depende de la propiedad config `bar`."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Then a component test could look like:"
msgstr "Entonces, una prueba de componentes podría tener este aspecto:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The `QuarkusComponentTest` annotation registers the JUnit extension."
msgstr "La anotación `QuarkusComponentTest` registra la extensión JUnit."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "Set a configuration property for the test."
msgstr "Establezca una propiedad de configuración para la prueba."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The test injects the component under the test. The types of all fields annotated with `@Inject` are considered the component types under test. You can also specify additional component classes via `@QuarkusComponentTest#value()`."
msgstr "La prueba inyecta el componente bajo prueba. Los tipos de todos los campos anotados con `@Inject` se consideran los tipos del componente bajo prueba. También puede especificar clases de componentes adicionales a través de `@QuarkusComponentTest#value()` ."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The test also injects `Charlie`, a dependency for which a synthetic `@Singleton` bean is registered automatically. The injected reference is an \"unconfigured\" Mockito mock."
msgstr "La prueba también inyecta `Charlie` , una dependencia para la que se registra automáticamente un bean sintético de `@Singleton` . La referencia inyectada es un mockito Mockito \"no configurado\"."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "We can leverage the Mockito API in a test method to configure the behavior."
msgstr "Podemos aprovechar la API de Mockito en un método de prueba para configurar el comportamiento."

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"If you need the full control over the `QuarkusComponentTestExtension` configuration then you can use the `@RegisterExtension` annotation and configure the extension programatically.\n"
"The test above could be rewritten like:"
msgstr "Si necesita un control total sobre la configuración de `QuarkusComponentTestExtension` , puede utilizar la anotación `@RegisterExtension` y configurar la extensión mediante programación. La prueba anterior podría reescribirse como:"

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "The `QuarkusComponentTestExtension` is configured in a static field."
msgstr "El `QuarkusComponentTestExtension` se configura en un campo estático."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Lifecycle"
msgstr "Ciclo de vida"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"So what exactly does the `QuarkusComponentTest` do?\n"
"It starts the CDI container and registers a dedicated xref:config-reference.adoc[configuration object] during the `before all` test phase.\n"
"The container is stopped and the config is released during the `after all` test phase.\n"
"The fields annotated with `@Inject` and `@InjectMock` are injected after a test instance is created and unset before a test instance is destroyed.\n"
"Finally, the CDI request context is activated and terminated per each test method."
msgstr "¿Qué hace exactamente `QuarkusComponentTest` ? Inicia el contenedor CDI y registra un xref:config-reference.adoc[objeto de configuración] dedicado durante la fase de prueba de `before all` . El contenedor se detiene y el objeto de configuración se libera durante la fase de prueba `after all` . Los campos anotados con `@Inject` y `@InjectMock` se inyectan después de que se cree una instancia de prueba y se liberan antes de que se destruya una instancia de prueba. Por último, el contexto de solicitud CDI se activa y finaliza por cada método de prueba."

#. type: Plain text
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid "By default, a new test instance is created for each test method. Therefore, a new CDI container is started for each test method. However, if the test class is annotated with `@org.junit.jupiter.api.TestInstance` and the test instance lifecycle is set to `org.junit.jupiter.api.TestInstance.Lifecycle.PER_CLASS` then the CDI container will be shared across all test method executions of a given test class."
msgstr "Por defecto, se crea una nueva instancia de prueba para cada método de prueba. Por lo tanto, se inicia un nuevo contenedor CDI para cada método de prueba. Sin embargo, si la clase de prueba está anotada con `@org.junit.jupiter.api.TestInstance` y el ciclo de vida de la instancia de prueba se establece en `org.junit.jupiter.api.TestInstance.Lifecycle.PER_CLASS` , el contenedor CDI se compartirá en todas las ejecuciones de métodos de prueba de una clase de prueba determinada."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Auto Mocking Unsatisfied Dependencies"
msgstr "Simulación automática de dependencias insatisfechas"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Unlike in regular CDI environments the test does not fail if a component injects an unsatisfied dependency.\n"
"Instead, a synthetic bean is registered automatically for each combination of required type and qualifiers of an injection point that resolves to an unsatisfied dependency.\n"
"The bean has the `@Singleton` scope so it's shared across all injection points with the same required type and qualifiers.\n"
"The injected reference is an _unconfigured_ Mockito mock.\n"
"You can inject the mock in your test and leverage the Mockito API to configure the behavior."
msgstr "A diferencia de los entornos CDI normales, la prueba no falla si un componente inyecta una dependencia no satisfecha. En su lugar, se registra automáticamente un bean sintético para cada combinación de tipo requerido y calificadores de un punto de inyección que resuelva una dependencia no satisfecha. El bean tiene el ámbito `@Singleton` , por lo que se comparte en todos los puntos de inyección con el mismo tipo requerido y los mismos calificadores. La referencia inyectada es un simulacro de Mockito _no configurado_ . Puede inyectar el mock en su prueba y aprovechar la API de Mockito para configurar el comportamiento."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy, no-wrap
msgid "Custom Mocks For Unsatisfied Dependencies"
msgstr "Mocks personalizados para dependencias insatisfechas"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"Sometimes you need the full control over the bean attributes and maybe even configure the default mock behavior.\n"
"You can use the mock configurator API via the `QuarkusComponentTestExtension#mock()` method."
msgstr "A veces necesita el control total sobre los atributos del bean y quizás incluso configurar el comportamiento del mock por defecto. Puede utilizar la API del configurador de simulacros a través del método `QuarkusComponentTestExtension#mock()` ."

#. type: Title ===
#: _versions/3.2/guides/getting-started-testing.adoc
#, no-wrap
msgid "Configuration"
msgstr "Configuración"

#: _versions/3.2/guides/getting-started-testing.adoc
#, fuzzy
msgid ""
"A dedicated `SmallRyeConfig` is registered during the `before all` test phase.\n"
"Moreover, it's possible to set the configuration properties via the `QuarkusComponentTestExtension#configProperty(String, String)` method or the `@TestConfigProperty` annotation.\n"
"If you only need to use the default values for missing config properties, then the `QuarkusComponentTestExtension#useDefaultConfigProperties()` or `@QuarkusComponentTest#useDefaultConfigProperties()` might come in useful."
msgstr "Durante la fase de prueba `before all` se registra un `SmallRyeConfig` específico. Además, es posible establecer las propiedades de configuración mediante el método `QuarkusComponentTestExtension#configProperty(String, String)` o la anotación `@TestConfigProperty` . Si sólo necesita utilizar los valores predeterminados para las propiedades de configuración que faltan, entonces los métodos `QuarkusComponentTestExtension#useDefaultConfigProperties()` o `@QuarkusComponentTest#useDefaultConfigProperties()` pueden resultarle útiles."
