# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-03 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy, no-wrap
msgid "Simplified Hibernate ORM with Panache and Kotlin"
msgstr "ORM de Hibernate simplificado con Panache y Kotlin"

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"Hibernate ORM is the de facto standard Jakarta Persistence (formerly known as JPA) implementation and is well-known in the Java ecosystem. Hibernate ORM with Panache offers a\n"
"new layer atop this familiar framework.  This guide will not dive in to the specifics of either as those are already\n"
"covered in the xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache guide].  In this guide, we'll cover the Kotlin specific changes\n"
"needed to use Hibernate ORM with Panache in your Kotlin-based Quarkus applications."
msgstr "Hibernate ORM es la implementación estándar de facto de Jakarta Persistence (antes conocida como JPA) y es muy conocida en el ecosistema Java. Hibernate ORM con Panache ofrece una nueva capa sobre este marco familiar. Esta guía no se adentrará en los detalles específicos de ninguno de los dos, ya que éstos ya se tratan en la xref:hibernate-orm-panache.adoc[guía] Hibernate ORM con Panache. En esta guía, cubriremos los cambios específicos de Kotlin necesarios para utilizar Hibernate ORM con Panache en sus aplicaciones Quarkus basadas en Kotlin."

#. type: Plain text
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid "When using the kotlin version of Hibernate ORM with Panache, note that the `PanacheEntity`, `PanacheQuery` and `PanacheRepository` are in a different package: `io.quarkus.hibernate.orm.panache.kotlin`."
msgstr "Cuando utilice la versión kotlin de Hibernate ORM con Panache, tenga en cuenta que `PanacheEntity` , `PanacheQuery` y `PanacheRepository` se encuentran en un paquete diferente: `io.quarkus.hibernate.orm.panache.kotlin` ."

#. type: Title ==
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, no-wrap
msgid "First: an example"
msgstr "Primero: un ejemplo"

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"As we saw in the Hibernate with Panache guide, it allows us to extend the functionality in our entities and repositories (also known as DAOs) with some automatically\n"
"provided functionality.  When using Kotlin, the approach is very similar to what we see in the Java version with a slight\n"
"change or two.  To Panache-enable your entity, you would define it something like:"
msgstr "Como vimos en la guía Hibernate con Panache, nos permite ampliar la funcionalidad de nuestras entidades y repositorios (también conocidos como DAO) con alguna funcionalidad proporcionada automáticamente. Cuando se utiliza Kotlin, el enfoque es muy similar a lo que vemos en la versión Java con un ligero cambio o dos. Para habilitar con Panache su entidad, usted la definiría algo como"

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"As you can see our entities remain simple.  There is, however, a slight difference from the Java version.  The Kotlin\n"
"language doesn't support the notion of static methods in quite the same way as Java does.  Instead, we must use a\n"
"https://kotlinlang.org/docs/tutorials/kotlin-for-py/objects-and-companion-objects.html#companion-objects[companion object]:"
msgstr "Como puede ver, nuestras entidades siguen siendo sencillas. Sin embargo, hay una ligera diferencia con respecto a la versión Java. El lenguaje Kotlin no admite la noción de métodos estáticos del mismo modo que Java. En su lugar, debemos utilizar un link:https://kotlinlang.org/docs/tutorials/kotlin-for-py/objects-and-companion-objects.html#companion-objects[objeto compañero] :"

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"The companion object holds all the methods not related to a specific instance allowing for general management and\n"
"querying bound to a specific type."
msgstr "El objeto complementario contiene todos los métodos no relacionados con una instancia específica, lo que permite la gestión general y la consulta vinculada a un tipo específico."

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"Here there are options, but we've chosen the `lateinit` approach.  This allows us to declare these fields as non-null\n"
"knowing they will be properly assigned either by the constructor (not shown) or by hibernate loading data from the\n"
"database."
msgstr "Aquí hay opciones, pero hemos elegido el enfoque `lateinit` . Esto nos permite declarar estos campos como no nulos sabiendo que serán asignados correctamente ya sea por el constructor (no mostrado) o por hibernate cargando datos de la base de datos."

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"These types differ from the Java types mentioned in those tutorials.  For Kotlin support, all the Panache\n"
"types will be found in the `io.quarkus.hibernate.orm.panache.kotlin` package.  This subpackage allows for the distinction\n"
"between the Java and Kotlin variants and allows for both to be used unambiguously in a single project."
msgstr "Estos tipos difieren de los tipos Java mencionados en esos tutoriales. Para la compatibilidad con Kotlin, todos los tipos Panache se encontrarán en el paquete `io.quarkus.hibernate.orm.panache.kotlin` . Este subpaquete permite distinguir entre las variantes Java y Kotlin y utilizar ambas sin ambigüedad en un mismo proyecto."

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"In the Kotlin version, we've simply moved the bulk of the link:https://www.martinfowler.com/eaaCatalog/activeRecord.html[`active record pattern`]\n"
"functionality to the `companion object`.  Apart from this slight change, we can then work with our types in ways that map easily\n"
"from the Java side of world."
msgstr "En la versión Kotlin, simplemente hemos trasladado el grueso de la link:https://www.martinfowler.com/eaaCatalog/activeRecord.html[active record pattern] funcionalidad a la `companion object` . Aparte de este ligero cambio, podemos entonces trabajar con nuestros tipos de formas que se mapean fácilmente desde el lado Java del mundo."

#. type: Title ==
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, no-wrap
msgid "Solution"
msgstr "Solución"

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid "The solution is located in the `hibernate-orm-panache-kotlin-quickstart` link:{quickstarts-tree-url}/hibernate-orm-panache-kotlin-quickstart[directory]."
msgstr "La solución se encuentra en el link:{quickstarts-tree-url}/hibernate-orm-panache-kotlin-quickstart[directorio] `hibernate-orm-panache-kotlin-quickstart` ."

#. type: Title ==
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy, no-wrap
msgid "Setting up and configuring Hibernate ORM with Panache and Kotlin"
msgstr "Instalación y configuración de Hibernate ORM con Panache y Kotlin"

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"To get started using Hibernate ORM with Panache and Kotlin, you can, generally, follow the steps laid out in the Java tutorial. The biggest\n"
"change to configuring your project is the Quarkus artifact to include.  You can, of course, keep the Java version if you\n"
"need but if all you need are the Kotlin APIs then include the following dependency instead:"
msgstr "Para empezar a utilizar Hibernate ORM con Panache y Kotlin, puede, en general, seguir los pasos expuestos en el tutorial de Java. El mayor cambio a la hora de configurar su proyecto es el artefacto de Quarkus que debe incluir. Puede, por supuesto, mantener la versión Java si lo necesita, pero si todo lo que necesita son las API de Kotlin, incluya en su lugar la siguiente dependencia:"

#. type: Block title
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"Note the addition of `-kotlin` on the end. Generally you'll only need this version but if your project will be using\n"
"both Java and Kotlin code, you can safely include both artifacts."
msgstr "Observe la adición de `-kotlin` al final. Generalmente sólo necesitará esta versión, pero si su proyecto va a utilizar tanto código Java como Kotlin, puede incluir ambos artefactos de forma segura."

#. type: Block title
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, no-wrap
msgid "Using the repository pattern"
msgstr "Uso del patrón de repositorio"

#. type: Title ===
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, no-wrap
msgid "Defining your entity"
msgstr "Definir su entidad"

#. type: Plain text
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid "When using the repository pattern, you can define your entities as regular Jakarta Persistence entities."
msgstr "Cuando utilice el patrón de repositorio, puede definir sus entidades como entidades normales de Jakarta Persistence."

#. type: Title ===
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, no-wrap
msgid "Defining your repository"
msgstr "Definir el repositorio"

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"When using Repositories, you get the exact same convenient methods as with the active record pattern, injected in your Repository,\n"
"by making them implement `PanacheRepository`:"
msgstr "Cuando utilice Repositorios, obtendrá exactamente los mismos métodos convenientes que con el patrón de registro activo, inyectados en su Repositorio, haciendo que implementen `PanacheRepository` :"

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"All the operations that are defined on `PanacheEntityBase` are available on your repository, so using it\n"
"is exactly the same as using the active record pattern, except you need to inject it:"
msgstr "Todas las operaciones que se definen en `PanacheEntityBase` están disponibles en su repositorio, por lo que utilizarlo es exactamente igual que utilizar el patrón de registro activo, salvo que necesita inyectarlo:"

#. type: Title ===
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, no-wrap
msgid "Most useful operations"
msgstr "Operaciones más útiles"

#. type: Plain text
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
msgid "Once you have written your repository, here are the most common operations you will be able to perform:"
msgstr "Una vez que haya escrito su repositorio, estas son las operaciones más comunes que podrá realizar:"

#. type: Plain text
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
msgid "All `list` methods have equivalent `stream` versions."
msgstr "Todos los métodos de `list` tienen versiones equivalentes de `stream`."

#. type: Plain text
#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid "The `stream` methods require a transaction to work."
msgstr "Los métodos de `stream` requieren una transacción para funcionar."

#: _versions/3.2/guides/hibernate-orm-panache-kotlin.adoc
#, fuzzy
msgid ""
"For more examples, please consult the xref:hibernate-orm-panache.adoc[Java version] for complete details.  Both APIs\n"
"are the same and work identically except for some Kotlin-specific tweaks to make things feel more natural to\n"
"Kotlin developers.  These tweaks include things like better use of nullability and the lack of `Optional` on API\n"
"methods."
msgstr "Para más ejemplos, consulte la xref:hibernate-orm-panache.adoc[versión Java] para obtener todos los detalles. Ambas API son iguales y funcionan de forma idéntica, excepto por algunos retoques específicos de Kotlin para hacer que las cosas resulten más naturales a los desarrolladores de Kotlin. Estos retoques incluyen cosas como un mejor uso de la anulabilidad y la ausencia de `Optional` en los métodos de la API."
