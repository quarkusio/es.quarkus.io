# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-03 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "Funqy HTTP Binding (Standalone)"
msgstr "Enlace HTTP Funqy (Independiente)"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"The guide walks through quickstart code to show you how you can deploy Funqy as a\n"
"standalone service and invoke on Funqy functions using HTTP."
msgstr "La guía recorre un código de inicio rápido para mostrarle cómo puede desplegar Funqy como un servicio independiente e invocar en funciones de Funqy utilizando HTTP."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"The Funqy HTTP binding is not a replacement for REST over HTTP.  Because Funqy\n"
"needs to be portable across a lot of different protocols and function providers its HTTP binding\n"
"is very minimalistic and you will lose REST features like linking and the ability to leverage\n"
"HTTP features like cache-control and conditional GETs.  You may want to consider using Quarkus's\n"
"Jakarta REST, Spring MVC, or Vert.x Web Reactive Routes support instead, although Funqy will have less overhead\n"
"than these alternatives (except Vert.x which is still super fast)."
msgstr "La vinculación HTTP de Funqy no es un sustituto de REST sobre HTTP. Debido a que Funqy necesita ser portátil a través de una gran cantidad de diferentes protocolos y proveedores de funciones, su vinculación HTTP es muy minimalista y perderá características REST como la vinculación y la capacidad de aprovechar las características HTTP como el control de caché y GETs condicionales. Es posible que desee considerar el uso de Jakarta REST de Quarkus, Spring MVC, o el soporte Vert.x Web Reactive Routes en su lugar, aunque Funqy tendrá menos sobrecarga que estas alternativas (excepto Vert.x que sigue siendo super rápido)."

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
msgid "Read about xref:funqy.adoc[Funqy Basics].  This is a short read!"
msgstr "Lea sobre xref:funqy.html[los fundamentos de Funqy]. Esta es una lectura corta!"

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, no-wrap
msgid "The Quickstart"
msgstr "El inicio rápido"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "The solution is located in the `funqy-http-quickstart` link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[directory]."
msgstr "La solución se encuentra en el link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[directorio] `funqy-http-quickstart` ."

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, no-wrap
msgid "The Code"
msgstr "El Código"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"If you look at the Java code, you'll see that there is no HTTP specific API.  Its just simple Java methods\n"
"annotated with `@Funq`.  Simple, easy, straightforward."
msgstr "Si echa un vistazo al código Java, verá que no hay ninguna API específica para HTTP. Son simples métodos Java anotados con `@Funq` . Simple, fácil, sencillo."

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "Maven Dependencies"
msgstr "Dependencias de Maven"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "To write Funqy HTTP functions, simply include the `quarkus-funqy-http` dependency into your Quarkus `pom.xml` file:"
msgstr "Para escribir funciones HTTP de Funqy, simplemente incluya la dependencia `quarkus-funqy-http` en su archivo Quarkus `pom.xml`:"

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "Build Project"
msgstr "Proyecto de construcción"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "This starts your functions in Quarkus dev mode."
msgstr "Esto inicia sus funciones en el modo de desarrollo de Quarkus."

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "Execute Funqy HTTP functions"
msgstr "Ejecutar las funciones HTTP de Funqy"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"The URL path to execute a function is the function name.  For example if your function name is `foo` then the URL path\n"
"to execute the function would be `/foo`."
msgstr "La ruta URL para ejecutar una función es el nombre de la función. Por ejemplo si el nombre de su función es `foo` entonces la ruta URL para ejecutar la función sería `/foo` ."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"The HTTP POST or GET methods can be used to invoke on a function.  The return value of the function\n"
"is marshalled to JSON using the Jackson JSON library.  Jackson annotations can be used.  If your function\n"
"has an input parameter, a POST invocation must use JSON as the input type.  Jackson is also used here for unmarshalling."
msgstr "Se pueden utilizar los métodos HTTP POST o GET para invocar a una función. El valor de retorno de la función es marshalled a JSON utilizando la biblioteca Jackson JSON. Se pueden utilizar anotaciones Jackson. Si su función tiene un parámetro de entrada, una invocación POST debe utilizar JSON como tipo de entrada. Jackson también se utiliza aquí para unmarshalling."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"You can invoke the `hello` function defined in link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java]\n"
"by pointing your browser to http://localhost:8080/hello"
msgstr "Puede invocar la función `hello` definida en link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java] dirigiendo su navegador a http://localhost:8080/hello ."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"Invoking the other functions in the quickstart requires an HTTP POST.\n"
"To execute the `greet` function defined in link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/GreetingFunction.java[GreetingFunction.java]\n"
"invoke this curl script."
msgstr "La invocación de las demás funciones del inicio rápido requiere un POST HTTP. Para ejecutar la función `greet` definida en link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/GreetingFunction.java[GreetingFunction.java] invoque este script curl."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"Primitive types can also be passed as input using the standard JSON mapping for them.\n"
"To execute the `toLowerCase` function defined in link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java]\n"
"invoke this curl script:"
msgstr "Los tipos primitivos también pueden pasarse como entrada utilizando el mapeo JSON estándar para ellos. Para ejecutar la función `toLowerCase` definida en link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java] invoque este script curl:"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"To execute the `double` function defined in link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java]\n"
"invoke this curl script:"
msgstr "Para ejecutar la función `double` definida en link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart/src/main/java/org/acme/funqy/PrimitiveFunctions.java[PrimitiveFunctions.java] invoque este script curl:"

#. type: Title ==
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy, no-wrap
msgid "GET Query Parameter Mapping"
msgstr "Asignación de parámetros de consulta GET"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"For GET requests, the Funqy HTTP Binding also has a query parameter mapping for function input parameters.\n"
"Only bean style classes and `java.util.Map` can be used for your input parameter.  For bean style\n"
"classes, query parameter names are mapped to properties on the bean class.  Here's an example of a simple\n"
"`Map`:"
msgstr "Para las peticiones GET, el enlace HTTP de Funqy también dispone de un mapeo de parámetros de consulta para los parámetros de entrada de la función. Sólo se pueden utilizar clases de estilo bean y `java.util.Map` para su parámetro de entrada. Para las clases de estilo bean, los nombres de los parámetros de consulta se mapean a propiedades de la clase bean. He aquí un ejemplo de un simple `Map` :"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"Key values must be a primitive type (except char) or `String`.  Values can be primitives (except char), `String`, `OffsetDateTime` or a complex\n"
"bean style class.  For the above example, here's the corresponding curl request:"
msgstr "Los valores clave deben ser un tipo primitivo (excepto char) o `String` . Los valores pueden ser primitivos (excepto char), `String` , `OffsetDateTime` o una clase compleja estilo frijol. Para el ejemplo anterior, he aquí la solicitud curl correspondiente:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "The `map` input parameter of the `hello` function would have the key value pairs: `a`->1, `b`->2."
msgstr "El parámetro de entrada `map` de la función `hello` tendría los pares de valores clave: `a`→1, `b`→2."

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "Bean style classes can also be use as the input parameter type.  Here's an example:"
msgstr "Las clases de estilo de los frijoles también se pueden utilizar como tipo de parámetro de entrada. He aquí un ejemplo:"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"Property values can be any primitive type except `char`. It can also be `String`, and `OffsetDateTime`.\n"
"`OffsetDateTime` query param values must be in ISO-8601 format."
msgstr "Los valores de las propiedades pueden ser de cualquier tipo primitivo excepto `char` . También puede ser `String` , y `OffsetDateTime` . Los valores de los parámetros de consulta `OffsetDateTime` deben estar en formato ISO-8601."

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "You can invoke on this using an HTTP GET and query parameters:"
msgstr "Se puede invocar sobre esto usando un GET HTTP y parámetros de consulta:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "In the above request, the query parameter names are mapped to corresponding properties in the input class."
msgstr "En la solicitud anterior, los nombres de los parámetros de consulta se asignan a las propiedades correspondientes en la clase de entrada."

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "The input class can also have nested bean classes.  Expanding on the previous example:"
msgstr "La clase de entrada también puede tener clases bean anidadas. Ampliando el ejemplo anterior:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "In this case, query parameters for nested values use the `.` notation.  For example:"
msgstr "En este caso, los parámetros de consulta para los valores anidados utilizan la notación `.`. Por ejemplo:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "`java.util.List` and `Set` are also supported as property values.  For example:"
msgstr "`java.util.List` y `Set` también se admiten como valores de propiedad. Por ejemplo:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "To invoke a GET request, just list the `pets` query parameter multiple times."
msgstr "Para invocar una solicitud GET, basta con enumerar el parámetro de consulta `pets` varias veces."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"For more complex types, `List` and `Set` members must have an identifier in the\n"
"query parameter.  For example:"
msgstr "Para tipos más complejos, los miembros `List` y `Set` deben tener un identificador en el parámetro de consulta. Por ejemplo:"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"Each `kids` query parameter must identify the kid they are referencing so that\n"
"the runtime can figure out which\n"
"property values go to which members in the list.  Here's the curl request:"
msgstr "Cada parámetro de consulta de `kids` debe identificar al chico al que hacen referencia para que el tiempo de ejecución pueda averiguar qué valores de propiedad van a qué miembros de la lista. Aquí está la petición curl:"

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"The above URL uses the value `1` and `2` to identity the target member of the list, but any unique\n"
"string can be used."
msgstr "La URL anterior utiliza el valor `1` y `2` para identificar al miembro de destino de la lista, pero se puede utilizar cualquier cadena única."

#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid ""
"A property can also be a `java.util.Map`.  The key of the map can be any primitive type and `String`.\n"
"For example:"
msgstr "Una propiedad también puede ser un `java.util.Map` . La clave del mapa puede ser cualquier tipo primitivo y `String` . Por ejemplo:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "The corresponding call would look like this:"
msgstr "La llamada correspondiente tendría el siguiente aspecto:"

#. type: Plain text
#: _versions/3.2/guides/funqy-http.adoc
#, fuzzy
msgid "If your `Map` value is a complex type, then just continue the notation by adding the property to set at the end."
msgstr "Si el valor de `Map` es de tipo complejo, sólo hay que continuar la notación añadiendo la propiedad a establecer al final."
